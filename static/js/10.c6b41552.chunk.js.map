{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","hooks/useDocumentTitle.ts","components/Rating/Rating.tsx","components/Rating/Rating.styled.ts","components/Footer/Footer.styled.ts","components/Footer/Footer.tsx","views/Profile/Profile.styled.ts","components/PriceList/PriceListElement/PriceListElement.styled.ts","components/PriceList/PriceListElement/PriceListElement.tsx","components/Gallery/Gallery/Gallery.styled.ts","components/Gallery/Gallery/Gallery.tsx","components/PriceList/PriceList/PriceList.styled.ts","components/PriceList/PriceList/PriceList.tsx","components/RatingInput/RatingInput.tsx","components/ReviewForm/ReviewForm.styled.ts","components/ReviewForm/ReviewForm.tsx","views/Profile/Profile.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","title","useEffect","document","Rating","props","rating","numberOfRatings","minValue","maxValue","roundedRating","Math","round","stars","i","push","key","active","toFixed","map","s","defaultProps","RatingStyled","RatingValue","Star","golden","gray","RatingNumber","show","keyframes","FooterStyled","footer","white","FooterStyledInner","Footer","ProfileStyled","ContactButton","Link","MainWrapper","AvatarImage","GeneralInfo","Name","City","Description","MainRating","ProfileSection","ElementMissingInfo","Info","PriceListElementStyled","Price","DeleteButton","PriceListElement","elementName","price","editable","Fragment","onClick","onDelete","id","Gallery","useState","modalImageIndex","setModalImageIndex","isImageModalOpened","setImageModalOpened","images","className","src","index","onImageClick","isEditable","onImageDelete","mainSrc","nextSrc","length","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","animationDuration","PriceListStyled","PriceList","priceList","element","RatingInput","value","setValue","visibleValue","setVisibleValue","cb","onMouseEnter","onMouseLeave","style","cursor","ReviewFormInfo","LoginFirstMessage","ReviewList","ReviewElement","ReviewTop","ReviewLeft","ReviewRight","ReviewLogin","ReviewDate","ReviewForm","profile","ratings","reviews","setReviews","inProgress","setInProgress","addedReviewId","setAddedReviewId","forEach","e","currentUser","authorId","date","Date","createdAt","toLocaleDateString","console","log","Avatar","url","author","avatar","displayName","ratingValue","undefined","content","isAuthenticated","enableReinitialize","initialValues","find","r","onSubmit","values","data","reviewId","ProfileApi","updateReview","then","res","sumOfReviews","avgRating","setRatingData","catch","err","profileId","addReview","revs","render","setFieldValue","htmlFor","name","placeholder","required","type","BarLoader","to","connect","state","auth","match","params","useDocumentTitle","setProfile","totalRating","setTotalRating","numberOfReviews","setNumberOfReviews","getProfile","n","isFull","owner","city","pathname","newConversationUserId","ownerId","descr","STATIC_FILES_ROOT","srcPath","priceListElements"],"mappings":"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","file":"static/js/10.c6b41552.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Field, ErrorMessage } from \"formik\";\r\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\r\n\r\nexport const InfoBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border-radius: 5px;\r\n    font-size: 1.4rem;\r\n    background: #fff87d;\r\n`;\r\n\r\nexport const ErrorBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    font-size: 1.4rem;\r\n    border-radius: 5px;\r\n    color: white;\r\n    background: #ff4230;\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem;\r\n    font-size: 1.5rem;\r\n    width: 50%;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        padding: 1rem;\r\n        width: 80%;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        padding: 1rem;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nexport const FormGroup2 = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1rem;\r\n`\r\n\r\nexport const FieldStyled = styled(Field)`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    transition: all 0.2s;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border: 1px solid ${COLORS.blue};\r\n        box-shadow: 0 0 5px ${COLORS.blue};\r\n    }\r\n\r\n    &[type=\"radio\"] {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n        cursor: pointer;\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n    }\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled(ErrorMessage)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    color: red;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n    box-sizing: border-box;\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\ntype SubmitButtonProps = {\r\n    light?: boolean\r\n}\r\n\r\nexport const SubmitButton = styled.button<SubmitButtonProps>`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${COLORS.blue};\r\n    border-radius: 5px;\r\n    transition: background 0.2s;\r\n\r\n    :hover {\r\n        background: ${COLORS.darkblue};\r\n    }\r\n\r\n    ${({ light }) =>\r\n        light && `\r\n            background: #226aff;\r\n            :hover {\r\n                background: #042bfc;\r\n            }\r\n        `\r\n    }\r\n`;\r\n\r\nexport const FormInfo = styled.div`\r\n    width: 100%;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    \r\n`\r\nexport const FormInfoContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    padding-bottom: 1rem;\r\n`","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 64px;\r\n    height: 64px;\r\n    z-index: 1000;\r\n    div {\r\n        position: absolute;\r\n        top: 27px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        background: ${COLORS.blue};\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from \"react\";\r\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LoaderStyled>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </LoaderStyled>\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import { useEffect } from 'react'\r\n\r\nexport default (title: string) => {\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n}","import React from \"react\";\r\nimport { Star, RatingNumber, RatingValue, RatingStyled } from \"./Rating.styled\";\r\n\r\nexport type Props = {\r\n    numberOfRatings: number | undefined;\r\n    rating: number;\r\n} & typeof defaultProps;\r\n\r\nconst defaultProps = {\r\n    minValue: 1,\r\n    maxValue: 5\r\n};\r\n\r\nconst Rating = (props: Props) => {\r\n    const { rating, numberOfRatings, minValue, maxValue } = props;\r\n    const roundedRating = Math.round(rating * 10) / 10;\r\n    let stars = [];\r\n    for (let i = minValue; i < maxValue + 1; i++) {\r\n        stars.push(\r\n            <Star key={i} active={roundedRating >= i}>\r\n                &#9733;\r\n            </Star>\r\n        );\r\n    }\r\n    return (\r\n        <RatingStyled>\r\n            <RatingValue>\r\n                {roundedRating.toFixed(1)} / {maxValue.toFixed(1)}\r\n            </RatingValue>\r\n            <div>\r\n                {stars.map(s => {\r\n                    return s;\r\n                })}\r\n            </div>\r\n            {numberOfRatings && <RatingNumber>({numberOfRatings})</RatingNumber>}\r\n        </RatingStyled>\r\n    );\r\n};\r\n\r\nRating.defaultProps = defaultProps;\r\n\r\nexport default Rating;\r\n","import styled from \"styled-components\";\r\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\r\n\r\nexport const RatingStyled = styled.div`\r\n    display: inline-flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: row;\r\n    padding: 0.5rem;\r\n`;\r\n\r\nexport const RatingValue = styled.span`\r\n    font-size: 1.2rem;\r\n    margin-right: 0.2rem;\r\n    width: 5rem;\r\n`;\r\n\r\nexport type StarProps = {\r\n    active: boolean\r\n}\r\n\r\nexport const Star = styled.span<StarProps>`\r\n    font-size: 2.4rem;\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        font-size: 1.6rem;\r\n    }\r\n    color: ${props => (props.active ? COLORS.golden : COLORS.gray)};\r\n    vertical-align: top;\r\n`;\r\n\r\nexport const RatingNumber = styled.span`\r\n    font-size: 1.2rem;\r\n    margin-left: 0.2rem;\r\n`;\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { COLORS } from '../../styles/variables';\r\n\r\nconst show = keyframes`\r\n    from {\r\n        opacity: 0;\r\n    }\r\n    to {\r\n        opacity: 0.7;\r\n    }\r\n`\r\n\r\nexport const FooterStyled = styled.footer`\r\n    background: ${COLORS.white};\r\n    bottom: 0;\r\n    width: 100%;\r\n    border-top: 1px solid #ddd;\r\n    margin-top: 2rem;\r\n    box-shadow:\r\n    0 -4.5px 41.3px 8px rgba(0, 0, 0, 0.034),\r\n    0 -7.2px 48.5px 8px rgba(0, 0, 0, 0.043),\r\n    0 -6.6px 52.6px 8px rgba(0, 0, 0, 0.053),\r\n    0 14px 80px 8px rgba(0, 0, 0, 0.07)\r\n    ;\r\n    opacity: 0;\r\n\r\n\r\n    animation-name: ${show };\r\n    animation-delay: 1s;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: 1;\r\n    animation-fill-mode: forwards;\r\n\r\n`\r\n\r\nexport const FooterStyledInner = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 0;\r\n`","import React from \"react\";\r\nimport { FooterStyled, FooterStyledInner } from \"./Footer.styled\";\r\nimport { ContainerFluid } from \"../SharedStyledComponents/ContainerFluid.styled\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterStyled>\r\n            <ContainerFluid>\r\n                <FooterStyledInner>\r\n                    <div>Praca inżynierska Artur Iwiński</div>\r\n                    <div>PŁ 2020</div>\r\n                </FooterStyledInner>\r\n            </ContainerFluid>\r\n        </FooterStyled>\r\n    );\r\n};\r\n\r\nexport default Footer;","import styled from 'styled-components'\r\nimport { COLORS } from '../../styles/variables'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const ProfileStyled = styled.div`\r\n    padding-top: 1rem;\r\n`\r\n\r\nexport const AlertStyled = styled.div`\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n`\r\n\r\nexport const ContactButton = styled(Link)`\r\n    text-decoration: none !important;\r\n    border: 2px solid ${COLORS.blue};\r\n    color: white !important;\r\n    background: ${COLORS.blue};\r\n    border-radius: 4px;\r\n    padding: 0.5rem;\r\n    display: inline-block;\r\n    width: 100px;\r\n    text-align: center;\r\n`\r\n\r\nexport const MainWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 120px 1fr 1fr;\r\n`\r\n\r\nexport const AvatarImage = styled.div`\r\n`\r\n\r\nexport const GeneralInfo = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const Name = styled.span`\r\n\r\n`\r\n\r\nexport const City = styled.span`\r\n\r\n`\r\n\r\nexport const Description = styled.div`\r\n\r\n`\r\n\r\nexport const MainRating = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n`\r\n\r\nexport const ProfileMain = styled.div`\r\n\r\n`\r\n\r\nexport const ProfileGallery = styled.div`\r\n\r\n`\r\n\r\nexport const ProfileSection = styled.div`\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    background: white;\r\n    padding: 1rem;\r\n    margin-bottom: 0.5rem;\r\n    position: relative;\r\n`\r\nexport const ElementMissingInfo = styled.div`\r\n\r\n`\r\n\r\nexport const Info = styled.span`\r\n    color: ${COLORS.blue};\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid #eee;\r\n    width: 100%;\r\n    margin-bottom: 0.5rem;\r\n    padding-bottom: 0.3rem;\r\n    display: block;\r\n`","import styled from 'styled-components';\r\n\r\nexport const PriceListElementStyled = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n`\r\n\r\nexport const Name = styled.div`\r\n    padding: 1rem;\r\n    flex: 1;\r\n    border-right: 2px solid #ddd;\r\n`\r\n\r\nexport const Price = styled.div`\r\n    padding: 1rem;\r\n    flex: 1;\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\n    border: 1px solid #ddd;\r\n    padding: 1rem;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`","import React from \"react\";\r\nimport { PriceListElementStyled, Price, Name, DeleteButton } from \"./PriceListElement.styled\";\r\n\r\ntype Props = {\r\n    elementName: string;\r\n    price: number;\r\n    onDelete?: (id: string) => any;\r\n    editable: boolean;\r\n    id: string;\r\n};\r\n\r\nconst PriceListElement = (props: Props) => {\r\n    return (\r\n        <PriceListElementStyled>\r\n            <Name>{props.elementName}</Name>\r\n            <Price>{props.price} zł</Price>\r\n            {props.editable && (\r\n                <React.Fragment>\r\n                    <DeleteButton\r\n                        onClick={() => {\r\n                            if (props.onDelete) {\r\n                                props.onDelete(props.id);\r\n                            }\r\n                        }}\r\n                    >\r\n                        Usuń\r\n                    </DeleteButton>\r\n                </React.Fragment>\r\n            )}\r\n        </PriceListElementStyled>\r\n    );\r\n};\r\n\r\nexport default PriceListElement;\r\n","import styled from 'styled-components';\r\n\r\nexport const DeleteButton = styled.button`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n`","import React, { useState } from \"react\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { DeleteButton } from \"./Gallery.styled\";\r\n\r\ntype Props = {\r\n    images: string[];\r\n    isEditable: boolean;\r\n    onImageDelete: (data: any) => any;\r\n};\r\n\r\nconst Gallery = (props: Props) => {\r\n    const [modalImageIndex, setModalImageIndex] = useState(0);\r\n    const [isImageModalOpened, setImageModalOpened] = useState(false);\r\n\r\n    const onImageClick = (index: number) => {\r\n        setImageModalOpened(true);\r\n        setModalImageIndex(index);\r\n    };\r\n\r\n    const { images } = props;\r\n    return (\r\n        <div className=\"gallery\">\r\n            <div className=\"gallery__container\">\r\n                {images.map((src, index) => (\r\n                    <div className=\"gallery__image--small\" key={index}>\r\n                        <img src={src} onClick={() => onImageClick(index)} />\r\n                        {props.isEditable && <DeleteButton onClick={() => props.onImageDelete(index)}>X</DeleteButton>}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {isImageModalOpened && (\r\n                <Lightbox\r\n                    mainSrc={images[modalImageIndex]}\r\n                    nextSrc={images[(modalImageIndex + 1) % images.length]}\r\n                    prevSrc={images[(modalImageIndex + images.length - 1) % images.length]}\r\n                    onCloseRequest={() => setImageModalOpened(false)}\r\n                    onMovePrevRequest={() => setModalImageIndex((modalImageIndex + images.length - 1) % images.length)}\r\n                    onMoveNextRequest={() => setModalImageIndex((modalImageIndex + images.length + 1) % images.length)}\r\n                    animationDuration={0}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n","import styled from 'styled-components'\r\n\r\nexport const PriceListStyled = styled.div`\r\n    border: 1px solid #ddd;\r\n    border-radius: 4px;\r\n    box-shadow:\r\n  0 1.5px 5.3px rgba(0, 0, 0, 0.05),\r\n  0 4.9px 17.9px rgba(0, 0, 0, 0.055),\r\n  0 22px 80px rgba(0, 0, 0, 0.07)\r\n;\r\n\r\n`","import React from \"react\";\r\nimport { PriceListStyled } from \"./PriceList.styled\";\r\nimport PriceListElement from \"../PriceListElement/PriceListElement\";\r\n\r\ntype Props = {\r\n    priceList: any[];\r\n};\r\n\r\nconst PriceList = (props: Props) => {\r\n    return (\r\n        <PriceListStyled>\r\n            {props.priceList.map((element: any) => {\r\n                return (\r\n                    <PriceListElement\r\n                        key={element.id}\r\n                        elementName={element.elementName}\r\n                        price={element.price}\r\n                        editable={false}\r\n                        id={element.id}\r\n                    />\r\n                );\r\n            })}\r\n        </PriceListStyled>\r\n    );\r\n};\r\n\r\nexport default PriceList;\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Star, RatingValue, RatingStyled } from \"../Rating/Rating.styled\";\r\n\r\ntype Props = {\r\n    cb: (data: any) => any;\r\n    minValue: number;\r\n    maxValue: number;\r\n};\r\n\r\nconst RatingInput = (props: Props) => {\r\n    const [value, setValue] = useState(props.maxValue);\r\n    const [visibleValue, setVisibleValue] = useState(props.maxValue);\r\n\r\n    let stars = [];\r\n    for (let i = props.minValue; i < props.maxValue + 1; i++) {\r\n        stars.push(\r\n            <Star\r\n                key={i}\r\n                active={visibleValue >= i}\r\n                onClick={() => {\r\n                    setValue(i);\r\n                    props.cb(i);\r\n                }}\r\n                onMouseEnter={() => setVisibleValue(i)}\r\n                onMouseLeave={() => setVisibleValue(value)}\r\n            >\r\n                &#9733;\r\n            </Star>\r\n        );\r\n    }\r\n    return (\r\n        <RatingStyled>\r\n            <div style={{ cursor: \"pointer\" }}>\r\n                {stars.map(s => {\r\n                    return s;\r\n                })}\r\n            </div>\r\n            <RatingValue>{value.toFixed(1)}</RatingValue>\r\n        </RatingStyled>\r\n    );\r\n};\r\n\r\nexport default RatingInput;\r\n","import styled from 'styled-components';\r\n\r\nexport const ReviewFormInfo = styled.span`\r\n\r\n`\r\n\r\nexport const LoginFirstMessage = styled.span`\r\n    font-weight: bold;\r\n    color: rgb(16, 189, 0);\r\n\r\n`\r\n\r\nexport const ReviewList = styled.div`\r\n\r\n`\r\n\r\nexport const ReviewElement = styled.div`\r\n    border: 1px solid #ddd;\r\n    padding: 1rem;\r\n    border-radius: 6px;\r\n    margin: 1rem 0;\r\n    background: white;\r\n    box-shadow: 0px 1px 10px 1px rgba(51, 51, 120, 0.1);\r\n\r\n`\r\n\r\nexport const ReviewTop = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n\r\n`\r\n\r\nexport const ReviewLeft = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n\r\n`\r\n\r\nexport const ReviewRight = styled.div`\r\n\r\n`\r\n\r\nexport const ReviewLogin = styled.span`\r\n    margin-left: 1rem;\r\n    font-weight: bold;\r\n\r\n`\r\n\r\nexport const ReviewDate = styled.span`\r\n    margin-left: 1rem;\r\n    color: rgb(124, 124, 124);\r\n`\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formik, Field, Form } from \"formik\";\r\nimport RatingInput from \"../RatingInput/RatingInput\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect, MapStateToProps } from \"react-redux\";\r\n\r\nimport { Profile as ProfileApi } from \"../../api\";\r\nimport Rating from \"../Rating/Rating\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { FormGroup, SubmitButton, LabelStyled, FieldStyled } from \"../SharedStyledComponents/Form.styled\";\r\nimport {\r\n    ReviewFormInfo,\r\n    LoginFirstMessage,\r\n    ReviewLeft,\r\n    ReviewTop,\r\n    ReviewElement,\r\n    ReviewRight,\r\n    ReviewDate,\r\n    ReviewLogin,\r\n    ReviewList\r\n} from \"./ReviewForm.styled\";\r\nimport { LinkStyled } from \"../Navbar/Navbar.styled\";\r\nimport Avatar from \"../Avatar/Avatar\";\r\nimport BarLoader from \"../BarLoader/BarLoader\";\r\n\r\ntype Props = {\r\n    profile: any;\r\n    setRatingData: (rating: number, sumOfRatings: number) => any;\r\n    isAuthenticated: boolean;\r\n    currentUser: any;\r\n};\r\n\r\nconst ReviewForm = (props: Props) => {\r\n    const [reviews, setReviews] = useState(props.profile.ratings);\r\n    const [inProgress, setInProgress] = useState(false);\r\n    const [addedReviewId, setAddedReviewId] = useState();\r\n\r\n    useEffect(() => {\r\n        reviews.forEach((e: any) => {\r\n            if (props.currentUser && e.authorId === props.currentUser.id) {\r\n                setAddedReviewId(e.id);\r\n            }\r\n        });\r\n    }, [reviews]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <ReviewList>\r\n                {reviews || (reviews && reviews.length === 0) ? (\r\n                    reviews.map((e: any) => {\r\n                        let date = new Date(e.createdAt).toLocaleDateString(\"PL-pl\");\r\n                        console.log(e);\r\n                        return (\r\n                            <ReviewElement key={e.id}>\r\n                                <ReviewTop>\r\n                                    <ReviewLeft>\r\n                                        <Avatar url={e.author.avatar} />\r\n                                        <ReviewLogin>{e.author.displayName}</ReviewLogin>\r\n                                        <ReviewDate>{date}</ReviewDate>\r\n                                    </ReviewLeft>\r\n                                    <ReviewRight>\r\n                                        <Rating rating={e.ratingValue} numberOfRatings={undefined} />\r\n                                    </ReviewRight>\r\n                                </ReviewTop>\r\n                                <div>{e.content}</div>\r\n                            </ReviewElement>\r\n                        );\r\n                    })\r\n                ) : (\r\n                    <Loader />\r\n                )}\r\n            </ReviewList>\r\n\r\n            {props.isAuthenticated ? (\r\n                <React.Fragment>\r\n                    <ReviewFormInfo>{addedReviewId ? \"Edytuj\" : \"Dodaj\"} swoją recenzję:</ReviewFormInfo>\r\n                    <Formik\r\n                        enableReinitialize={true}\r\n                        initialValues={{\r\n                            ratingValue: addedReviewId ? reviews.find((r: any) => r.id === addedReviewId).ratingValue : 5,\r\n                            content: addedReviewId ? reviews.find((r: any) => r.id === addedReviewId).content : \"\"\r\n                        }}\r\n                        onSubmit={values => {\r\n                            if (values.content.length === 0) {\r\n                                return;\r\n                            }\r\n                            setInProgress(true);\r\n                            \r\n                            if (addedReviewId) {\r\n                                const data = {\r\n                                    reviewId: addedReviewId,\r\n                                    content: values.content,\r\n                                    ratingValue: values.ratingValue\r\n                                };\r\n                                ProfileApi.updateReview(data)\r\n                                    .then(res => {\r\n                                        console.log(res);\r\n                                        reviews.find((r: any) => r.id === addedReviewId).ratingValue = values.ratingValue\r\n                                        reviews.find((r: any) => r.id === addedReviewId).content = values.content\r\n                                        let sumOfReviews = 0;\r\n                                        reviews.forEach((element: any) => {\r\n                                            sumOfReviews += element.ratingValue;\r\n                                        });\r\n                                        let avgRating = sumOfReviews / reviews.length || 0;\r\n\r\n                                        props.setRatingData(avgRating, reviews.length);\r\n                                        setInProgress(false);\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(err);\r\n                                    });\r\n                            } else {\r\n                                const data = {\r\n                                    profileId: props.profile.id,\r\n                                    content: values.content,\r\n                                    ratingValue: values.ratingValue\r\n                                };\r\n                                ProfileApi.addReview(data)\r\n                                    .then(res => {\r\n                                        console.log(res);\r\n                                        setReviews([...reviews, res.data.rating]);\r\n                                        const revs = [...reviews, res.data.rating];\r\n\r\n                                        let numberOfRatings = revs.length;\r\n                                        let sumOfReviews = 0;\r\n                                        revs.forEach((element: any) => {\r\n                                            sumOfReviews += element.ratingValue;\r\n                                        });\r\n                                        let avgRating = sumOfReviews / numberOfRatings || 0;\r\n\r\n                                        props.setRatingData(avgRating, numberOfRatings);\r\n                                        setInProgress(false);\r\n                                    })\r\n                                    .catch(err => {\r\n                                        console.log(err);\r\n                                    });\r\n                            }\r\n                        }}\r\n                        render={({ setFieldValue }) => (\r\n                            <Form>\r\n                                <FormGroup>\r\n                                    <LabelStyled htmlFor=\"content\">Twój komentarz</LabelStyled>\r\n                                    <FieldStyled name=\"content\" placeholder=\"Twój komentarz\" required />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <LabelStyled htmlFor=\"ratingValue\">Twoja ocena</LabelStyled>\r\n                                    <RatingInput cb={value => setFieldValue(\"ratingValue\", value)} minValue={1} maxValue={5} />\r\n                                </FormGroup>\r\n                                <FormGroup>\r\n                                    <SubmitButton type=\"submit\">{addedReviewId ? \"Edytuj\" : \"Dodaj\"} swoją recenzję</SubmitButton>\r\n                                </FormGroup>\r\n                            </Form>\r\n                        )}\r\n                    />\r\n                    {inProgress && <BarLoader></BarLoader>}\r\n                </React.Fragment>\r\n            ) : (\r\n                <LoginFirstMessage>\r\n                    Aby dodać własną recenzję należy być zalogowanym! <LinkStyled to=\"/login\">Zaloguj się</LinkStyled>\r\n                </LoginFirstMessage>\r\n            )}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default ReviewForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\r\nimport Rating from \"../../components/Rating/Rating\";\r\nimport useDocumentTitle from \"../../hooks/useDocumentTitle\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Profile as ProfileApi } from \"../../api\";\r\nimport {\r\n    ProfileStyled,\r\n    AlertStyled,\r\n    ContactButton,\r\n    MainWrapper,\r\n    GeneralInfo,\r\n    AvatarImage,\r\n    MainRating,\r\n    Name,\r\n    City,\r\n    ProfileSection,\r\n    ElementMissingInfo,\r\n    Info,\r\n    Description\r\n} from \"./Profile.styled\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { MIN_COMPLETION_RATE, STATIC_FILES_ROOT } from \"../../constants/config\";\r\nimport { connect } from \"react-redux\";\r\nimport PriceList from \"../../components/PriceList/PriceList/PriceList\";\r\nimport BarLoader from \"../../components/BarLoader/BarLoader\";\r\nimport Avatar from \"../../components/Avatar/Avatar\";\r\nimport ReviewForm from \"../../components/ReviewForm/ReviewForm\";\r\nimport Gallery from \"../../components/Gallery/Gallery/Gallery\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams> & ReturnType<typeof mapStateToProps> & {};\r\n\r\nconst Profile = (props: Props) => {\r\n    const id = props.match.params.id;\r\n    useDocumentTitle(\"Profile \" + id);\r\n\r\n    const [profile, setProfile] = useState();\r\n    const [totalRating, setTotalRating] = useState(0);\r\n    const [numberOfReviews, setNumberOfReviews] = useState(0);\r\n\r\n    useEffect(() => {\r\n        ProfileApi.getProfile(id)\r\n            .then(res => {\r\n                console.log(res.data.profile);\r\n                setProfile(res.data.profile);\r\n                setRatingData(res.data.profile.totalRating, res.data.profile.ratings.length);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    const setRatingData = (r: number, n: number) => {\r\n        setTotalRating(r);\r\n        setNumberOfReviews(n);\r\n    };\r\n\r\n    return (\r\n        <ProfileStyled>\r\n            <ContainerFluid>\r\n                {/* {props.currentUser.profileId == id && profile && (profile.accountCompletionRate < MIN_COMPLETION_RATE) && (\r\n                    <AlertStyled>\r\n                        Twój profil nie jest w pełni wypełniony przez co nie bedzie widoczny na liście profili. &nbsp;Uzupełnij go\r\n                        tutaj:\r\n                        <Link to=\"/profile-settings\">Edit profile</Link>\r\n                    </AlertStyled>\r\n                )} */}\r\n                {profile ? (\r\n                    <React.Fragment>\r\n                        <React.Fragment>\r\n                            <ProfileSection>\r\n                                <Info>Informacje ogólne</Info>\r\n                                <MainWrapper>\r\n                                    <AvatarImage>\r\n                                        <Avatar\r\n                                            isFull={true}\r\n                                            url={profile.owner.avatar}\r\n                                        ></Avatar>\r\n                                    </AvatarImage>\r\n                                    <GeneralInfo>\r\n                                        <Name>{profile.owner.displayName}</Name>\r\n                                        <City>{profile.city}</City>\r\n                                        <ContactButton\r\n                                            to={{ pathname: \"/chat\", state: { newConversationUserId: profile.ownerId } }}\r\n                                        >\r\n                                            Chat\r\n                                        </ContactButton>\r\n                                    </GeneralInfo>\r\n                                    <MainRating>\r\n                                        <Rating rating={totalRating} numberOfRatings={numberOfReviews} />\r\n                                    </MainRating>\r\n                                </MainWrapper>\r\n                            </ProfileSection>\r\n                            <ProfileSection>\r\n                                <Info>Opis</Info>\r\n                                {profile.descr ? (\r\n                                    <Description>{profile.descr}</Description>\r\n                                ) : (\r\n                                    <ElementMissingInfo>Ten profil nie ma jeszcze opisu</ElementMissingInfo>\r\n                                )}\r\n                            </ProfileSection>\r\n                            <ProfileSection>\r\n                                {profile.images.length > 0 ? (\r\n                                    <React.Fragment>\r\n                                        <Info>Galeria</Info>\r\n                                        <Gallery\r\n                                            isEditable={false}\r\n                                            onImageDelete={() => undefined}\r\n                                            images={profile.images.map((i: any) => STATIC_FILES_ROOT + i.srcPath)}\r\n                                        />\r\n                                    </React.Fragment>\r\n                                ) : (\r\n                                    <ElementMissingInfo>Ten profil nie ma jeszcze galerii</ElementMissingInfo>\r\n                                )}\r\n                            </ProfileSection>\r\n                            <ProfileSection>\r\n                                {profile.priceListElements.length > 0 ? (\r\n                                    <React.Fragment>\r\n                                        <Info>Cennik</Info>\r\n                                        <PriceList priceList={profile.priceListElements} />\r\n                                    </React.Fragment>\r\n                                ) : (\r\n                                    <ElementMissingInfo>Ten profil nie ma jeszcze cennika</ElementMissingInfo>\r\n                                )}\r\n                            </ProfileSection>\r\n                            <ProfileSection>\r\n                                <Info>Recenzje</Info>\r\n                                <ReviewForm\r\n                                    profile={profile}\r\n                                    setRatingData={setRatingData}\r\n                                    isAuthenticated={props.isAuthenticated}\r\n                                    currentUser={props.currentUser}\r\n                                ></ReviewForm>\r\n                            </ProfileSection>\r\n                        </React.Fragment>\r\n                    </React.Fragment>\r\n                ) : (\r\n                    <BarLoader></BarLoader>\r\n                )}\r\n            </ContainerFluid>\r\n            <Footer></Footer>\r\n        </ProfileStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n    return { currentUser: state.auth.currentUser, isAuthenticated: state.auth.isAuthenticated };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Profile);\r\n"],"sourceRoot":""}