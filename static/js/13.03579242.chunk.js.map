{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","views/Home/Home.styled.ts","components/Notes/Note/Note.styled.ts","views/Profile/Profile.styled.ts","views/Dashboard/Dashboard.styled.ts","components/Notes/Note/Note.tsx","components/Notes/NoteForm/NoteForm.styled.ts","components/Notes/NoteForm/NoteForm.tsx","views/PatientDetails/PatientDetails.styled.ts","components/PatientData/AddDataSet/AddDataSet.styled.ts","components/PatientData/AddDataSet/AddDataSet.tsx","components/PatientData/AddData/AddData.styled.ts","components/PatientData/AddData/AddData.tsx","views/PatientDetails/PatientDetails.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","HomePageStyled","HomeInner","HomeHero","NAV_HEADROOM","HomeTitle","HomeText","SearchInputWrapper","ScrollButton","HashLink","InfoSection","InfoCard","InfoCardIcon","InfoCardText","PopularProfiles","PopularProfilesInner","SectionTitle","PopularProfilesCard","PopularProfilesCardName","PopularProfilesCardCity","black","LogSection","NoteStyled","DateBadge","Content","DeleteButton","p","Container","ProfileStyled","ContactButton","Link","MainWrapper","AvatarImage","GeneralInfo","Name","City","Description","MainRating","ProfileSection","ElementMissingInfo","Info","DashboardStyled","DashboardStyledInner","NotesList","PatientList","PatientCard","NotesAndPatientsContainer","AddPatientButton","Note","props","moment","utc","createdAt","local","format","onClick","id","Patient","deleteNote","then","res","onNoteDelete","catch","err","console","log","content","NoteFormStyled","NoteForm","initialValues","onSubmit","values","setFieldValue","addNote","patientId","onNoteAdd","data","note","render","htmlFor","name","placeholder","type","PatientDetailsStyled","PatientDetailsStyledInner","PatientInfo","ImageWrapper","PatientInfoInner","UserExistInfo","UserDoesNotExistInfo","Age","Gender","TherapyGoal","DataSetWrapper","DataSetInner","DeleteDataSet","DataSetsContainer","DataSetTableWrapper","DataSetChartWrapper","DataSetFormWrapper","Table","table","StyledTr","tr","StyledTh","th","StyledTd","td","DataSetInfo","DataSetDescription","DataSetTitle","DataSetUnit","AddDataSetStyled","AddDataSet","title","descr","unit","dataType","addDataSet","onDataSetAdd","dataSet","AddDataStyled","addDataValidationSchema","Yup","shape","dataValue","typeError","required","AddData","dateValue","validationSchema","setFieldError","resetForm","setValues","isValid","NaN","toDate","getTime","addDataValue","dataSetId","onDataValueAdd","patientData","component","PatientDetails","useState","isPatientFetching","setPatientFetching","patient","setPatient","isDataSetsFetching","setDataSetsFetching","dataSets","setDataSets","addDataSetShown","setDataSetShown","notes","setNotes","isNotesFetching","setNotesFetching","useEffect","getPatient","match","params","finally","getNotes","getDataSets","map","ds","dataValues","dv","dateValueString","forEach","sort","a","b","filter","e","Fragment","userAccount","to","pathname","state","newConversationUserId","Avatar","isFull","firstName","lastName","age","gender","therapyGoal","index","key","removeDataSet","dsCopy","JSON","parse","stringify","splice","findIndex","deleteDataValue","find","i","push","width","height","margin","top","right","left","bottom","dataKey"],"mappings":"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","file":"static/js/13.03579242.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field, ErrorMessage } from \"formik\";\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\n\nexport const InfoBadge = styled.span`\n    width: 100%;\n    padding: 0.8rem;\n    border-radius: 5px;\n    font-size: 1.4rem;\n    background: #fff87d;\n`;\n\nexport const ErrorBadge = styled.span`\n    width: 100%;\n    padding: 0.8rem;\n    font-size: 1.4rem;\n    border-radius: 5px;\n    color: white;\n    background: #ff4230;\n`;\n\nexport const FormStyled = styled(Form)`\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n    font-size: 1.5rem;\n    width: 50%;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        padding: 1rem;\n        width: 80%;\n    }\n    @media (max-width: ${BREAKPOINTS.sm}) {\n        padding: 1rem;\n        width: 100%;\n    }\n`;\n\nexport const FormGroup = styled.div`\n    margin-top: 1rem;\n    width: 100%;\n    position: relative;\n`;\n\nexport const FormGroup2 = styled.div`\n    margin-top: 1rem;\n    width: 100%;\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 1rem;\n`\n\nexport const FieldStyled = styled(Field)`\n    width: 100%;\n    background: none;\n    border: none;\n    box-sizing: border-box;\n    padding: 0.8rem;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    transition: all 0.2s;\n\n    :focus {\n        outline: none;\n        border: 1px solid ${COLORS.blue};\n        box-shadow: 0 0 5px ${COLORS.blue};\n    }\n\n    &[type=\"radio\"] {\n        outline: none;\n        border: none;\n        box-shadow: none;\n        cursor: pointer;\n        width: 1.6rem;\n        height: 1.6rem;\n    }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n    box-sizing: border-box;\n    width: 100%;\n    color: red;\n    padding: 0 0.8rem;\n    font-size: 1.2rem;\n`;\n\nexport const LabelStyled = styled.label`\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    padding: 0 0.8rem;\n    font-size: 1.2rem;\n`;\n\ntype SubmitButtonProps = {\n    light?: boolean\n}\n\nexport const SubmitButton = styled.button<SubmitButtonProps>`\n    width: 100%;\n    background: none;\n    border: none;\n    padding: 1rem 2rem;\n    color: white;\n    cursor: pointer;\n    background: ${COLORS.blue};\n    border-radius: 5px;\n    transition: background 0.2s;\n\n    :hover {\n        background: ${COLORS.darkblue};\n    }\n\n    ${({ light }) =>\n        light && `\n            background: #226aff;\n            :hover {\n                background: #042bfc;\n            }\n        `\n    }\n`;\n\nexport const FormInfo = styled.div`\n    width: 100%;\n    font-weight: bold;\n`;\n\nexport const Option = styled.option`\n    \n`\nexport const FormInfoContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    padding-bottom: 1rem;\n`","import styled from \"styled-components\";\nimport { COLORS } from \"../../styles/variables\";\n\nexport const LoaderStyled = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 64px;\n    z-index: 1000;\n    div {\n        position: absolute;\n        top: 27px;\n        width: 11px;\n        height: 11px;\n        border-radius: 50%;\n        background: ${COLORS.blue};\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\n    }\n    div:nth-child(1) {\n        left: 6px;\n        animation: lds-ellipsis1 0.6s infinite;\n    }\n    div:nth-child(2) {\n        left: 6px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(3) {\n        left: 26px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(4) {\n        left: 45px;\n        animation: lds-ellipsis3 0.6s infinite;\n    }\n    @keyframes lds-ellipsis1 {\n        0% {\n            transform: scale(0);\n        }\n        100% {\n            transform: scale(1);\n        }\n    }\n    @keyframes lds-ellipsis3 {\n        0% {\n            transform: scale(1);\n        }\n        100% {\n            transform: scale(0);\n        }\n    }\n    @keyframes lds-ellipsis2 {\n        0% {\n            transform: translate(0, 0);\n        }\n        100% {\n            transform: translate(19px, 0);\n        }\n    }\n`;\n\nexport const LoaderWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React from \"react\";\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\n\nconst Loader = () => {\n    return (\n        <LoaderWrapper>\n            <LoaderStyled>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </LoaderStyled>\n        </LoaderWrapper>\n    );\n};\n\nexport default Loader;\n","import styled from \"styled-components\"\nimport { NAV_HEADROOM, COLORS, BREAKPOINTS } from \"../../styles/variables\"\nimport { HashLink } from 'react-router-hash-link';\n\nexport const HomePageStyled = styled.div`\n    \n`\n\nexport const HomeInner = styled.div`\n    width: 100%;\n`\n\nexport const HomeHero = styled.div`\n    min-height: calc(100vh - ${NAV_HEADROOM});\n    display: flex;\n    align-items: center;\n    position: relative;\n    width: 100%;\n    position: relative;\n`\n\nexport const HomeTitle = styled.div`\n    font-weight: bold;\n    font-size: 5rem;\n    line-height: 5rem;\n    margin-bottom: 2.5rem;\n    color: ${COLORS.blue};\n`\n\nexport const HomeText = styled.div`\n    font-size: 2.6rem;\n    margin-bottom: 2.5rem;\n`\n\nexport const LoggedInBadge = styled.span`\n\n`\n\nexport const SearchInputWrapper = styled.div`\n    width: 40%;\n    padding-bottom: ${NAV_HEADROOM};\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        width: 75%;\n    }\n\n    @media (max-width: ${BREAKPOINTS.sm}) {\n        width: 100%;\n    }\n`\n\nexport const ScrollButton = styled(HashLink)`\n    position: absolute;\n    bottom: 2rem;\n    left: 50%;\n    color: ${COLORS.blue};\n    cursor: pointer;\n    font-size: 4rem;\n    outline: none;\n`\n\nexport const InfoSection = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr 1fr;\n    grid-gap: 1rem;\n    padding: 2rem 0;\n    border-top: 1px solid #ddd;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        grid-template-columns: 1fr 1fr;\n    }\n\n    @media (max-width: ${BREAKPOINTS.sm}) {\n        grid-template-columns: 1fr;\n    }\n`\n\nexport const InfoCard = styled.div`\n    display: flex;\n    justify-content: center;\n    flex-direction: column;\n    align-items: center;\n    padding: 1rem;\n    border: 2px solid ${COLORS.blue};\n    border-radius: 1rem;\n`\n\nexport const InfoCardIcon = styled.div`\n    color: ${COLORS.blue};\n    font-size: 5rem;\n    padding-bottom: 1.5rem;\n`\n\nexport const InfoCardText = styled.div`\n    width: 100%;\n    text-align: justify;\n`\n\nexport const PopularProfiles = styled.div`\n    padding: 2rem 0;\n    border-top: 1px solid #ddd;\n    position: relative;\n`\n\nexport const PopularProfilesInner = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: 1rem;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        grid-template-columns: 1fr;\n    }\n    \n`\n\nexport const SectionTitle = styled.div`\n    color: ${COLORS.darkblue};\n    padding: 1rem 0;\n    padding-left: 1rem;\n    font-size: 2rem;\n`\n\nexport const PopularProfilesCard = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    padding: 1rem;\n    border: 2px solid ${COLORS.blue};\n    border-radius: 1rem;\n`\n\nexport const PopularProfilesCardName = styled.div`\n    color: ${COLORS.blue};\n    font-size: 2.2rem;\n    padding: 1rem 0;\n`\n\nexport const PopularProfilesCardCity = styled.div`\n    color: ${COLORS.black};\n    font-size: 1.4rem;\n    padding-bottom: 1rem;\n`\n\nexport const LogSection = styled.div`\n    padding: 2rem 0;\n    border-top: 1px solid #ddd;\n`\n","import styled from 'styled-components'\n\nexport const NoteStyled = styled.div`\n    border: 1px solid #ddd;\n    padding: 0.5rem;\n    position: relative;\n    margin-bottom: 0.5rem;\n    :hover {\n        background: #f3f3f3;\n    }\n`\n\nexport const DateBadge = styled.div`\n    font-size: 1.2rem;\n    color: #333;\n`\n\nexport const Content = styled.div`\n    font-size: 1.6rem;\n`\n\nexport const DeleteButton = styled.p`\n    font-size: 12px;\n    border: none;\n    background: #d11;\n    color: white;\n    border-radius: 6px;\n    font-weight: bold;\n    width: 2.4rem;\n    height: 2.4rem;\n    cursor: pointer;\n    vertical-align: middle;\n    text-align: center;\n    display: inline-block;\n    padding-bottom: 1rem;\n`\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding-bottom: 0.5rem;\n    margin-bottom: 0.5rem;\n    border-bottom: 1px solid #ddd;\n`","import styled from 'styled-components'\nimport { COLORS } from '../../styles/variables'\nimport { Link } from \"react-router-dom\"\n\nexport const ProfileStyled = styled.div`\n    padding-top: 1rem;\n`\n\nexport const AlertStyled = styled.div`\n    padding: 1rem;\n    border-radius: 5px;\n`\n\nexport const ContactButton = styled(Link)`\n    text-decoration: none !important;\n    border: 2px solid ${COLORS.blue};\n    color: white !important;\n    background: ${COLORS.blue};\n    border-radius: 4px;\n    padding: 0.5rem;\n    display: inline-block;\n    width: 100px;\n    text-align: center;\n`\n\nexport const MainWrapper = styled.div`\n    display: grid;\n    grid-template-columns: 120px 1fr 1fr;\n`\n\nexport const AvatarImage = styled.div`\n`\n\nexport const GeneralInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    padding: 1rem;\n    justify-content: space-between;\n`\n\nexport const Name = styled.span`\n\n`\n\nexport const City = styled.span`\n\n`\n\nexport const Description = styled.div`\n\n`\n\nexport const MainRating = styled.div`\n    display: flex;\n    justify-content: flex-end;\n    align-items: flex-start;\n`\n\nexport const ProfileMain = styled.div`\n\n`\n\nexport const ProfileGallery = styled.div`\n\n`\n\nexport const ProfileSection = styled.div`\n    border: 1px solid #ddd;\n    border-radius: 6px;\n    background: white;\n    padding: 1rem;\n    margin-bottom: 0.5rem;\n    position: relative;\n`\nexport const ElementMissingInfo = styled.div`\n\n`\n\nexport const Info = styled.span`\n    color: ${COLORS.blue};\n    font-size: 2rem;\n    font-weight: bold;\n    border-bottom: 1px solid #eee;\n    width: 100%;\n    margin-bottom: 0.5rem;\n    padding-bottom: 0.3rem;\n    display: block;\n`","import styled from 'styled-components'\nimport { BREAKPOINTS, COLORS } from '../../styles/variables'\nimport { Link } from 'react-router-dom'\n\nexport const DashboardStyled = styled.div`\n    min-height: 100vh;\n    position: relative;\n`\n\nexport const DashboardStyledInner = styled.div`\n    width: 100%;\n    height: 100%;\n    margin-top: 1rem;\n`\n\nexport const NotesList = styled.div`\n    border: 1px solid #eee;\n    padding: 0.5rem;\n    border-radius: 6px;\n`\n\nexport const PatientList = styled.div`\n    border: 1px solid #eee;\n    padding: 0.5rem;\n    border-radius: 6px;\n    width: 100%;\n`\n\nexport const PatientCard = styled.div`\n    border: 1px solid #ddd;\n    padding: 0.5rem;\n    border-radius: 6px;\n    margin-bottom: 0.5rem;\n    padding-bottom: 0.5rem;\n\n    :hover {\n        background: #f3f3f3;\n    }\n`\n\nexport const NotesAndPatientsContainer = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 0.5rem;\n    border: 1px solid #ccc;\n    padding: 0.5rem;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        grid-template-columns: 1fr;\n        padding: 0;\n    }\n`\n\nexport const Container = styled.div`\n    border: 1px solid #ccc;\n    padding: 0.5rem;\n`\n\nexport const AddPatientButton = styled(Link)`\n    width: 100%;\n    background: none;\n    border: none;\n    padding: 1rem 2rem;\n    color: white;\n    cursor: pointer;\n    background: ${COLORS.blue};\n    border-radius: 5px;\n    transition: background 0.2s;\n    text-decoration: none;\n    display: block;\n    text-align: center;\n    margin: 0.5rem 0;\n    font-size: 1.4rem;\n\n    :hover {\n        background: ${COLORS.darkblue};\n    }\n`","import React from \"react\";\nimport { NoteStyled, DateBadge, Content, DeleteButton, Container } from \"./Note.styled\";\nimport { Patient } from \"../../../api\";\nimport moment from \"moment\";\n\ntype Props = {\n    createdAt: any;\n    content: string;\n    onNoteDelete: (id: string) => void;\n    id: string;\n};\n\nconst Note = (props: Props) => {\n    const onDelete = (id: string) => {\n        Patient.deleteNote(id)\n            .then(res => {\n                props.onNoteDelete(id);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n    return (\n        <NoteStyled>\n            <Container>\n                <DateBadge>{moment.utc(props.createdAt).local().format(\"DD-MM-YYYY HH:mm\")}</DateBadge>\n                <DeleteButton onClick={() => onDelete(props.id)}>x</DeleteButton>\n            </Container>\n\n            <Content>{props.content}</Content>\n        </NoteStyled>\n    );\n};\n\nexport default Note;\n","import styled from 'styled-components'\nimport { Form } from 'formik'\n\nexport const NoteFormStyled = styled(Form)`\n\n`","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { NoteFormStyled } from \"./NoteForm.styled\";\nimport { SubmitButton, FormGroup, LabelStyled, FieldStyled } from \"../../SharedStyledComponents/Form.styled\";\nimport { Patient } from \"../../../api\";\n\ntype Props = {\n    patientId?: string;\n    onNoteAdd: (note: any) => void;\n};\n\nconst NoteForm = (props: Props) => {\n    return (\n        <Formik\n            initialValues={{\n                content: \"\"\n            }}\n            onSubmit={(values, { setFieldValue }) => {\n                console.log(values);\n                Patient.addNote({\n                    ...values,\n                    patientId: props.patientId\n                })\n                    .then(res => {\n                        console.log(res);\n                        props.onNoteAdd(res.data.note);\n                        setFieldValue(\"content\", \"\");\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n            }}\n            render={() => (\n                <NoteFormStyled>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"content\">Notatka</LabelStyled>\n                        <FieldStyled name=\"content\" placeholder=\"Notatka...\" id=\"content\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <SubmitButton type=\"submit\">Dodaj notatkę</SubmitButton>\n                    </FormGroup>\n                </NoteFormStyled>\n            )}\n        />\n    );\n};\n\nexport default NoteForm;\n","import styled from 'styled-components';\nimport { BREAKPOINTS } from '../../styles/variables';\n\nexport const PatientDetailsStyled = styled.div`\n\n`\n\nexport const PatientDetailsStyledInner = styled.div`\n\n`\n\nexport const PageTitle = styled.div`\n    font-weight: bold;\n`\n\nexport const PatientInfo = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    width: 100%;\n    border: 1px solid #ddd;\n    border-radius: 6px;\n    margin: 1rem 0;\n`\n\nexport const ImageWrapper = styled.div`\n    width: 16rem;\n    height: 16rem;\n`\n\nexport const PatientInfoInner = styled.div`\n    height: 16rem;\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    align-items: flex-start;\n    width: 100%;\n    padding: 0.5rem;\n`\n\nexport const InfoBadge = styled.div`\n    padding: 0.5rem;\n    border: 1px solid #ddd;\n    border-radius: 6px;\n`\n\nexport const UserExistInfo = styled.div`\n\n`\n\nexport const UserDoesNotExistInfo = styled.div`\n\n`\n\nexport const Age = styled.div`\n\n`\n\nexport const Gender = styled.div`\n\n`\n\nexport const TherapyGoal = styled.div`\n\n`\n\nexport const DataSetWrapper = styled.div`\n    border: 1px solid #ccc;\n    border-radius: 6px;\n    padding: 1rem;\n    margin-bottom: 0.5rem;\n`\n\nexport const DataSetInner = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 2fr;\n    grid-gap: 0.5rem;\n    margin-bottom: 0.5rem;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        grid-template-columns: 1fr;\n        padding: 0;\n    }\n    \n`\n\nexport const DeleteDataSet = styled.div`\n    color: red;\n    cursor: pointer;\n`\n\nexport const DataSetsContainer = styled.div`\n    border: 1px solid #ddd;\n    padding: 1rem;\n`\n\nexport const DataSetTableWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    border: 1px solid #eee;\n    padding: 0.5rem;\n    border-radius: 6px;\n    max-height: 350px;\n    overflow-y: scroll;\n`\n\nexport const DataSetChartWrapper = styled.div`\n    border: 1px solid #eee;\n    height: 350px;\n    border-radius: 6px;\n`\n\nexport const DataSetFormWrapper = styled.div`\n    border-top: 1px solid #ccc;\n`\n\nexport const Table = styled.table`\n    width: 100%;\n    border-bottom: 1px soid #ccc;\n`\n\nexport const StyledTr = styled.tr`\n    border-bottom: 1px soid #ccc;\n`\n\nexport const StyledTh = styled.th`\n    border: 2px solid #eee;\n`\n\nexport const StyledTd = styled.td`\n    padding: 0.2rem;\n    font-size: 1.2rem;\n    vertical-align: middle;\n    text-align: center;\n`\n\nexport const DataSetInfo = styled.div`\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    padding: 2rem;\n    grid-gap: 0.5rem;\n    border: 1px solid #ccc;\n    margin-bottom: 1rem;\n    border-radius: 6px;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        grid-template-columns: 1fr;\n        padding: 0;\n    }\n`\n\nexport const DataSetDescription = styled.div`\n\n`\n\nexport const DataSetTitle = styled.div`\n    font-weight: bold;\n    font-size: 2rem;\n`\n\nexport const DataSetUnit = styled.div`\n\n`\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const AddDataSetStyled = styled(Form)`\n\n`","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { AddDataSetStyled } from \"./AddDataSet.styled\";\nimport { SubmitButton, FormGroup, LabelStyled, FieldStyled } from \"../../SharedStyledComponents/Form.styled\";\nimport { Patient } from \"../../../api\";\n\ntype Props = {\n    patientId: string;\n    onDataSetAdd: (note: any) => void;\n};\n\nconst AddDataSet = (props: Props) => {\n    return (\n        <Formik\n            initialValues={{\n                title: \"\",\n                descr: \"\",\n                unit: \"\",\n                dataType: \"\"\n            }}\n            onSubmit={values => {\n                console.log(values);\n                Patient.addDataSet(props.patientId, {\n                    ...values\n                })\n                    .then(res => {\n                        console.log(res);\n                        props.onDataSetAdd(res.data.dataSet);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n            }}\n            render={() => (\n                <AddDataSetStyled>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"title\">Tytuł</LabelStyled>\n                        <FieldStyled name=\"title\" placeholder=\"Tytuł...\" id=\"title\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"descr\">Opis</LabelStyled>\n                        <FieldStyled name=\"descr\" placeholder=\"Opis...\" id=\"descr\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"unit\">Jednostka</LabelStyled>\n                        <FieldStyled name=\"unit\" placeholder=\"Jednostka...\" id=\"unit\" />\n                    </FormGroup>\n                    {/* <FormGroup>\n                        <LabelStyled htmlFor=\"dataType\">Typ danych</LabelStyled>\n                        <FieldStyled name=\"dataType\" placeholder=\"Typ danych...\" id=\"dataType\" />\n                    </FormGroup> */}\n\n                    <SubmitButton type=\"submit\">Dodaj zbiór danych</SubmitButton>\n                </AddDataSetStyled>\n            )}\n        />\n    );\n};\n\nexport default AddDataSet;\n","import styled from 'styled-components'\nimport { Form } from 'formik'\n\nexport const AddDataStyled = styled(Form)`\n\n`","import React from \"react\";\nimport { Formik } from \"formik\";\nimport { AddDataStyled } from \"./AddData.styled\";\nimport { SubmitButton, FormGroup, LabelStyled, FieldStyled, ErrorMessageStyled } from \"../../SharedStyledComponents/Form.styled\";\nimport { Patient } from \"../../../api\";\nimport * as Yup from \"yup\";\nimport moment from \"moment\";\n\nconst addDataValidationSchema = Yup.object().shape({\n    dataValue: Yup.number()\n        .typeError(\"Wartość musi być liczbą\")\n        .required(\"Wartość jest wymagana\")\n});\n\ntype Props = {\n    dataSetId: string;\n    onDataValueAdd: (note: any) => void;\n};\n\nconst AddData = (props: Props) => {\n    return (\n        <Formik\n            initialValues={{\n                dataValue: \"\",\n                dateValue: moment().format(\"DD-MM-YYYY HH:mm\")\n            }}\n            validationSchema={addDataValidationSchema}\n            onSubmit={(values, { setFieldError, setValues, resetForm }) => {\n                console.log(values);\n                let dateValue = moment(values.dateValue, \"DD-MM-YYYY HH:mm\", true);\n                if (!dateValue.isValid() || dateValue.toDate().getTime() === NaN) {\n                    setFieldError(\"dateValue\", \"Niepoprawny format daty\");\n                    return;\n                }\n                Patient.addDataValue({\n                    dataSetId: props.dataSetId,\n                    dataValue: values.dataValue,\n                    dateValue: moment(dateValue.toDate().getTime())\n                })\n                    .then(res => {\n                        console.log(res);\n                        props.onDataValueAdd(res.data.patientData);\n                        resetForm();\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n            }}\n            render={() => (\n                <AddDataStyled>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"dataValue\">Wartość</LabelStyled>\n                        <FieldStyled name=\"dataValue\" placeholder=\"Wartość...\" id=\"dataValue\" />\n                        <ErrorMessageStyled name=\"dataValue\" component=\"div\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"dateValue\">Data (DD-MM-YYYY HH:mm)</LabelStyled>\n                        <FieldStyled name=\"dateValue\" placeholder=\"Data...\" id=\"dateValue\" />\n                        <ErrorMessageStyled name=\"dateValue\" component=\"div\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <SubmitButton type=\"submit\">Dodaj dane do zbioru</SubmitButton>\n                    </FormGroup>\n                </AddDataStyled>\n            )}\n        />\n    );\n};\n\nexport default AddData;\n","import React, { useEffect, useState } from \"react\";\nimport {\n    PatientDetailsStyled,\n    PatientDetailsStyledInner,\n    PageTitle,\n    PatientInfoInner,\n    PatientInfo,\n    Age,\n    Gender,\n    ImageWrapper,\n    InfoBadge,\n    UserExistInfo,\n    UserDoesNotExistInfo,\n    DataSetsContainer,\n    DataSetWrapper,\n    DataSetTableWrapper,\n    DataSetChartWrapper,\n    DataSetFormWrapper,\n    DataSetInner,\n    Table,\n    StyledTh,\n    StyledTr,\n    StyledTd,\n    DataSetInfo,\n    DataSetTitle,\n    DataSetDescription,\n    DataSetUnit,\n    DeleteDataSet,\n    TherapyGoal\n} from \"./PatientDetails.styled\";\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\nimport { Patient } from \"../../api\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport Avatar from \"../../components/Avatar/Avatar\";\nimport { Name, ContactButton } from \"../Profile/Profile.styled\";\nimport Loader from \"../../components/Loader/Loader\";\nimport AddDataSet from \"../../components/PatientData/AddDataSet/AddDataSet\";\nimport AddData from \"../../components/PatientData/AddData/AddData\";\nimport moment from \"moment\";\nimport { DeleteButton } from \"../../components/Notes/Note/Note.styled\";\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis } from \"recharts\";\nimport { SectionTitle } from \"../Home/Home.styled\";\nimport { Container, NotesAndPatientsContainer, NotesList } from \"../Dashboard/Dashboard.styled\";\nimport { SubmitButton } from \"../../components/SharedStyledComponents/Form.styled\";\nimport { LinkStyled } from \"../../components/Navbar/Navbar.styled\";\nimport Note from \"../../components/Notes/Note/Note\";\nimport NoteForm from \"../../components/Notes/NoteForm/NoteForm\";\n\ninterface MatchParams {\n    id: string;\n}\n\ntype Props = RouteComponentProps<MatchParams> & {};\n\nconst PatientDetails = (props: Props) => {\n    const [isPatientFetching, setPatientFetching] = useState(true);\n    const [patient, setPatient] = useState();\n\n    const [isDataSetsFetching, setDataSetsFetching] = useState(true);\n    const [dataSets, setDataSets] = useState();\n\n    const [addDataSetShown, setDataSetShown] = useState(false);\n\n    const [notes, setNotes] = useState([] as any[]);\n    const [isNotesFetching, setNotesFetching] = useState(true);\n\n    useEffect(() => {\n        Patient.getPatient(props.match.params.id)\n            .then(res => {\n                console.log(res);\n                setPatient(res.data.patient);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .finally(() => {\n                setPatientFetching(false);\n            });\n\n        Patient.getNotes(props.match.params.id)\n            .then(res => {\n                console.log(res);\n                setNotes(res.data.notes);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .finally(() => {\n                setNotesFetching(false);\n            });\n\n        Patient.getDataSets(props.match.params.id)\n            .then(res => {\n                console.log(res);\n                let dataSets = res.data.dataSets;\n                dataSets = dataSets.map((ds: any) => {\n                    return {\n                        ...ds,\n                        dataValues: ds.dataValues.map((dv: any) => {\n                            return {\n                                ...dv,\n                                dateValueString: moment\n                                    .utc(dv.dateValue)\n                                    .local()\n                                    .format(\"DD-MM-YYYY HH:mm\")\n                            };\n                        })\n                    };\n                });\n                dataSets.forEach((ds: any) => {\n                    ds.dataValues.sort((a: any, b: any) => {\n                        console.log(\n                            moment(a.dateValue)\n                                .toDate()\n                                .getTime()\n                        );\n                        if (a.dateValue < b.dateValue) {\n                            return -1;\n                        } else {\n                            return 1;\n                        }\n                    });\n                    console.log(ds);\n                });\n                setDataSets(dataSets);\n            })\n            .catch(err => {\n                console.log(err);\n            })\n            .finally(() => {\n                setDataSetsFetching(false);\n            });\n    }, []);\n\n    const onDataSetAdd = (data: any) => {\n        setDataSets([...dataSets, data]);\n        setDataSetShown(false);\n    };\n\n    const onDataSetDelete = (id: string) => {\n        Patient.removeDataSet(id).then(res => {\n            const dsCopy: any[] = JSON.parse(JSON.stringify(dataSets));\n            dsCopy.splice(\n                dsCopy.findIndex(ds => ds.dataSet.id === id),\n                1\n            );\n            setDataSets(dsCopy);\n        });\n    };\n\n    const onDataValueAdd = (dataSetId: string, data: any) => {\n        const dsCopy: any[] = JSON.parse(JSON.stringify(dataSets));\n        data = {\n            ...data,\n            dateValueString: moment\n                .utc(data.dateValue)\n                .local()\n                .format(\"DD-MM-YYYY HH:mm\")\n        };\n        dsCopy.find(ds => ds.dataSet.id === dataSetId).dataValues.push(data);\n        console.log(dsCopy);\n\n        dsCopy\n            .find(ds => ds.dataSet.id === dataSetId)\n            .dataValues.sort((a: any, b: any) => {\n                if (a.dateValue < b.dateValue) {\n                    return -1;\n                } else {\n                    return 1;\n                }\n            });\n        setDataSets(dsCopy);\n    };\n\n    const deleteDataValue = (id: string, dataSetId: string) => {\n        Patient.deleteDataValue(id)\n            .then(res => {\n                const dsCopy: any[] = JSON.parse(JSON.stringify(dataSets));\n                dsCopy\n                    .find(ds => ds.dataSet.id === dataSetId)\n                    .dataValues.splice(\n                        dsCopy.find(ds => ds.dataSet.id === dataSetId).dataValues.findIndex((i: any) => i.id === id),\n                        1\n                    );\n                setDataSets(dsCopy);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    const onNoteAdd = (note: any) => {\n        setNotes([...notes, note]);\n    };\n\n    const onNoteDelete = (id: string) => {\n        setNotes(notes.filter(e => e.id !== id));\n    };\n\n    return (\n        <PatientDetailsStyled>\n            <ContainerFluid>\n                <PatientDetailsStyledInner>\n                    <SectionTitle>Szczegóły pacjenta</SectionTitle>\n\n                    {!isPatientFetching && patient ? (\n                        <React.Fragment>\n                            <InfoBadge>\n                                {patient.userAccount ? (\n                                    <UserExistInfo>\n                                        <div>Użytkownik jest zarejestrowany w systemie</div>\n                                        <ContactButton\n                                            to={{ pathname: \"/chat\", state: { newConversationUserId: patient.userAccount.id } }}\n                                        >\n                                            Chat\n                                        </ContactButton>\n                                    </UserExistInfo>\n                                ) : (\n                                    <UserDoesNotExistInfo>\n                                        Ten pacjent nie jest powiązany z kontem w tej aplikacji\n                                    </UserDoesNotExistInfo>\n                                )}\n                            </InfoBadge>\n                            <NotesAndPatientsContainer>\n                                <Container>\n                                    <PatientInfo>\n                                        <ImageWrapper>\n                                            <Avatar isFull={true}></Avatar>\n                                        </ImageWrapper>\n                                        <PatientInfoInner>\n                                            <Name>Imię i nazwisko: {patient.firstName + \" \" + patient.lastName}</Name>\n                                            <Age>Wiek: {patient.age}</Age>\n                                            <Gender>Płeć: {patient.gender}</Gender>\n                                            <TherapyGoal>Cel terapii: {patient.therapyGoal}</TherapyGoal>\n                                        </PatientInfoInner>\n                                    </PatientInfo>\n                                </Container>\n                                <Container>\n                                    <SectionTitle>Moje notatki</SectionTitle>\n                                    {!isNotesFetching ? (\n                                        <NotesList>\n                                            {notes.map((note, index) => {\n                                                return (\n                                                    <Note\n                                                        createdAt={note.createdAt}\n                                                        content={note.content}\n                                                        key={index}\n                                                        id={note.id}\n                                                        onNoteDelete={onNoteDelete}\n                                                    ></Note>\n                                                );\n                                            })}\n                                        </NotesList>\n                                    ) : (\n                                        <Loader></Loader>\n                                    )}\n                                    <NoteForm onNoteAdd={onNoteAdd} patientId={props.match.params.id}></NoteForm>\n                                </Container>\n                            </NotesAndPatientsContainer>\n                        </React.Fragment>\n                    ) : (\n                        <Loader></Loader>\n                    )}\n                    <DataSetsContainer>\n                        <SectionTitle>Dane pacjenta</SectionTitle>\n                        {!isDataSetsFetching ? (\n                            dataSets.map((dataSet: any, key: any) => {\n                                return (\n                                    <DataSetWrapper key={key}>\n                                        <DataSetInfo>\n                                            <DataSetTitle>Nazwa: {dataSet.dataSet.title}</DataSetTitle>\n                                            <DataSetDescription>Opis: {dataSet.dataSet.descr}</DataSetDescription>\n                                            <DataSetUnit>Jednostka: {dataSet.dataSet.unit}</DataSetUnit>\n                                            <DeleteDataSet onClick={() => onDataSetDelete(dataSet.dataSet.id)}>\n                                                Usuń zbiór danych\n                                            </DeleteDataSet>\n                                        </DataSetInfo>\n                                        <DataSetInner>\n                                            <DataSetTableWrapper>\n                                                <Table>\n                                                    <thead>\n                                                        <StyledTr>\n                                                            <StyledTh>Data</StyledTh>\n                                                            <StyledTh>Wartość</StyledTh>\n                                                            <StyledTh>Usuń wartość</StyledTh>\n                                                        </StyledTr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {dataSet.dataValues.map((dv: any, index: any) => {\n                                                            return (\n                                                                <StyledTr key={index}>\n                                                                    <StyledTd>{dv.dateValueString}</StyledTd>\n                                                                    <StyledTd>{dv.dataValue} {dataSet.dataSet.unit}</StyledTd>\n                                                                    <StyledTd>\n                                                                        <DeleteButton\n                                                                            onClick={() =>\n                                                                                deleteDataValue(dv.id, dataSet.dataSet.id)\n                                                                            }\n                                                                        >\n                                                                            x\n                                                                        </DeleteButton>\n                                                                    </StyledTd>\n                                                                </StyledTr>\n                                                            );\n                                                        })}\n                                                    </tbody>\n                                                </Table>\n                                                <DataSetFormWrapper>\n                                                    <AddData\n                                                        dataSetId={dataSet.dataSet.id}\n                                                        onDataValueAdd={(data: any) => onDataValueAdd(dataSet.dataSet.id, data)}\n                                                    ></AddData>\n                                                </DataSetFormWrapper>\n                                            </DataSetTableWrapper>\n                                            <DataSetChartWrapper>\n                                                <ResponsiveContainer width=\"100%\" height={350}>\n                                                    <LineChart\n                                                        data={dataSet.dataValues}\n                                                        margin={{ top: 5, right: 0, left: 0, bottom: 5 }}\n                                                    >\n                                                        <Line type=\"monotone\" dataKey=\"dataValue\" />\n                                                        <XAxis dataKey=\"dateValueString\" />\n                                                        <YAxis />\n                                                    </LineChart>\n                                                </ResponsiveContainer>\n                                            </DataSetChartWrapper>\n                                        </DataSetInner>\n                                    </DataSetWrapper>\n                                );\n                            })\n                        ) : (\n                            <Loader></Loader>\n                        )}\n\n                        {!addDataSetShown && (\n                            <Container>\n                                <SubmitButton onClick={() => setDataSetShown(true)}>\n                                    Dodaj nowy zbiór danych pacjenta\n                                </SubmitButton>\n                            </Container>\n                        )}\n                        {addDataSetShown && (\n                            <Container>\n                                <AddDataSet patientId={props.match.params.id} onDataSetAdd={onDataSetAdd}></AddDataSet>\n                            </Container>\n                        )}\n                    </DataSetsContainer>\n                </PatientDetailsStyledInner>\n            </ContainerFluid>\n        </PatientDetailsStyled>\n    );\n};\n\nexport default PatientDetails;\n"],"sourceRoot":""}