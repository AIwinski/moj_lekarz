{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","views/AddPatient/AddPatient.styled.ts","views/AddPatient/AddPatient.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","AddPatientStyled","NAV_HEADROOM","AddPatientStyledInner","addPatientValidationSchema","Yup","shape","therapyGoal","required","age","integer","gender","firstName","lastName","mapDispatchToProps","push","connect","state","currentUser","auth","props","useState","inProgress","setInProgress","setUserData","userId","location","userAccountId","useEffect","Profile","getUser","then","res","console","log","data","user","catch","err","initialValues","validationSchema","onSubmit","values","accountType","Patient","addPatient","patient","id","finally","htmlFor","name","placeholder","component","type"],"mappings":"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","file":"static/js/19.823fe21f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Field, ErrorMessage } from \"formik\";\r\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\r\n\r\nexport const InfoBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border-radius: 5px;\r\n    font-size: 1.4rem;\r\n    background: #fff87d;\r\n`;\r\n\r\nexport const ErrorBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    font-size: 1.4rem;\r\n    border-radius: 5px;\r\n    color: white;\r\n    background: #ff4230;\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem;\r\n    font-size: 1.5rem;\r\n    width: 50%;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        padding: 1rem;\r\n        width: 80%;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        padding: 1rem;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nexport const FormGroup2 = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1rem;\r\n`\r\n\r\nexport const FieldStyled = styled(Field)`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    transition: all 0.2s;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border: 1px solid ${COLORS.blue};\r\n        box-shadow: 0 0 5px ${COLORS.blue};\r\n    }\r\n\r\n    &[type=\"radio\"] {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n        cursor: pointer;\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n    }\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled(ErrorMessage)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    color: red;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n    box-sizing: border-box;\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\ntype SubmitButtonProps = {\r\n    light?: boolean\r\n}\r\n\r\nexport const SubmitButton = styled.button<SubmitButtonProps>`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${COLORS.blue};\r\n    border-radius: 5px;\r\n    transition: background 0.2s;\r\n\r\n    :hover {\r\n        background: ${COLORS.darkblue};\r\n    }\r\n\r\n    ${({ light }) =>\r\n        light && `\r\n            background: #226aff;\r\n            :hover {\r\n                background: #042bfc;\r\n            }\r\n        `\r\n    }\r\n`;\r\n\r\nexport const FormInfo = styled.div`\r\n    width: 100%;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    \r\n`\r\nexport const FormInfoContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    padding-bottom: 1rem;\r\n`","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 64px;\r\n    height: 64px;\r\n    z-index: 1000;\r\n    div {\r\n        position: absolute;\r\n        top: 27px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        background: ${COLORS.blue};\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from \"react\";\r\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LoaderStyled>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </LoaderStyled>\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from 'styled-components';\r\nimport { NAV_HEADROOM } from '../../styles/variables';\r\n\r\nexport const AddPatientStyled = styled.div`\r\n    width: 100vw;\r\n    min-height: calc(100vh - ${NAV_HEADROOM});\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding-bottom: calc(1 * ${NAV_HEADROOM});\r\n`\r\n\r\nexport const AddPatientStyledInner = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n`","import React, { useEffect, useState } from \"react\";\r\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { AddPatientStyled, AddPatientStyledInner } from \"./AddPatient.styled\";\r\nimport {\r\n    FormStyled,\r\n    FormInfo,\r\n    FormGroup,\r\n    LabelStyled,\r\n    SubmitButton,\r\n    FieldStyled,\r\n    ErrorMessageStyled,\r\n    InfoBadge,\r\n    ErrorBadge,\r\n    FormInfoContainer\r\n} from \"../../components/SharedStyledComponents/Form.styled\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport { Profile, Patient } from \"../../api\";\r\nimport { push } from \"connected-react-router\";\r\n\r\nconst addPatientValidationSchema = Yup.object().shape({\r\n    therapyGoal: Yup.string().required(\"Cel terapii jest wymagany\"),\r\n    age: Yup.number()\r\n        .integer(\"Wiek musi być wartością liczbową\")\r\n        .required(\"Wiek jest wymagany\"),\r\n    gender: Yup.string().required(\"Płeć jest wymagana\"),\r\n    firstName: Yup.string().required(\"Imię jest wymagane\"),\r\n    lastName: Yup.string().required(\"Nazwisko jest wymagane\")\r\n});\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {} & RouteComponentProps;\r\n\r\nconst AddPatient = (props: Props) => {\r\n    const [inProgress, setInProgress] = useState(false);\r\n    const [userData, setUserData] = useState();\r\n\r\n    let userId: any = null;\r\n\r\n    if (props.location) {\r\n        userId = props.location.state ? props.location.state.userAccountId : null;\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            Profile.getUser(userId)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    setUserData(res.data.user);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <AddPatientStyled>\r\n            <ContainerFluid>\r\n                <AddPatientStyledInner>\r\n                    <Formik\r\n                        initialValues={{ therapyGoal: \"\", age: \"\", gender: \"\", firstName: \"\", lastName: \"\" }}\r\n                        validationSchema={addPatientValidationSchema}\r\n                        onSubmit={values => {\r\n                            if (props.currentUser.accountType !== \"doctor\") {\r\n                                return;\r\n                            }\r\n                            setInProgress(true);\r\n\r\n                            const data = {\r\n                                ...values,\r\n                                userAccountId: userId\r\n                            };\r\n\r\n                            Patient.addPatient(data)\r\n                                .then(res => {\r\n                                    console.log(res);\r\n                                    props.push(\"/patient-details/\" + res.data.patient.id);\r\n                                })\r\n                                .catch(err => {\r\n                                    console.log(err);\r\n                                })\r\n                                .finally(() => {\r\n                                    setInProgress(false);\r\n                                });\r\n                        }}\r\n                    >\r\n                        <FormStyled>\r\n                            {inProgress && <FormInfoContainer>{<Loader />}</FormInfoContainer>}\r\n\r\n                            <FormInfo>Dodaj nowego pacjenta {userId}</FormInfo>\r\n                            <FormGroup>\r\n                                <LabelStyled htmlFor=\"firstName\">Imię</LabelStyled>\r\n                                <FieldStyled id=\"firstName\" name=\"firstName\" placeholder=\"Imię\" />\r\n                                <ErrorMessageStyled name=\"firstName\" component=\"div\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <LabelStyled htmlFor=\"lastName\">Nazwisko</LabelStyled>\r\n                                <FieldStyled name=\"lastName\" placeholder=\"Nazwisko\" id=\"lastName\" />\r\n                                <ErrorMessageStyled name=\"lastName\" component=\"div\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <LabelStyled htmlFor=\"age\">Wiek</LabelStyled>\r\n                                <FieldStyled name=\"age\" placeholder=\"Wiek\" id=\"age\" />\r\n                                <ErrorMessageStyled name=\"age\" component=\"div\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <LabelStyled htmlFor=\"gender\">Płeć (M/K)</LabelStyled>\r\n                                <FieldStyled name=\"gender\" placeholder=\"Płeć (M/K)\" id=\"gender\" />\r\n                                <ErrorMessageStyled name=\"gender\" component=\"div\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <LabelStyled htmlFor=\"therapyGoal\">Cel terapii</LabelStyled>\r\n                                <FieldStyled name=\"therapyGoal\" placeholder=\"Cel terapii\" id=\"therapyGoal\" />\r\n                                <ErrorMessageStyled name=\"therapyGoal\" component=\"div\" />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <SubmitButton type=\"submit\">Dodaj pacjenta</SubmitButton>\r\n                            </FormGroup>\r\n                        </FormStyled>\r\n                    </Formik>\r\n                </AddPatientStyledInner>\r\n            </ContainerFluid>\r\n        </AddPatientStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n    return { currentUser: state.auth.currentUser };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    push\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPatient);\r\n"],"sourceRoot":""}