{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","components/Gallery/Gallery/Gallery.styled.ts","components/Gallery/Gallery/Gallery.tsx","components/PriceList/PriceListElement/PriceListElement.styled.ts","components/PriceList/PriceListElement/PriceListElement.tsx","views/ProfileSettings/ProfileSettings.styled.ts","components/PriceList/PriceListSettings/PriceListSettings.styled.ts","components/PriceList/PriceListSettings/PriceListSettings.tsx","components/Gallery/GallerySettings/GallerySettings.styled.ts","components/Gallery/AddImageForm/AddImageForm.styled.ts","components/Gallery/Thumbnail/Thumbnail.styled.ts","components/Gallery/Thumbnail/Thumbnail.tsx","components/Gallery/AddImageForm/AddImageForm.tsx","components/Gallery/GallerySettings/GallerySettings.tsx","components/PersonalSettings/PersonalSettings.styled.ts","components/PersonalSettings/PersonalSettings.tsx","components/GeneralSettings/GeneralSettings.styled.ts","components/GeneralSettings/GeneralSettings.tsx","views/ProfileSettings/ProfileSettings.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","_typeof2","obj","Symbol","iterator","constructor","_typeof","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","DeleteButton","Gallery","useState","modalImageIndex","setModalImageIndex","isImageModalOpened","setImageModalOpened","images","className","map","src","index","onClick","onImageClick","isEditable","onImageDelete","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","animationDuration","PriceListElementStyled","Name","Price","PriceListElement","elementName","price","editable","Fragment","onDelete","id","ProfileSettingsStyled","ProfileSettingsStyledInner","SettingList","SettingListTitle","SettingListElement","isActive","SettingWrapper","PriceListSettingsStyled","PriceList","PriceListForm","priceListFormValidationSchema","Yup","shape","required","integer","positive","PriceListSettings","profileId","priceList","setPriceList","useEffect","onPriceListUpdate","ProfileApi","deletePriceListElement","then","res","filter","e","catch","err","console","log","element","initialValues","validationSchema","onSubmit","values","data","addPriceListElement","priceListElement","htmlFor","name","placeholder","component","type","GallerySettingsStyled","AddImageInput","input","StyledThumb","img","Thumbnail","state","loading","thumb","undefined","nextProps","file","this","setState","reader","FileReader","onloadend","result","readAsDataURL","alt","React","Component","AddImageForm","resetForm","addImage","onImageAdd","uploadAvatar","render","setFieldValue","onChange","event","currentTarget","files","GallerySettings","STATIC_FILES_ROOT","srcPath","PersonalSettingsStyled","CurrentAvatar","PersonalSettingsForm","personalSettingsFormValidationSchema","displayName","min","PersonalSettings","onAvatarAdd","Avatar","isFull","url","currentAvatar","onAvatarReset","currentDisplayName","updateUserData","onProfileUpdate","GeneralSettingsForm","TextAreaStyled","generalSettingsFormValidationSchema","city","descr","GeneralSettings","profile","updateProfileData","mapDispatchToProps","setCurrentUser","connect","currentUser","auth","setProfile","currentView","setCurrentView","accountType","getProfile","priceListElements","image","imageId","splice","deleteImage","avatar","user","resetAvatar","onUserDataUpdate","BarLoader"],"mappings":"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","file":"static/js/9.5a66911f.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field, ErrorMessage } from \"formik\";\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\n\nexport const InfoBadge = styled.span`\n    width: 100%;\n    padding: 0.8rem;\n    border-radius: 5px;\n    font-size: 1.4rem;\n    background: #fff87d;\n`;\n\nexport const ErrorBadge = styled.span`\n    width: 100%;\n    padding: 0.8rem;\n    font-size: 1.4rem;\n    border-radius: 5px;\n    color: white;\n    background: #ff4230;\n`;\n\nexport const FormStyled = styled(Form)`\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n    font-size: 1.5rem;\n    width: 50%;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        padding: 1rem;\n        width: 80%;\n    }\n    @media (max-width: ${BREAKPOINTS.sm}) {\n        padding: 1rem;\n        width: 100%;\n    }\n`;\n\nexport const FormGroup = styled.div`\n    margin-top: 1rem;\n    width: 100%;\n    position: relative;\n`;\n\nexport const FormGroup2 = styled.div`\n    margin-top: 1rem;\n    width: 100%;\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 1rem;\n`\n\nexport const FieldStyled = styled(Field)`\n    width: 100%;\n    background: none;\n    border: none;\n    box-sizing: border-box;\n    padding: 0.8rem;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    transition: all 0.2s;\n\n    :focus {\n        outline: none;\n        border: 1px solid ${COLORS.blue};\n        box-shadow: 0 0 5px ${COLORS.blue};\n    }\n\n    &[type=\"radio\"] {\n        outline: none;\n        border: none;\n        box-shadow: none;\n        cursor: pointer;\n        width: 1.6rem;\n        height: 1.6rem;\n    }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n    box-sizing: border-box;\n    width: 100%;\n    color: red;\n    padding: 0 0.8rem;\n    font-size: 1.2rem;\n`;\n\nexport const LabelStyled = styled.label`\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    padding: 0 0.8rem;\n    font-size: 1.2rem;\n`;\n\ntype SubmitButtonProps = {\n    light?: boolean\n}\n\nexport const SubmitButton = styled.button<SubmitButtonProps>`\n    width: 100%;\n    background: none;\n    border: none;\n    padding: 1rem 2rem;\n    color: white;\n    cursor: pointer;\n    background: ${COLORS.blue};\n    border-radius: 5px;\n    transition: background 0.2s;\n\n    :hover {\n        background: ${COLORS.darkblue};\n    }\n\n    ${({ light }) =>\n        light && `\n            background: #226aff;\n            :hover {\n                background: #042bfc;\n            }\n        `\n    }\n`;\n\nexport const FormInfo = styled.div`\n    width: 100%;\n    font-weight: bold;\n`;\n\nexport const Option = styled.option`\n    \n`\nexport const FormInfoContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    padding-bottom: 1rem;\n`","import styled from \"styled-components\";\nimport { COLORS } from \"../../styles/variables\";\n\nexport const LoaderStyled = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 64px;\n    z-index: 1000;\n    div {\n        position: absolute;\n        top: 27px;\n        width: 11px;\n        height: 11px;\n        border-radius: 50%;\n        background: ${COLORS.blue};\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\n    }\n    div:nth-child(1) {\n        left: 6px;\n        animation: lds-ellipsis1 0.6s infinite;\n    }\n    div:nth-child(2) {\n        left: 6px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(3) {\n        left: 26px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(4) {\n        left: 45px;\n        animation: lds-ellipsis3 0.6s infinite;\n    }\n    @keyframes lds-ellipsis1 {\n        0% {\n            transform: scale(0);\n        }\n        100% {\n            transform: scale(1);\n        }\n    }\n    @keyframes lds-ellipsis3 {\n        0% {\n            transform: scale(1);\n        }\n        100% {\n            transform: scale(0);\n        }\n    }\n    @keyframes lds-ellipsis2 {\n        0% {\n            transform: translate(0, 0);\n        }\n        100% {\n            transform: translate(19px, 0);\n        }\n    }\n`;\n\nexport const LoaderWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React from \"react\";\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\n\nconst Loader = () => {\n    return (\n        <LoaderWrapper>\n            <LoaderStyled>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </LoaderStyled>\n        </LoaderWrapper>\n    );\n};\n\nexport default Loader;\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import styled from 'styled-components';\n\nexport const DeleteButton = styled.button`\n    position: absolute;\n    top: 0;\n    right: 0;\n`","import React, { useState } from \"react\";\nimport Lightbox from \"react-image-lightbox\";\nimport \"react-image-lightbox/style.css\";\nimport { DeleteButton } from \"./Gallery.styled\";\n\ntype Props = {\n    images: string[];\n    isEditable: boolean;\n    onImageDelete: (data: any) => any;\n};\n\nconst Gallery = (props: Props) => {\n    const [modalImageIndex, setModalImageIndex] = useState(0);\n    const [isImageModalOpened, setImageModalOpened] = useState(false);\n\n    const onImageClick = (index: number) => {\n        setImageModalOpened(true);\n        setModalImageIndex(index);\n    };\n\n    const { images } = props;\n    return (\n        <div className=\"gallery\">\n            <div className=\"gallery__container\">\n                {images.map((src, index) => (\n                    <div className=\"gallery__image--small\" key={index}>\n                        <img src={src} onClick={() => onImageClick(index)} />\n                        {props.isEditable && <DeleteButton onClick={() => props.onImageDelete(index)}>X</DeleteButton>}\n                    </div>\n                ))}\n            </div>\n            {isImageModalOpened && (\n                <Lightbox\n                    mainSrc={images[modalImageIndex]}\n                    nextSrc={images[(modalImageIndex + 1) % images.length]}\n                    prevSrc={images[(modalImageIndex + images.length - 1) % images.length]}\n                    onCloseRequest={() => setImageModalOpened(false)}\n                    onMovePrevRequest={() => setModalImageIndex((modalImageIndex + images.length - 1) % images.length)}\n                    onMoveNextRequest={() => setModalImageIndex((modalImageIndex + images.length + 1) % images.length)}\n                    animationDuration={0}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Gallery;\n","import styled from 'styled-components';\n\nexport const PriceListElementStyled = styled.div`\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    flex-direction: row;\n    border-radius: 4px;\n    border: 1px solid #eee;\n`\n\nexport const Name = styled.div`\n    padding: 1rem;\n    flex: 1;\n    border-right: 2px solid #ddd;\n`\n\nexport const Price = styled.div`\n    padding: 1rem;\n    flex: 1;\n`\n\nexport const DeleteButton = styled.button`\n    border: 1px solid #ddd;\n    padding: 1rem;\n\n    &:hover {\n        cursor: pointer;\n    }\n`","import React from \"react\";\nimport { PriceListElementStyled, Price, Name, DeleteButton } from \"./PriceListElement.styled\";\n\ntype Props = {\n    elementName: string;\n    price: number;\n    onDelete?: (id: string) => any;\n    editable: boolean;\n    id: string;\n};\n\nconst PriceListElement = (props: Props) => {\n    return (\n        <PriceListElementStyled>\n            <Name>{props.elementName}</Name>\n            <Price>{props.price} zł</Price>\n            {props.editable && (\n                <React.Fragment>\n                    <DeleteButton\n                        onClick={() => {\n                            if (props.onDelete) {\n                                props.onDelete(props.id);\n                            }\n                        }}\n                    >\n                        Usuń\n                    </DeleteButton>\n                </React.Fragment>\n            )}\n        </PriceListElementStyled>\n    );\n};\n\nexport default PriceListElement;\n","import styled from 'styled-components'\nimport { BREAKPOINTS } from '../../styles/variables'\n\nexport const ProfileSettingsStyled = styled.div`\n    \n`\n\nexport const ProfileSettingsStyledInner = styled.div`\n    display: grid;\n    grid-template-columns: 2fr 5fr;\n    grid-gap: 1rem;\n    padding: 2rem;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        grid-template-columns: 1fr;\n        padding: 0.5rem;\n    }\n\n`\n\nexport const SettingList = styled.div`\n\n`\n\nexport const SettingListTitle = styled.div`\n    padding: 0.8rem;\n    background: #ddd;\n`\n\ntype SettingListElementProps = {\n    isActive?: boolean;\n}\n\nexport const SettingListElement = styled.div<SettingListElementProps>`\n    cursor: pointer;\n    padding: 0.8rem;\n    border: 1px solid #ccc;\n    border-top: none;\n\n    ${({ isActive }) =>\n        isActive &&\n        `\n            font-weight: bold;\n            border-left: 2px solid #FC020F;\n        `}\n\n`\n\nexport const SettingWrapper = styled.div`\n\n`","import styled from 'styled-components';\nimport { Form } from 'formik'\n\nexport const PriceListSettingsStyled = styled.div`\n\n`\n\nexport const PriceList = styled.div`\n\n`\n\nexport const PriceListForm = styled(Form)`\n\n`","import React, { useState, useEffect } from \"react\";\nimport { PriceListSettingsStyled, PriceList, PriceListForm } from \"./PriceListSettings.styled\";\nimport PriceListElement from \"../PriceListElement/PriceListElement\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n    FormInfo,\n    FormGroup,\n    LabelStyled,\n    SubmitButton,\n    FieldStyled,\n    ErrorMessageStyled\n} from \"../../../components/SharedStyledComponents/Form.styled\";\nimport { Profile as ProfileApi, AddPriceListElementProps } from \"../../../api\";\n\nconst priceListFormValidationSchema = Yup.object().shape({\n    elementName: Yup.string().required(\"Element name is required\"),\n    price: Yup.number()\n        .integer(\"Field must be a number\")\n        .positive(\"Price must be a positive number\")\n        .required(\"Price is required\")\n});\n\ntype Props = {\n    profileId: string;\n    priceList: any[];\n    onPriceListUpdate: (data: any) => any\n};\n\nconst PriceListSettings = (props: Props) => {\n    let { profileId } = props;\n\n    const [priceList, setPriceList] = useState(props.priceList);\n\n    useEffect(() => {\n        props.onPriceListUpdate(priceList);\n    }, [priceList])\n\n    const onDelete = (id: string) => {\n        ProfileApi.deletePriceListElement(id)\n            .then(res => {\n                setPriceList(priceList.filter(e => e.id !== id));\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    return (\n        <PriceListSettingsStyled>\n            <PriceList>\n                {priceList.map((element: any) => {\n                    return (\n                        <PriceListElement\n                            key={element.id}\n                            elementName={element.elementName}\n                            price={element.price}\n                            editable={true}\n                            onDelete={onDelete}\n                            id={element.id}\n                        />\n                    );\n                })}\n            </PriceList>\n            <Formik\n                initialValues={{ elementName: \"\", price: \"\" }}\n                validationSchema={priceListFormValidationSchema}\n                onSubmit={values => {\n                    const data: AddPriceListElementProps = {\n                        profileId: profileId,\n                        price: values.price,\n                        elementName: values.elementName\n                    };\n                    ProfileApi.addPriceListElement(data)\n                        .then(res => {\n                            setPriceList([...priceList, res.data.priceListElement])\n                        })\n                        .catch(err => {\n                            console.log(err);\n                        });\n                }}\n            >\n                <PriceListForm>\n                    <FormInfo>Ustawienia cennika</FormInfo>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"elementName\">Nazwa usługi</LabelStyled>\n                        <FieldStyled id=\"elementName\" name=\"elementName\" placeholder=\"Nazwa usługi\" />\n                        <ErrorMessageStyled name=\"elementName\" component=\"div\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"price\">Cena</LabelStyled>\n                        <FieldStyled name=\"price\" placeholder=\"Cena\" id=\"price\" />\n                        <ErrorMessageStyled name=\"price\" component=\"div\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <SubmitButton type=\"submit\">Dodaj nowy element cennika</SubmitButton>\n                    </FormGroup>\n                </PriceListForm>\n            </Formik>\n        </PriceListSettingsStyled>\n    );\n};\n\nexport default PriceListSettings;\n","import styled from 'styled-components';\n\nexport const GallerySettingsStyled = styled.div`\n\n`","import styled from 'styled-components'\n\nexport const AddImageSubmitButton = styled.button`\n    padding: 1rem;\n`\n\nexport const AddImageInput = styled.input`\n    border-radius: 6px;\n    padding: 1rem;\n    width: 100%;\n`","import styled from 'styled-components';\n\nexport const StyledThumb = styled.img`\n    width: 200px;\n    height: 200px;\n`","import React from \"react\";\nimport Loader from \"../../Loader/Loader\";\nimport { StyledThumb } from \"./Thumbnail.styled\";\n\ntype Props = {\n    file: any;\n};\n\nclass Thumbnail extends React.Component<Props> {\n    state = {\n        loading: false,\n        thumb: undefined\n    };\n\n    componentWillReceiveProps(nextProps: any) {\n        if (!nextProps.file) {\n            return;\n        }\n\n        this.setState({ loading: true }, () => {\n            let reader = new FileReader();\n\n            reader.onloadend = () => {\n                this.setState({ loading: false, thumb: reader.result });\n            };\n\n            reader.readAsDataURL(nextProps.file);\n        });\n    }\n\n    render() {\n        const { file } = this.props;\n        const { loading, thumb } = this.state;\n\n        if (!file) {\n            return null;\n        }\n\n        if (loading) {\n            return <Loader></Loader>;\n        }\n\n        return <StyledThumb src={thumb} alt={file.name} />;\n    }\n}\n\nexport default Thumbnail;\n","import React from \"react\";\nimport { AddImageInput, AddImageSubmitButton } from \"./AddImageForm.styled\";\nimport { Formik, Form as FormikForm } from \"formik\";\nimport { Profile as ProfileApi, AddImageProps } from \"../../../api\";\nimport { file } from \"@babel/types\";\nimport Thumbnail from \"../Thumbnail/Thumbnail\";\nimport { SubmitButton } from \"../../SharedStyledComponents/Form.styled\";\n\ntype Props = {\n    profileId: string;\n    onImageAdd: (data: any) => any;\n    type: string;\n};\n\nconst AddImageForm = (props: Props) => {\n    return (\n        <Formik\n            initialValues={{ file: null }}\n            onSubmit={(values, { resetForm }) => {\n                if (values.file == null) {\n                    return;\n                }\n\n                const data: AddImageProps = {\n                    file: values.file,\n                    profileId: props.profileId\n                };\n\n                console.log(data);\n                if(props.type === 'image') {\n                    ProfileApi.addImage(data)\n                    .then(res => {\n                        console.log(res);\n                        props.onImageAdd(res.data);\n\n                        resetForm();\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n                } else {\n                    ProfileApi.uploadAvatar(data)\n                    .then(res => {\n                        console.log(res);\n                        props.onImageAdd(res.data);\n\n                        resetForm();\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n                }\n            }}\n            render={({ setFieldValue, values }) => (\n                <FormikForm>\n                    <AddImageInput\n                        id=\"file\"\n                        name=\"file\"\n                        type=\"file\"\n                        onChange={(event: any) => {\n                            setFieldValue(\"file\", event.currentTarget.files[0]);\n                        }}\n                    ></AddImageInput>\n                    <Thumbnail file={values.file}></Thumbnail>\n                    <SubmitButton type=\"submit\">Wyślij &#8250;</SubmitButton>\n                </FormikForm>\n            )}\n        ></Formik>\n    );\n};\n\nexport default AddImageForm;\n","import React from \"react\";\nimport { GallerySettingsStyled } from \"./GallerySettings.styled\";\nimport Gallery from \"../Gallery/Gallery\";\nimport { STATIC_FILES_ROOT } from \"../../../constants/config\";\nimport AddImageForm from \"../AddImageForm/AddImageForm\";\n\ntype Props = {\n    images: any[];\n    profileId: string;\n    onImageAdd: (data: any) => any;\n    onImageDelete: (data: any) => any;\n};\n\nconst GallerySettings = (props: Props) => {\n    return (\n        <GallerySettingsStyled>\n            <Gallery isEditable={true} onImageDelete={props.onImageDelete} images={props.images.map(i => STATIC_FILES_ROOT + i.srcPath)}></Gallery>\n            <AddImageForm type=\"image\" profileId={props.profileId} onImageAdd={props.onImageAdd}></AddImageForm>\n        </GallerySettingsStyled>\n    );\n};\n\nexport default GallerySettings;\n","import styled from 'styled-components'\nimport { Form } from 'formik'\n\nexport const PersonalSettingsStyled = styled.div`\n\n`\n\nexport const CurrentAvatar = styled.div`\n    width: 200px;\n    height: 200px;\n`\n\nexport const PersonalSettingsForm = styled(Form)`\n\n`\n\nexport const ResetAvatarButton = styled.button`\n\n`","import React from \"react\";\nimport { PersonalSettingsStyled, CurrentAvatar, PersonalSettingsForm, ResetAvatarButton } from \"./PersonalSettings.styled\";\nimport AddImageForm from \"../Gallery/AddImageForm/AddImageForm\";\nimport * as Yup from \"yup\";\nimport {\n    FormInfo,\n    FormGroup,\n    LabelStyled,\n    SubmitButton,\n    FieldStyled,\n    ErrorMessageStyled\n} from \"../../components/SharedStyledComponents/Form.styled\";\nimport { Formik } from \"formik\";\nimport { Profile as ProfileApi } from \"../../api\";\nimport Avatar from \"../Avatar/Avatar\";\nimport { STATIC_FILES_ROOT } from \"../../constants/config\";\n\nconst personalSettingsFormValidationSchema = Yup.object().shape({\n    displayName: Yup.string()\n        .required(\"Element name is required\")\n        .min(4, \"Minimum length is 4 characters\")\n});\n\ntype Props = {\n    profileId: string;\n    onAvatarAdd: (data: any) => any;\n    onAvatarReset: (data: any) => any;\n    onProfileUpdate: (data: any) => any;\n    profile: any;\n    currentAvatar: string;\n    currentDisplayName: string;\n};\n\nconst PersonalSettings = (props: Props) => {\n    return (\n        <PersonalSettingsStyled>\n            <FormGroup>\n                <AddImageForm type=\"avatar\" profileId={props.profileId} onImageAdd={props.onAvatarAdd}></AddImageForm>\n            </FormGroup>\n            <FormGroup>\n                Avatar\n                <CurrentAvatar>\n                    <Avatar isFull={true} url={props.currentAvatar ? props.currentAvatar : undefined}></Avatar>\n                </CurrentAvatar>\n            </FormGroup>\n            <FormGroup>\n                <SubmitButton onClick={props.onAvatarReset}>Resetuj avatar</SubmitButton>\n            </FormGroup>\n\n            <Formik\n                initialValues={{ displayName: props.currentDisplayName }}\n                validationSchema={personalSettingsFormValidationSchema}\n                onSubmit={values => {\n                    ProfileApi.updateUserData(values)\n                        .then(res => {\n                            props.onProfileUpdate(res);\n                        })\n                        .catch(err => {\n                            console.log(err);\n                        });\n                }}\n            >\n                <PersonalSettingsForm>\n                    <FormInfo>Edytuj dane konta</FormInfo>\n                    <FormGroup>\n                        <LabelStyled htmlFor=\"displayName\">Nick</LabelStyled>\n                        <FieldStyled id=\"displayName\" name=\"displayName\" placeholder=\"Nick\" />\n                        <ErrorMessageStyled name=\"displayName\" component=\"div\" />\n                    </FormGroup>\n                    <FormGroup>\n                        <SubmitButton type=\"submit\">Aktualizuj</SubmitButton>\n                    </FormGroup>\n                </PersonalSettingsForm>\n            </Formik>\n        </PersonalSettingsStyled>\n    );\n};\n\nexport default PersonalSettings;\n","import styled from 'styled-components';\nimport { Form, Field } from 'formik';\n\nexport const GeneralSettingsStyled = styled.div`\n\n`\n\nexport const GeneralSettingsForm = styled(Form)`\n\n`\n\nexport const TextAreaStyled = styled(Field)`\n    width: 100%;\n    resize: none;\n    height: 20rem;\n`","import React from \"react\";\nimport { GeneralSettingsForm, TextAreaStyled } from \"./GeneralSettings.styled\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport {\n    FormInfo,\n    FormGroup,\n    LabelStyled,\n    SubmitButton,\n    FieldStyled,\n    ErrorMessageStyled\n} from \"../../components/SharedStyledComponents/Form.styled\";\nimport { Profile as ProfileApi, AddPriceListElementProps } from \"../../api\";\n\nconst generalSettingsFormValidationSchema = Yup.object().shape({\n    city: Yup.string().required(\"City is required\"),\n    descr: Yup.string().required(\"Description is required\")\n});\n\ntype Props = {\n    profileId: string;\n    profile: any;\n    onProfileUpdate: (data: any) => any;\n};\n\nconst GeneralSettings = (props: Props) => {\n    return (\n        <Formik\n            initialValues={{ city: props.profile.city, descr: props.profile.descr }}\n            validationSchema={generalSettingsFormValidationSchema}\n            onSubmit={values => {\n                console.log(values)\n                ProfileApi.updateProfileData(values, props.profileId)\n                    .then(res => {\n                        console.log(res)\n                        props.onProfileUpdate(res.data);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n            }}\n        >\n            <GeneralSettingsForm>\n                <FormInfo>Ogólne ustawienia profilu</FormInfo>\n                <FormGroup>\n                    <LabelStyled htmlFor=\"city\">Miasto</LabelStyled>\n                    <FieldStyled id=\"city\" name=\"city\" placeholder=\"Miasto\" />\n                    <ErrorMessageStyled name=\"city\" component=\"div\" />\n                </FormGroup>\n                <FormGroup>\n                    <LabelStyled htmlFor=\"descr\">Opis</LabelStyled>\n                    <TextAreaStyled name=\"descr\" placeholder=\"Opis\" id=\"descr\" component=\"textarea\" />\n                    <ErrorMessageStyled name=\"descr\" component=\"div\" />\n                </FormGroup>\n                <FormGroup>\n                    <SubmitButton type=\"submit\">Aktualizuj</SubmitButton>\n                </FormGroup>\n            </GeneralSettingsForm>\n        </Formik>\n    );\n};\n\nexport default GeneralSettings;\n","import React, { useState, useEffect } from \"react\";\nimport {\n    ProfileSettingsStyled,\n    SettingListElement,\n    SettingWrapper,\n    SettingList,\n    ProfileSettingsStyledInner,\n    SettingListTitle\n} from \"./ProfileSettings.styled\";\nimport PriceListSettings from \"../../components/PriceList/PriceListSettings/PriceListSettings\";\nimport { Profile as ProfileApi } from \"../../api\";\nimport { ApplicationState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\nimport GallerySettings from \"../../components/Gallery/GallerySettings/GallerySettings\";\nimport BarLoader from \"../../components/BarLoader/BarLoader\";\nimport PersonalSettings from \"../../components/PersonalSettings/PersonalSettings\";\nimport GeneralSettings from \"../../components/GeneralSettings/GeneralSettings\";\nimport { setCurrentUser } from \"../../store/auth/actions\";\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {};\n\nconst ProfileSettings = (props: Props) => {\n    const id = props.currentUser.profileId;\n    const [profile, setProfile] = useState();\n    const [currentView, setCurrentView] = useState(\"PERSONAL\");\n\n    useEffect(() => {\n        if (props.currentUser.accountType === \"doctor\") {\n            ProfileApi.getProfile(id)\n                .then(res => {\n                    console.log(res.data.profile);\n                    setProfile(res.data.profile);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }, []);\n\n    const onPriceListUpdate = (data: any) => {\n        setProfile({ ...profile, priceListElements: data });\n        //profile.priceListElements = data;\n    };\n\n    const onImageAdd = (data: any) => {\n        setProfile({ ...profile, images: [...profile.images, data.image] });\n        // profile.images.push(data.image);\n    };\n\n    const onImageDelete = (data: any) => {\n        console.log(data);\n        console.log(profile);\n        const imageId = profile.images[data].id;\n        profile.images.splice(data, 1);\n        ProfileApi.deleteImage(imageId)\n            .then(res => {\n                setProfile({ ...profile, images: [...profile.images] });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    const onAvatarAdd = (data: any) => {\n        console.log(data);\n        props.setCurrentUser({ avatar: data.user.avatar });\n    };\n\n    const onAvatarReset = (data: any) => {\n        console.log(data);\n        ProfileApi.resetAvatar()\n            .then(res => {\n                props.setCurrentUser({ avatar: \"\" });\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    const onUserDataUpdate = (data: any) => {\n        console.log(data.data);\n        props.setCurrentUser({ displayName: data.data.user.displayName });\n    };\n\n    const onProfileUpdate = (data: any) => {\n        console.log(data);\n        setProfile({ ...profile, ...data.profile });\n    };\n\n    return (\n        <ProfileSettingsStyled>\n            <ContainerFluid>\n                <ProfileSettingsStyledInner>\n                    {(props.currentUser.accountType === \"doctor\" && profile) || props.currentUser.accountType === \"patient\" ? (\n                        <React.Fragment>\n                            <SettingList>\n                                <SettingListTitle>Ustawienia</SettingListTitle>\n                                <SettingListElement\n                                    onClick={() => setCurrentView(\"PERSONAL\")}\n                                    isActive={currentView === \"PERSONAL\"}\n                                >\n                                    Ustawienia konta\n                                </SettingListElement>\n                                {props.currentUser.accountType === \"doctor\" && (\n                                    <React.Fragment>\n                                        <SettingListElement\n                                            onClick={() => setCurrentView(\"GENERAL\")}\n                                            isActive={currentView === \"GENERAL\"}\n                                        >\n                                            Ogólne ustawienia profilu\n                                        </SettingListElement>\n\n                                        <SettingListElement\n                                            onClick={() => setCurrentView(\"PRICE_LIST\")}\n                                            isActive={currentView === \"PRICE_LIST\"}\n                                        >\n                                            Ustawienia cennika\n                                        </SettingListElement>\n                                        <SettingListElement\n                                            onClick={() => setCurrentView(\"GALLERY\")}\n                                            isActive={currentView === \"GALLERY\"}\n                                        >\n                                            Ustawienia galerii\n                                        </SettingListElement>\n                                    </React.Fragment>\n                                )}\n                            </SettingList>\n                            <SettingWrapper>\n                                {props.currentUser.accountType === \"doctor\"\n                                    ? (function() {\n                                          switch (currentView) {\n                                              case \"PRICE_LIST\":\n                                                  return (\n                                                      <PriceListSettings\n                                                          profileId={id}\n                                                          priceList={profile.priceListElements}\n                                                          onPriceListUpdate={onPriceListUpdate}\n                                                      ></PriceListSettings>\n                                                  );\n                                              case \"GALLERY\":\n                                                  return (\n                                                      <GallerySettings\n                                                          images={profile.images}\n                                                          profileId={profile.id}\n                                                          onImageAdd={onImageAdd}\n                                                          onImageDelete={onImageDelete}\n                                                      ></GallerySettings>\n                                                  );\n                                              case \"PERSONAL\":\n                                                  return (\n                                                      <PersonalSettings\n                                                          profile={profile}\n                                                          profileId={profile.id}\n                                                          onAvatarAdd={onAvatarAdd}\n                                                          onAvatarReset={onAvatarReset}\n                                                          onProfileUpdate={onUserDataUpdate}\n                                                          currentAvatar={props.currentUser.avatar}\n                                                          currentDisplayName={props.currentUser.displayName}\n                                                      ></PersonalSettings>\n                                                  );\n                                              case \"GENERAL\":\n                                                  return (\n                                                      <GeneralSettings\n                                                          onProfileUpdate={onProfileUpdate}\n                                                          profile={profile}\n                                                          profileId={profile.id}\n                                                      ></GeneralSettings>\n                                                  );\n                                          }\n                                      })()\n                                    : (function() {\n                                          switch (currentView) {\n                                              case \"PERSONAL\":\n                                                  return (\n                                                      <PersonalSettings\n                                                          profile={profile}\n                                                          profileId={\"\"}\n                                                          onAvatarAdd={onAvatarAdd}\n                                                          onAvatarReset={onAvatarReset}\n                                                          onProfileUpdate={onUserDataUpdate}\n                                                          currentAvatar={props.currentUser.avatar}\n                                                          currentDisplayName={props.currentUser.displayName}\n                                                      ></PersonalSettings>\n                                                  );\n                                          }\n                                      })()}\n                            </SettingWrapper>\n                        </React.Fragment>\n                    ) : (\n                        <BarLoader></BarLoader>\n                    )}\n                </ProfileSettingsStyledInner>\n            </ContainerFluid>\n        </ProfileSettingsStyled>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => {\n    return {\n        currentUser: state.auth.currentUser\n    };\n};\n\nconst mapDispatchToProps = {\n    setCurrentUser\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileSettings);\n"],"sourceRoot":""}