{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","views/AddPatient/AddPatient.styled.ts","views/AddPatient/AddPatient.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","AddPatientStyled","NAV_HEADROOM","AddPatientStyledInner","addPatientValidationSchema","Yup","shape","therapyGoal","required","age","integer","gender","firstName","lastName","mapDispatchToProps","push","connect","state","currentUser","auth","props","useState","inProgress","setInProgress","setUserData","userId","location","userAccountId","useEffect","Profile","getUser","then","res","console","log","data","user","catch","err","initialValues","validationSchema","onSubmit","values","accountType","Patient","addPatient","patient","id","finally","htmlFor","name","placeholder","component","type"],"mappings":"u9GAIO,IAAMA,EAAYC,IAAOC,KAAV,KAQTC,EAAaF,IAAOC,KAAV,KASVE,EAAaH,YAAOI,IAAPJ,CAAH,IAaEK,IAAYC,GAIZD,IAAYE,IAMxBC,EAAYR,IAAOS,IAAV,KAMTC,EAAaV,IAAOS,IAAV,KASVE,EAAcX,YAAOY,IAAPZ,CAAH,IAYIa,IAAOC,KACLD,IAAOC,MAaxBC,EAAqBf,YAAOgB,IAAPhB,CAAH,KAQlBiB,EAAcjB,IAAOkB,MAAV,KAYXC,EAAenB,IAAOoB,OAAV,IAOPP,IAAOC,KAKHD,IAAOQ,UAGvB,qBAAGC,OACI,6HASAC,EAAWvB,IAAOS,IAAV,KAKRe,EAASxB,IAAOyB,OAAV,KAGNC,EAAoB1B,IAAOS,IAAV,M,4hDCvIvB,IAAMkB,EAAe3B,IAAOS,IAAV,IAYHI,IAAOC,MA6ChBc,EAAgB5B,IAAOS,IAAV,KC5CXoB,IAbA,WACX,OACI,kBAACD,EAAD,KACI,kBAACD,EAAD,KACI,8BACA,8BACA,8BACA,kC,kiBCPT,IAAMG,EAAmB9B,IAAOS,IAAV,IAEEsB,IAIAA,KAGlBC,EAAwBhC,IAAOS,IAAV,K,iRCYlC,IAAMwB,EAA6BC,WAAaC,MAAM,CAClDC,YAAaF,WAAaG,SAAS,6BACnCC,IAAKJ,WACAK,QAAQ,wDACRF,SAAS,sBACdG,OAAQN,WAAaG,SAAS,gCAC9BI,UAAWP,WAAaG,SAAS,2BACjCK,SAAUR,WAAaG,SAAS,4BAuG9BM,EAAqB,CACvBC,UAGWC,uBARS,SAACC,GACrB,MAAO,CAAEC,YAAaD,EAAME,KAAKD,eAOGJ,EAAzBE,EAtGI,SAACI,GAAkB,IAAD,EACGC,oBAAS,GADZ,mBAC1BC,EAD0B,KACdC,EADc,OAEDF,qBAFC,mBAEhBG,GAFgB,WAI7BC,EAAc,KAmBlB,OAjBIL,EAAMM,WACND,EAASL,EAAMM,SAAST,MAAQG,EAAMM,SAAST,MAAMU,cAAgB,MAGzEC,qBAAU,WACFH,GACAI,IAAQC,QAAQL,GACXM,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZR,EAAYQ,EAAIG,KAAKC,SAExBC,OAAM,SAAAC,GACHL,QAAQC,IAAII,QAGzB,IAGC,kBAACrC,EAAD,KACI,kBAAC,IAAD,KACI,kBAACE,EAAD,KACI,kBAAC,IAAD,CACIoC,cAAe,CAAEhC,YAAa,GAAIE,IAAK,GAAIE,OAAQ,GAAIC,UAAW,GAAIC,SAAU,IAChF2B,iBAAkBpC,EAClBqC,SAAU,SAAAC,GACN,GAAsC,WAAlCtB,EAAMF,YAAYyB,YAAtB,CAGApB,GAAc,GAEd,IAAMY,E,yVAAI,IACHO,EADG,CAENf,cAAeF,IAGnBmB,IAAQC,WAAWV,GACdJ,MAAK,SAAAC,GACFC,QAAQC,IAAIF,GACZZ,EAAML,KAAK,oBAAsBiB,EAAIG,KAAKW,QAAQC,OAErDV,OAAM,SAAAC,GACHL,QAAQC,IAAII,MAEfU,SAAQ,WACLzB,GAAc,SAI1B,kBAAC,IAAD,KACKD,GAAc,kBAAC,IAAD,KAAoB,kBAACtB,EAAA,EAAD,OAEnC,kBAAC,IAAD,8BAAiCyB,GACjC,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAawB,QAAQ,aAArB,aACA,kBAAC,IAAD,CAAaF,GAAG,YAAYG,KAAK,YAAYC,YAAY,cACzD,kBAAC,IAAD,CAAoBD,KAAK,YAAYE,UAAU,SAEnD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaH,QAAQ,YAArB,YACA,kBAAC,IAAD,CAAaC,KAAK,WAAWC,YAAY,WAAWJ,GAAG,aACvD,kBAAC,IAAD,CAAoBG,KAAK,WAAWE,UAAU,SAElD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaH,QAAQ,OAArB,QACA,kBAAC,IAAD,CAAaC,KAAK,MAAMC,YAAY,OAAOJ,GAAG,QAC9C,kBAAC,IAAD,CAAoBG,KAAK,MAAME,UAAU,SAE7C,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaH,QAAQ,UAArB,wBACA,kBAAC,IAAD,CAAaC,KAAK,SAASC,YAAY,uBAAaJ,GAAG,WACvD,kBAAC,IAAD,CAAoBG,KAAK,SAASE,UAAU,SAEhD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaH,QAAQ,eAArB,eACA,kBAAC,IAAD,CAAaC,KAAK,cAAcC,YAAY,cAAcJ,GAAG,gBAC7D,kBAAC,IAAD,CAAoBG,KAAK,cAAcE,UAAU,SAErD,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAcC,KAAK,UAAnB","file":"static/js/18.64981cb0.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field, ErrorMessage } from \"formik\";\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\n\nexport const InfoBadge = styled.span`\n    width: 100%;\n    padding: 0.8rem;\n    border-radius: 5px;\n    font-size: 1.4rem;\n    background: #fff87d;\n`;\n\nexport const ErrorBadge = styled.span`\n    width: 100%;\n    padding: 0.8rem;\n    font-size: 1.4rem;\n    border-radius: 5px;\n    color: white;\n    background: #ff4230;\n`;\n\nexport const FormStyled = styled(Form)`\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\n\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n    font-size: 1.5rem;\n    width: 50%;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        padding: 1rem;\n        width: 80%;\n    }\n    @media (max-width: ${BREAKPOINTS.sm}) {\n        padding: 1rem;\n        width: 100%;\n    }\n`;\n\nexport const FormGroup = styled.div`\n    margin-top: 1rem;\n    width: 100%;\n    position: relative;\n`;\n\nexport const FormGroup2 = styled.div`\n    margin-top: 1rem;\n    width: 100%;\n    position: relative;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-gap: 1rem;\n`\n\nexport const FieldStyled = styled(Field)`\n    width: 100%;\n    background: none;\n    border: none;\n    box-sizing: border-box;\n    padding: 0.8rem;\n    border: 1px solid #ddd;\n    border-radius: 5px;\n    transition: all 0.2s;\n\n    :focus {\n        outline: none;\n        border: 1px solid ${COLORS.blue};\n        box-shadow: 0 0 5px ${COLORS.blue};\n    }\n\n    &[type=\"radio\"] {\n        outline: none;\n        border: none;\n        box-shadow: none;\n        cursor: pointer;\n        width: 1.6rem;\n        height: 1.6rem;\n    }\n`;\n\nexport const ErrorMessageStyled = styled(ErrorMessage)`\n    box-sizing: border-box;\n    width: 100%;\n    color: red;\n    padding: 0 0.8rem;\n    font-size: 1.2rem;\n`;\n\nexport const LabelStyled = styled.label`\n    box-sizing: border-box;\n    display: block;\n    width: 100%;\n    padding: 0 0.8rem;\n    font-size: 1.2rem;\n`;\n\ntype SubmitButtonProps = {\n    light?: boolean\n}\n\nexport const SubmitButton = styled.button<SubmitButtonProps>`\n    width: 100%;\n    background: none;\n    border: none;\n    padding: 1rem 2rem;\n    color: white;\n    cursor: pointer;\n    background: ${COLORS.blue};\n    border-radius: 5px;\n    transition: background 0.2s;\n\n    :hover {\n        background: ${COLORS.darkblue};\n    }\n\n    ${({ light }) =>\n        light && `\n            background: #226aff;\n            :hover {\n                background: #042bfc;\n            }\n        `\n    }\n`;\n\nexport const FormInfo = styled.div`\n    width: 100%;\n    font-weight: bold;\n`;\n\nexport const Option = styled.option`\n    \n`\nexport const FormInfoContainer = styled.div`\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    padding-bottom: 1rem;\n`","import styled from \"styled-components\";\nimport { COLORS } from \"../../styles/variables\";\n\nexport const LoaderStyled = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 64px;\n    z-index: 1000;\n    div {\n        position: absolute;\n        top: 27px;\n        width: 11px;\n        height: 11px;\n        border-radius: 50%;\n        background: ${COLORS.blue};\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\n    }\n    div:nth-child(1) {\n        left: 6px;\n        animation: lds-ellipsis1 0.6s infinite;\n    }\n    div:nth-child(2) {\n        left: 6px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(3) {\n        left: 26px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(4) {\n        left: 45px;\n        animation: lds-ellipsis3 0.6s infinite;\n    }\n    @keyframes lds-ellipsis1 {\n        0% {\n            transform: scale(0);\n        }\n        100% {\n            transform: scale(1);\n        }\n    }\n    @keyframes lds-ellipsis3 {\n        0% {\n            transform: scale(1);\n        }\n        100% {\n            transform: scale(0);\n        }\n    }\n    @keyframes lds-ellipsis2 {\n        0% {\n            transform: translate(0, 0);\n        }\n        100% {\n            transform: translate(19px, 0);\n        }\n    }\n`;\n\nexport const LoaderWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React from \"react\";\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\n\nconst Loader = () => {\n    return (\n        <LoaderWrapper>\n            <LoaderStyled>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </LoaderStyled>\n        </LoaderWrapper>\n    );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { NAV_HEADROOM } from '../../styles/variables';\n\nexport const AddPatientStyled = styled.div`\n    width: 100vw;\n    min-height: calc(100vh - ${NAV_HEADROOM});\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding-bottom: calc(1 * ${NAV_HEADROOM});\n`\n\nexport const AddPatientStyledInner = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    width: 100%;\n`","import React, { useEffect, useState } from \"react\";\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { AddPatientStyled, AddPatientStyledInner } from \"./AddPatient.styled\";\nimport {\n    FormStyled,\n    FormInfo,\n    FormGroup,\n    LabelStyled,\n    SubmitButton,\n    FieldStyled,\n    ErrorMessageStyled,\n    InfoBadge,\n    ErrorBadge,\n    FormInfoContainer\n} from \"../../components/SharedStyledComponents/Form.styled\";\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport { ApplicationState } from \"../../store\";\nimport { connect } from \"react-redux\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Profile, Patient } from \"../../api\";\nimport { push } from \"connected-react-router\";\n\nconst addPatientValidationSchema = Yup.object().shape({\n    therapyGoal: Yup.string().required(\"Cel terapii jest wymagany\"),\n    age: Yup.number()\n        .integer(\"Wiek musi być wartością liczbową\")\n        .required(\"Wiek jest wymagany\"),\n    gender: Yup.string().required(\"Płeć jest wymagana\"),\n    firstName: Yup.string().required(\"Imię jest wymagane\"),\n    lastName: Yup.string().required(\"Nazwisko jest wymagane\")\n});\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {} & RouteComponentProps;\n\nconst AddPatient = (props: Props) => {\n    const [inProgress, setInProgress] = useState(false);\n    const [userData, setUserData] = useState();\n\n    let userId: any = null;\n\n    if (props.location) {\n        userId = props.location.state ? props.location.state.userAccountId : null;\n    }\n\n    useEffect(() => {\n        if (userId) {\n            Profile.getUser(userId)\n                .then(res => {\n                    console.log(res);\n                    setUserData(res.data.user);\n                })\n                .catch(err => {\n                    console.log(err);\n                });\n        }\n    }, []);\n\n    return (\n        <AddPatientStyled>\n            <ContainerFluid>\n                <AddPatientStyledInner>\n                    <Formik\n                        initialValues={{ therapyGoal: \"\", age: \"\", gender: \"\", firstName: \"\", lastName: \"\" }}\n                        validationSchema={addPatientValidationSchema}\n                        onSubmit={values => {\n                            if (props.currentUser.accountType !== \"doctor\") {\n                                return;\n                            }\n                            setInProgress(true);\n\n                            const data = {\n                                ...values,\n                                userAccountId: userId\n                            };\n\n                            Patient.addPatient(data)\n                                .then(res => {\n                                    console.log(res);\n                                    props.push(\"/patient-details/\" + res.data.patient.id);\n                                })\n                                .catch(err => {\n                                    console.log(err);\n                                })\n                                .finally(() => {\n                                    setInProgress(false);\n                                });\n                        }}\n                    >\n                        <FormStyled>\n                            {inProgress && <FormInfoContainer>{<Loader />}</FormInfoContainer>}\n\n                            <FormInfo>Dodaj nowego pacjenta {userId}</FormInfo>\n                            <FormGroup>\n                                <LabelStyled htmlFor=\"firstName\">Imię</LabelStyled>\n                                <FieldStyled id=\"firstName\" name=\"firstName\" placeholder=\"Imię\" />\n                                <ErrorMessageStyled name=\"firstName\" component=\"div\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <LabelStyled htmlFor=\"lastName\">Nazwisko</LabelStyled>\n                                <FieldStyled name=\"lastName\" placeholder=\"Nazwisko\" id=\"lastName\" />\n                                <ErrorMessageStyled name=\"lastName\" component=\"div\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <LabelStyled htmlFor=\"age\">Wiek</LabelStyled>\n                                <FieldStyled name=\"age\" placeholder=\"Wiek\" id=\"age\" />\n                                <ErrorMessageStyled name=\"age\" component=\"div\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <LabelStyled htmlFor=\"gender\">Płeć (M/K)</LabelStyled>\n                                <FieldStyled name=\"gender\" placeholder=\"Płeć (M/K)\" id=\"gender\" />\n                                <ErrorMessageStyled name=\"gender\" component=\"div\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <LabelStyled htmlFor=\"therapyGoal\">Cel terapii</LabelStyled>\n                                <FieldStyled name=\"therapyGoal\" placeholder=\"Cel terapii\" id=\"therapyGoal\" />\n                                <ErrorMessageStyled name=\"therapyGoal\" component=\"div\" />\n                            </FormGroup>\n                            <FormGroup>\n                                <SubmitButton type=\"submit\">Dodaj pacjenta</SubmitButton>\n                            </FormGroup>\n                        </FormStyled>\n                    </Formik>\n                </AddPatientStyledInner>\n            </ContainerFluid>\n        </AddPatientStyled>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => {\n    return { currentUser: state.auth.currentUser };\n};\n\nconst mapDispatchToProps = {\n    push\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AddPatient);\n"],"sourceRoot":""}