{"version":3,"sources":["components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","hooks/useDocumentTitle.ts","../node_modules/file-saver/dist/FileSaver.min.js","views/Chat/Chat.styled.ts","components/Chat/List/List.styled.ts","components/Chat/ListElement/ListElement.styled.ts","components/Chat/ListElement/ListElement.tsx","components/Chat/List/List.tsx","components/Chat/Info/Info.styled.ts","components/PatientButton/PatientButton.styled.ts","components/PatientButton/PatientButton.tsx","components/Chat/Info/Info.tsx","components/Chat/Form/Form.styled.ts","components/Chat/Form/Form.tsx","components/Chat/Message/Message.styled.ts","components/Chat/Message/Message.tsx","views/Chat/Chat.tsx"],"names":["LoaderStyled","styled","div","COLORS","blue","LoaderWrapper","Loader","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","title","useEffect","document","c","b","d","e","XMLHttpRequest","open","responseType","onload","a","response","onerror","console","error","send","status","dispatchEvent","MouseEvent","createEvent","initMouseEvent","window","f","self","global","saveAs","HTMLAnchorElement","g","h","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","warn","test","type","Blob","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","ChatFormWrapper","BREAKPOINTS","md","ChatStyled","NAV_HEADROOM","ConversationWrapper","ChatWindow","ChatInfoWrapper","NewMessageBadge","NoMessagesBadge","ListStyled","ListInfo","ListElementStyled","props","isActive","ListElement","onClick","children","List","elements","onElementClick","map","index","String","active","key","id","value","InfoStyled","Name","InfoWrapper","NoInfo","AccountType","Email","Container","AddPatientButtonStyled","LinkStyled","Wrapper","OpenPatientButton","PatientButton","useState","isFetching","setIsFetching","patients","setPatients","Patient","getPatients","then","res","log","data","catch","err","p","userAccountId","includes","to","find","pathname","state","Info","info","Avatar","url","avatar","displayName","email","accountType","userId","ChatSubmitButton","button","darkblue","ChatTextArea","Field","AddFile","input","AddFileLabel","label","Bottom","Label","span","Form","ref","useRef","onEnterPress","keyCode","shiftKey","preventDefault","current","handleSubmit","initialValues","text","file","onSubmit","values","setFieldValue","conversationId","coversationId","messageType","MessageTypes","newConversation","newConversationUserId","ChatApi","sendMessage","onMessageSent","render","placeholder","component","onKeyDown","icon","faUpload","onChange","event","currentTarget","files","faArrowRight","MessageStyled","isReceived","MessageWrapper","FileBadge","Message","date","srcPath","initialFileName","getFile","statusText","blob","downloadFile","faDownload","mapDispatchToProps","push","connect","currentUser","auth","useDocumentTitle","match","params","activeConversationId","setActiveConversationId","conversations","setConversations","activeConversationMessages","setActiveConversationMessages","activeConversationInfo","setActiveConversationInfo","undefined","setNewConversationUserId","isLoadingConversations","setIsLoadingConversations","chatWindowRef","fetchConversations","socket","on","updateMessages","setConversationInfo","fetchMessages","getConversationIndexByUserId","changeActiveConversation","findIndex","createdNewConversation","message","scrollToBottomOfChatWindow","forEach","users","u","getConversations","loadedMessages","filter","m","getMessagesProps","qty","MESSAGES_PAGE_SIZE","offset","getMessages","messages","scrollTop","scrollHeight","conversationName","slice","parseConversationResponse","createdAt","senderId"],"mappings":"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","file":"static/js/14.3f2cd503.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport { COLORS } from \"../../styles/variables\";\n\nexport const LoaderStyled = styled.div`\n    display: inline-block;\n    position: relative;\n    width: 64px;\n    height: 64px;\n    z-index: 1000;\n    div {\n        position: absolute;\n        top: 27px;\n        width: 11px;\n        height: 11px;\n        border-radius: 50%;\n        background: ${COLORS.blue};\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\n    }\n    div:nth-child(1) {\n        left: 6px;\n        animation: lds-ellipsis1 0.6s infinite;\n    }\n    div:nth-child(2) {\n        left: 6px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(3) {\n        left: 26px;\n        animation: lds-ellipsis2 0.6s infinite;\n    }\n    div:nth-child(4) {\n        left: 45px;\n        animation: lds-ellipsis3 0.6s infinite;\n    }\n    @keyframes lds-ellipsis1 {\n        0% {\n            transform: scale(0);\n        }\n        100% {\n            transform: scale(1);\n        }\n    }\n    @keyframes lds-ellipsis3 {\n        0% {\n            transform: scale(1);\n        }\n        100% {\n            transform: scale(0);\n        }\n    }\n    @keyframes lds-ellipsis2 {\n        0% {\n            transform: translate(0, 0);\n        }\n        100% {\n            transform: translate(19px, 0);\n        }\n    }\n`;\n\nexport const LoaderWrapper = styled.div`\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`","import React from \"react\";\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\n\nconst Loader = () => {\n    return (\n        <LoaderWrapper>\n            <LoaderStyled>\n                <div></div>\n                <div></div>\n                <div></div>\n                <div></div>\n            </LoaderStyled>\n        </LoaderWrapper>\n    );\n};\n\nexport default Loader;\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import { useEffect } from 'react'\n\nexport default (title: string) => {\n    useEffect(() => {\n        document.title = title;\n    }, [title])\n}","(function (a, b) {\n  if (\"function\" == typeof define && define.amd) define([], b);else if (\"undefined\" != typeof exports) b();else {\n    b(), a.FileSaver = {\n      exports: {}\n    }.exports;\n  }\n})(this, function () {\n  \"use strict\";\n\n  function b(a, b) {\n    return \"undefined\" == typeof b ? b = {\n      autoBom: !1\n    } : \"object\" != typeof b && (console.warn(\"Deprecated: Expected third argument to be a object\"), b = {\n      autoBom: !b\n    }), b.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type) ? new Blob([\"\\uFEFF\", a], {\n      type: a.type\n    }) : a;\n  }\n\n  function c(b, c, d) {\n    var e = new XMLHttpRequest();\n    e.open(\"GET\", b), e.responseType = \"blob\", e.onload = function () {\n      a(e.response, c, d);\n    }, e.onerror = function () {\n      console.error(\"could not download file\");\n    }, e.send();\n  }\n\n  function d(a) {\n    var b = new XMLHttpRequest();\n    b.open(\"HEAD\", a, !1);\n\n    try {\n      b.send();\n    } catch (a) {}\n\n    return 200 <= b.status && 299 >= b.status;\n  }\n\n  function e(a) {\n    try {\n      a.dispatchEvent(new MouseEvent(\"click\"));\n    } catch (c) {\n      var b = document.createEvent(\"MouseEvents\");\n      b.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), a.dispatchEvent(b);\n    }\n  }\n\n  var f = \"object\" == typeof window && window.window === window ? window : \"object\" == typeof self && self.self === self ? self : \"object\" == typeof global && global.global === global ? global : void 0,\n      a = f.saveAs || (\"object\" != typeof window || window !== f ? function () {} : \"download\" in HTMLAnchorElement.prototype ? function (b, g, h) {\n    var i = f.URL || f.webkitURL,\n        j = document.createElement(\"a\");\n    g = g || b.name || \"download\", j.download = g, j.rel = \"noopener\", \"string\" == typeof b ? (j.href = b, j.origin === location.origin ? e(j) : d(j.href) ? c(b, g, h) : e(j, j.target = \"_blank\")) : (j.href = i.createObjectURL(b), setTimeout(function () {\n      i.revokeObjectURL(j.href);\n    }, 4E4), setTimeout(function () {\n      e(j);\n    }, 0));\n  } : \"msSaveOrOpenBlob\" in navigator ? function (f, g, h) {\n    if (g = g || f.name || \"download\", \"string\" != typeof f) navigator.msSaveOrOpenBlob(b(f, h), g);else if (d(f)) c(f, g, h);else {\n      var i = document.createElement(\"a\");\n      i.href = f, i.target = \"_blank\", setTimeout(function () {\n        e(i);\n      });\n    }\n  } : function (a, b, d, e) {\n    if (e = e || open(\"\", \"_blank\"), e && (e.document.title = e.document.body.innerText = \"downloading...\"), \"string\" == typeof a) return c(a, b, d);\n    var g = \"application/octet-stream\" === a.type,\n        h = /constructor/i.test(f.HTMLElement) || f.safari,\n        i = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n    if ((i || g && h) && \"object\" == typeof FileReader) {\n      var j = new FileReader();\n      j.onloadend = function () {\n        var a = j.result;\n        a = i ? a : a.replace(/^data:[^;]*;/, \"data:attachment/file;\"), e ? e.location.href = a : location = a, e = null;\n      }, j.readAsDataURL(a);\n    } else {\n      var k = f.URL || f.webkitURL,\n          l = k.createObjectURL(a);\n      e ? e.location = l : location.href = l, e = null, setTimeout(function () {\n        k.revokeObjectURL(l);\n      }, 4E4);\n    }\n  });\n  f.saveAs = a.saveAs = a, \"undefined\" != typeof module && (module.exports = a);\n});","import styled from \"styled-components\";\nimport { NAV_HEADROOM, BREAKPOINTS } from \"../../styles/variables\";\n\nexport const ChatFormWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    height: 20%;\n    form {\n        height: 100%;\n    }\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        height: auto;\n    }\n`;\n\nexport const ChatStyled = styled.div`\n    position: relative;\n    height: calc(100vh - ${NAV_HEADROOM});\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr;\n    box-sizing: border-box;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        height: auto;\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nexport const ConversationWrapper = styled.div`\n    position: relative;\n    height: calc(100vh - ${NAV_HEADROOM});\n    box-sizing: border-box;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        height: auto;\n    }\n`;\n\nexport const ChatWindow = styled.div`\n    box-sizing: border-box;\n    height: 80%;\n    overflow: auto;\n    padding: 0.5rem;\n    position: relative;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        height: auto;\n    }\n`;\n\nexport const ChatInfoWrapper = styled.div`\n    position: relative;\n`\n\nexport const NewMessageBadge = styled.div`\n\n`\n\nexport const NoMessagesBadge = styled.div`\n\n`","import styled from \"styled-components\";\nimport { NAV_HEADROOM, BREAKPOINTS } from \"../../../styles/variables\";\n\nexport const ListStyled = styled.div`\n    min-height: calc(100vh - ${NAV_HEADROOM});\n    overflow: auto;\n    box-sizing: border-box;\n    margin: 0;\n    border-right: 1px solid #ddd;\n    position: relative;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        min-height: auto;\n    }\n`;\n\nexport const ListInfo = styled.div`\n    color: red;\n`","import styled from \"styled-components\";\n\ntype Props = {\n    isActive: boolean;\n}\n\nexport const ListElementStyled = styled.div<Props>`\n    padding: 1rem;\n    cursor: pointer;\n    background: ${props => (props.isActive ? \"#fff\" : \"#e5e5e5\")};\n    border-left: ${props => (props.isActive ? \"none\" : \"3px solid #c92d02\")};\n    &:hover {\n        background: #eee;\n    }\n`;","import React from \"react\";\nimport { ListElementStyled } from \"./ListElement.styled\";\n\ntype Props = {\n    children: JSX.Element[] | JSX.Element | string;\n    isActive: boolean;\n    onClick: () => any;\n};\n\nconst ListElement = (props: Props) => {\n    return (\n        <ListElementStyled onClick={props.onClick} isActive={props.isActive}>\n            {props.children}\n        </ListElementStyled>\n    );\n};\n\nexport default ListElement;\n","import React from \"react\";\nimport { ListStyled } from \"./List.styled\";\nimport ListElement from \"../ListElement/ListElement\";\nimport { ListInfo } from \"./List.styled\";\nimport Loader from \"../../Loader/Loader\";\n\ntype Props = {\n    elements:\n        | {\n              id: string;\n              value: string;\n          }[]\n        | undefined;\n    onElementClick: (id: string) => any;\n    active: number;\n};\n\nconst List = (props: Props) => {\n    const { elements, onElementClick } = props;\n    return (\n        <ListStyled>\n            {elements ? (\n                elements.length === 0 ? (\n                    <ListInfo>Nie masz jeszcze zadnych konwersacji</ListInfo>\n                ) : (\n                    elements.map((e, index) => (\n                        <ListElement isActive={String(index) !== String(props.active)} key={index} onClick={() => onElementClick(e.id)}>\n                            {e.value}\n                        </ListElement>\n                    ))\n                )\n            ) : (\n                <Loader />\n            )}\n        </ListStyled>\n    );\n};\n\nexport default List;\n","import styled from \"styled-components\";\nimport { NAV_HEADROOM, BREAKPOINTS } from \"../../../styles/variables\";\n\nexport const InfoStyled = styled.div`\n    position: relative;\n    border-left: 1px solid #eee;\n    min-height: calc(100vh - ${NAV_HEADROOM});\n    padding: 0.5rem;\n\n    @media (max-width: ${BREAKPOINTS.md}) {\n        min-height: auto;\n    }\n`;\n\nexport const Name = styled.div`\n    margin-left: 1rem;\n`\nexport const InfoWrapper = styled.div`\n    \n`\n\nexport const NoInfo = styled.div`\n\n`\n\nexport const AccountType = styled.div`\n\n`\n\nexport const Email = styled.div`\n\n`\n\nexport const Container = styled.div`\n    display: flex;\n    align-items: center;\n`","import styled from 'styled-components';\nimport { LinkStyled } from '../Navbar/Navbar.styled';\n\nexport const AddPatientButtonStyled = styled(LinkStyled)`\n\n`\n\nexport const Wrapper = styled.div`\n\n`\n\nexport const OpenPatientButton = styled(LinkStyled)`\n\n`","import React, { useState, useEffect } from \"react\";\nimport { AddPatientButtonStyled, Wrapper, OpenPatientButton } from \"./PatientButton.styled\";\nimport { Patient } from \"../../api\";\nimport Loader from \"../Loader/Loader\";\n\ntype Props = {\n    userAccountId: string;\n};\n\nconst PatientButton = (props: Props) => {\n    const [isFetching, setIsFetching] = useState(true);\n    const [patients, setPatients] = useState([] as any[]);\n\n    useEffect(() => {\n        Patient.getPatients()\n            .then(res => {\n                console.log(res.data.patients);\n                setPatients(res.data.patients);\n                setIsFetching(false);\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    }, []);\n\n    return (\n        <Wrapper>\n            {isFetching ? (\n                <Loader></Loader>\n            ) : patients.map(p => String(p.userAccountId)).includes(String(props.userAccountId)) ? (\n                <OpenPatientButton to={\"/patient-details/\" + patients.find(p => String(p.userAccountId)).id}>\n                    Szczegoly pacjenta\n                </OpenPatientButton>\n            ) : (\n                <AddPatientButtonStyled to={{ pathname: \"/add-patient\", state: { userAccountId: props.userAccountId } }}>\n                    Dodaj pacjenta\n                </AddPatientButtonStyled>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default PatientButton;\n","import React from \"react\";\nimport { InfoStyled, InfoWrapper, Name, NoInfo, Email, AccountType, Container } from \"./Info.styled\";\nimport Avatar from \"../../Avatar/Avatar\";\nimport { LinkStyled } from \"../../Navbar/Navbar.styled\";\nimport PatientButton from \"../../PatientButton/PatientButton\";\n\ntype Props = {\n    info:\n        | {\n              displayName: string;\n              avatar: string;\n              accountType: string;\n              email: string;\n              userId: string;\n          }\n        | undefined;\n};\n\nconst Info = (props: Props) => {\n    const { info } = props;\n    return (\n        <InfoStyled>\n            {info ? (\n                <InfoWrapper>\n                    <Container>\n                        <Avatar url={info.avatar}></Avatar>\n                        <Name>{info.displayName}</Name>\n                    </Container>\n                    <Email>Email: {info.email}</Email>\n                    <AccountType>Typ konta: {info.accountType === \"doctor\" ? \"lekarz\" : \"pacjent\"}</AccountType>\n                    <LinkStyled to={\"/video/\" + info.userId}>Chat video</LinkStyled>\n                    {info.accountType === \"patient\" && <PatientButton userAccountId={info.userId}></PatientButton>}\n                </InfoWrapper>\n            ) : (\n                <InfoWrapper>\n                    <NoInfo>no info</NoInfo>\n                </InfoWrapper>\n            )}\n        </InfoStyled>\n    );\n};\n\nexport default Info;\n","import styled from \"styled-components\";\nimport { Field } from \"formik\";\nimport { COLORS } from \"../../../styles/variables\";\n\nexport const ChatSubmitButton = styled.button`\n    cursor: pointer;\n    padding: 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    cursor: pointer;\n    font-size: 1.2rem;\n    color: ${COLORS.darkblue};\n    border: none;\n    background: none;\n`;\n\nexport const ChatTextArea = styled(Field)`\n    box-sizing: border-box;\n    width: 100%;\n    height: 100%;\n    resize: none;\n    padding: 1rem;\n    padding-right: 6rem;\n    border: none;\n    display: block;\n    border-top: 1px solid #ddd;\n`;\n\nexport const AddFile = styled.input`\n    display: none;\n`;\n\nexport const AddFileLabel = styled.label`\n    cursor: pointer;\n    font-size: 1.2rem;\n    color: ${COLORS.darkblue};\n`\n\nexport const Bottom = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    padding: 1rem;\n`\n\nexport const Label = styled.span`\n    padding: 0 0.5rem;\n`","import React, { useRef } from \"react\";\nimport { ChatSubmitButton, ChatTextArea, AddFile, Bottom, AddFileLabel, Label } from \"./Form.styled\";\nimport { Formik, Form as FormikForm } from \"formik\";\nimport { SendMessageProps, MessageTypes } from \"../../../api\";\nimport { Chat as ChatApi } from \"../../../api\";\nimport { faUpload, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\ntype Props = {\n    newConversation: boolean;\n    newConversationUserId: string;\n    coversationId: string;\n    onMessageSent: (data: any) => any;\n};\n\nconst Form = (props: Props) => {\n    const ref = useRef(null);\n\n    const onEnterPress = (e: any) => {\n        if (e.keyCode == 13 && e.shiftKey == false) {\n            e.preventDefault();\n            // @ts-ignore\n            ref.current.handleSubmit();\n        }\n    };\n    return (\n        <Formik\n            ref={ref}\n            initialValues={{ text: \"\", file: null }}\n            onSubmit={(values, { setFieldValue }) => {\n                if (!values.text.replace(/\\s/g, \"\").length && values.file == null) {\n                    return;\n                }\n                let data: SendMessageProps;\n\n                if (values.file == null) {\n                    data = {\n                        conversationId: props.coversationId,\n                        text: values.text,\n                        file: null,\n                        messageType: MessageTypes.text,\n                        newConversation: props.newConversation,\n                        newConversationUserId: props.newConversationUserId\n                    };\n                } else {\n                    data = {\n                        conversationId: props.coversationId,\n                        text: values.text,\n                        file: values.file,\n                        messageType: MessageTypes.file,\n                        newConversation: props.newConversation,\n                        newConversationUserId: props.newConversationUserId\n                    };\n                }\n\n                console.log(data);\n                ChatApi.sendMessage(data)\n                    .then(res => {\n                        console.log(res);\n                        props.onMessageSent(res.data);\n                        setFieldValue(\"text\", \"\");\n                        setFieldValue(\"file\", null);\n                    })\n                    .catch(err => {\n                        console.log(err);\n                    });\n            }}\n            render={({ setFieldValue, values }) => (\n                <FormikForm>\n                    <ChatTextArea name=\"text\" placeholder=\"Wpisz wiadomość...\" component=\"textarea\" onKeyDown={onEnterPress} />\n                    <Bottom>\n                        <AddFileLabel>\n                            <FontAwesomeIcon icon={faUpload}></FontAwesomeIcon>\n\n                            <Label>\n                                {/* \n                                // @ts-ignore */}\n                                {values.file ? values.file.name : \"Załącz plik\"}\n                            </Label>\n                            <AddFile\n                                id=\"file\"\n                                name=\"file\"\n                                type=\"file\"\n                                onChange={(event: any) => {\n                                    setFieldValue(\"file\", event.currentTarget.files[0]);\n                                }}\n                            ></AddFile>\n                        </AddFileLabel>\n\n                        <ChatSubmitButton type=\"submit\"><Label>Wyślij</Label> <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon></ChatSubmitButton>\n                    </Bottom>\n                </FormikForm>\n            )}\n        ></Formik>\n    );\n};\n\nexport default Form;\n","import styled from \"styled-components\";\nimport { COLORS } from \"../../../styles/variables\";\n\ntype Props = {\n    isReceived: boolean;\n}\n\nexport const MessageStyled = styled.div<Props>`\n    border: 1px solid #ddd;\n    display: flex;\n    align-self: flex-start;\n    padding: 0;\n    border-radius: 40px;\n    font-size: 1.6rem;\n    line-height: 2rem;\n    vertical-align: baseline;\n    padding: 0.2rem 1.2rem;\n    margin: 0.2rem 0;\n    margin-right: 20%;\n    border-top-left-radius: 6px;\n    background: #ccc;\n    ${props =>\n        props.isReceived &&\n        `\n        align-self: flex-end;\n        color: white;\n        background: ${COLORS.blue};\n        margin-right: 0;\n        margin-left: 20%;\n        border-top-left-radius: 40px;\n        border-bottom-right-radius: 6px;\n    `}\n`;\n\nexport const MessageWrapper = styled.div`\n    width: 100%;\n    box-sizing: border-box;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n`;\n\nexport const FileBadge = styled.div`\n    cursor: pointer;\n    font-weight: bold;\n`","import React from \"react\";\nimport { MessageStyled, MessageWrapper, FileBadge } from \"./Message.styled\";\nimport { MessageTypes, Chat as ChatApi } from \"../../../api\";\nimport { saveAs } from \"file-saver\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = {\n    isReceived: boolean;\n    type: string;\n    text: string;\n    date: string;\n    srcPath: string;\n    id: string;\n    initialFileName: string;\n};\n\nconst Message = (props: Props) => {\n    const { isReceived, type, text, date, srcPath, id, initialFileName } = props;\n\n    const downloadFile = (id: string) => {\n        ChatApi.getFile(id)\n            .then((res: any) => {\n                console.log(res);\n                if (res.statusText === \"OK\") {\n                    const blob = new Blob([res.data], {\n                        type: res.data.type\n                    });\n                    saveAs(blob, initialFileName);\n                }\n            })\n            .catch(err => {\n                console.log(err);\n            });\n    };\n\n    switch (type) {\n        case MessageTypes.text:\n            return (\n                <MessageWrapper>\n                    <MessageStyled isReceived={isReceived}>{text}</MessageStyled>\n                </MessageWrapper>\n            );\n        case MessageTypes.file:\n            return (\n                <MessageWrapper>\n                    <MessageStyled isReceived={isReceived} onClick={() => downloadFile(id)}>\n                        {text}\n                        <FileBadge>\n                            <FontAwesomeIcon icon={faDownload}></FontAwesomeIcon>\n                            {initialFileName}\n                        </FileBadge>\n                    </MessageStyled>\n                </MessageWrapper>\n            );\n        default:\n            return <MessageWrapper>Unsupported message type</MessageWrapper>;\n    }\n};\n\nexport default Message;\n","import React, { useState, useEffect, useRef } from \"react\";\nimport {\n    ChatStyled,\n    ConversationWrapper,\n    ChatWindow,\n    ChatFormWrapper,\n    ChatInfoWrapper,\n    NewMessageBadge,\n    NoMessagesBadge\n} from \"./Chat.styled\";\nimport List from \"../../components/Chat/List/List\";\nimport Info from \"../../components/Chat/Info/Info\";\nimport Form from \"../../components/Chat/Form/Form\";\nimport Message from \"../../components/Chat/Message/Message\";\nimport { connect } from \"react-redux\";\nimport { ApplicationState } from \"../../store\";\nimport Loader from \"../../components/Loader/Loader\";\nimport { RouteComponentProps } from \"react-router\";\nimport useDocumentTitle from \"../../hooks/useDocumentTitle\";\nimport { Chat as ChatApi, GetMessagesProps } from \"../../api\";\nimport { MESSAGES_PAGE_SIZE } from \"../../constants/config\";\nimport { push } from \"connected-react-router\";\nimport { socket } from \"../../api\";\n\ninterface MatchParams {\n    id: string;\n}\n\ntype Props = RouteComponentProps<MatchParams> & ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {};\n\nconst Chat = (props: Props) => {\n    useDocumentTitle(\"Chat\");\n    const [activeConversationId, setActiveConversationId] = useState(props.match.params.id);\n    const [conversations, setConversations] = useState([] as any[]);\n    const [activeConversationMessages, setActiveConversationMessages] = useState([] as any[]);\n    const [activeConversationInfo, setActiveConversationInfo] = useState();\n    const [newConversationUserId, setNewConversationUserId] = useState(\n        props.location && props.location.state ? props.location.state.newConversationUserId : undefined\n    );\n    const [isLoadingConversations, setIsLoadingConversations] = useState(true);\n\n    const chatWindowRef = useRef(null);\n\n    useEffect(() => {\n        fetchConversations();\n    }, []);\n\n    useEffect(() => {\n        socket.on(\"MESSAGE\", (data: any) => {\n            updateMessages(data);\n        });\n        setConversationInfo(activeConversationId);\n    }, [activeConversationMessages, activeConversationId]);\n\n    useEffect(() => {\n        if (activeConversationId) {\n            fetchMessages();\n        }\n    }, [activeConversationId]);\n\n    useEffect(() => {\n        if (newConversationUserId) {\n            let index = getConversationIndexByUserId(conversations, newConversationUserId);\n            console.log(index);\n            if (index !== -1) {\n                changeActiveConversation(conversations[index].id);\n            }\n        } else {\n            if (activeConversationId) {\n                let index = conversations.findIndex((c: any) => c.id === activeConversationId);\n                console.log(index);\n                if (index !== -1) {\n                    changeActiveConversation(conversations[index].id);\n                } else {\n                    if (conversations.length) {\n                        changeActiveConversation(conversations[0].id);\n                    } else {\n                        changeActiveConversation(\"\");\n                    }\n                }\n            } else {\n                if (conversations.length) {\n                    changeActiveConversation(conversations[0].id);\n                } else {\n                    changeActiveConversation(\"\");\n                }\n            }\n        }\n    }, [conversations, isLoadingConversations]);\n\n    const updateMessages = (data: any) => {\n        if (data.createdNewConversation) {\n            console.log(conversations);\n            setConversations([...conversations, data.newConversation]);\n        }\n        if (activeConversationId == String(data.message.conversationId)) {\n            setActiveConversationMessages([...activeConversationMessages, data.message]);\n            scrollToBottomOfChatWindow();\n        }\n    };\n\n    const getConversationIndexByUserId = (conversations: any[], userId: string) => {\n        let result = -1;\n\n        conversations.forEach((c: any, index: number) => {\n            if (c.users.length > 1) {\n                c.users.forEach((u: any) => {\n                    if (String(u.id) === String(userId) && String(u.id) !== String(props.currentUser.id)) {\n                        result = index;\n                    }\n                });\n            } else if (\n                c.users.length === 1 &&\n                String(c.users[0].id) === String(props.currentUser.id) &&\n                String(c.users[0].id) === String(userId)\n            ) {\n                result = index;\n            }\n        });\n        console.log(conversations);\n        console.log(result);\n        return result;\n    };\n\n    const fetchConversations = () => {\n        ChatApi.getConversations()\n            .then((res: any) => {\n                setConversations(res.data.conversations);\n                setIsLoadingConversations(false);\n            })\n            .catch((err: any) => {\n                console.error(err);\n            });\n    };\n\n    const onMessageSent = (data: any) => {\n        if (data.createdNewConversation) {\n            const newConversation = data.newConversation;\n            setConversations([...conversations, newConversation]);\n            changeActiveConversation(newConversation.id);\n        }\n    };\n\n    const changeActiveConversation = (id: string) => {\n        setActiveConversationId(id);\n        setConversationInfo(id);\n        setNewConversationUserId(undefined);\n        if (id) {\n            props.push(\"/chat/\" + id);\n        } else {\n            props.push(\"/chat\");\n        }\n    };\n\n    const fetchMessages = () => {\n        let loadedMessages = activeConversationMessages.filter(m => String(m.conversationId) === activeConversationId) || [];\n        const getMessagesProps: GetMessagesProps = {\n            conversationId: activeConversationId,\n            qty: MESSAGES_PAGE_SIZE,\n            offset: loadedMessages.length\n        };\n        ChatApi.getMessages(getMessagesProps)\n            .then((res: any) => {\n                setActiveConversationMessages([...loadedMessages, ...res.data.messages]);\n                scrollToBottomOfChatWindow();\n            })\n            .catch((err: any) => {\n                console.error(err);\n            });\n    };\n\n    const onConversationClick = (id: string) => {\n        changeActiveConversation(String(id));\n    };\n\n    const parseConversationResponse = (conversations: any) => {\n        return conversations.map((c: any) => {\n            let conversationName = \"\";\n            c.users.forEach((u: any) => {\n                if (u.displayName !== props.currentUser.displayName) {\n                    conversationName += u.displayName + \", \";\n                }\n            });\n            if (conversationName.length === 0) {\n                conversationName = props.currentUser.displayName + \", \";\n            }\n            return { value: conversationName.slice(0, -2), id: c.id };\n        });\n    };\n\n    const setConversationInfo = (id: string) => {\n        console.log(conversations);\n        let data = undefined;\n        let c = conversations.find((c: any) => String(c.id) === String(id));\n        if (c) {\n            if (c.users.length === 1) {\n                data = {\n                    displayName: c.users[0].displayName,\n                    accountType: c.users[0].accountType,\n                    email: c.users[0].email,\n                    avatar: c.users[0].avatar,\n                    userId: c.users[0].id\n                };\n            } else if (c.users.length > 1) {\n                let u = c.users.find((u: any) => String(u.id) !== String(props.currentUser.id));\n                if (u) {\n                    data = {\n                        displayName: u.displayName,\n                        accountType: u.accountType,\n                        email: u.email,\n                        avatar: u.avatar,\n                        userId: u.id\n                    };\n                } else {\n                    data = undefined;\n                }\n            }\n        }\n\n        setActiveConversationInfo(data);\n    };\n\n    const scrollToBottomOfChatWindow = () => {\n        if (chatWindowRef && chatWindowRef.current) {\n            // @ts-ignore\n            chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\n        }\n    };\n\n    return (\n        <ChatStyled>\n            <List\n                elements={!isLoadingConversations && conversations ? parseConversationResponse(conversations) : undefined}\n                onElementClick={onConversationClick}\n                active={\n                    !isLoadingConversations && conversations\n                        ? conversations.findIndex(c => String(c.id) === String(activeConversationId))\n                        : -1\n                }\n            />\n            <ConversationWrapper>\n                <ChatWindow ref={chatWindowRef}>\n                    {newConversationUserId ? (\n                        <NewMessageBadge>new conversation: {newConversationUserId}</NewMessageBadge>\n                    ) : activeConversationMessages !== undefined ? (\n                        activeConversationMessages.length !== 0 ? (\n                            activeConversationMessages.map((m: any) => (\n                                <Message\n                                    text={m.text}\n                                    key={m.id}\n                                    id={m.id}\n                                    date={m.createdAt}\n                                    type={m.messageType}\n                                    srcPath={m.srcPath}\n                                    initialFileName={m.initialFileName}\n                                    isReceived={String(props.currentUser.id) === String(m.senderId)}\n                                ></Message>\n                            ))\n                        ) : (\n                            <NoMessagesBadge>brak wiadomosci</NoMessagesBadge>\n                        )\n                    ) : (\n                        <Loader />\n                    )}\n                </ChatWindow>\n                <ChatFormWrapper>\n                    <Form\n                        newConversationUserId={newConversationUserId}\n                        coversationId={activeConversationId}\n                        newConversation={!!newConversationUserId}\n                        onMessageSent={onMessageSent}\n                    />\n                </ChatFormWrapper>\n            </ConversationWrapper>\n            <ChatInfoWrapper>{conversations ? <Info info={activeConversationInfo} /> : <Loader />}</ChatInfoWrapper>\n        </ChatStyled>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => {\n    return { currentUser: state.auth.currentUser };\n};\n\nconst mapDispatchToProps = {\n    push\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\n"],"sourceRoot":""}