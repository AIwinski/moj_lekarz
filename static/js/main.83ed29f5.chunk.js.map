{"version":3,"sources":["store/auth/types.ts","components/Navbar/Navbar.styled.ts","styles/scrollbar.ts","styles/router.ts","styles/gallery.ts","styles/input-range.ts","styles/global.ts","components/DropdownMenu/DropdownMenu.styled.ts","hooks/useOutsideAlerter.ts","components/DropdownMenu/DropdownMenu.tsx","components/Navbar/Navbar.tsx","components/AnimatedSwitch.tsx","components/App/App.tsx","index.tsx","registerServiceWorker.js","store/auth/reducer.ts","store/auth/sagas.ts","store/chat/types.ts","store/chat/reducer.ts","store/filters/reducer.ts","store/sorting/reducer.ts","store/index.ts","constants/config.ts","store/auth/actions.ts","styles/variables.ts","components/BarLoader/BarLoader.tsx","api.ts","components/Avatar/Avatar.styled.ts","components/Avatar/Avatar.tsx","components/SharedStyledComponents/ContainerFluid.styled.ts","store/filters/types.ts","store/sorting/types.ts"],"names":["AuthActionTypes","NavbarStyled","styled","nav","NAV_HEIGHT","NavbarInner","div","props","isOnline","OfflineBadge","Logo","GUTTER","Hamburger","button","BREAKPOINTS","md","COLORS","white","blue","ItemList","ul","opened","Item","li","gray","LinkStyled","Link","darkblue","blue2","NameBadge","span","AvatarAndDropdown","LogoImage","img","isBig","scrollbar","css","router","routerTransition","exit","enter","gallery","inputRange","GlobalStyle","createGlobalStyle","xl","lg","sm","NAV_HEADROOM","Wrapper","Toggle","List","LinkElement","useOutsideAlerter","ref","handler","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","DropdownMenu","useRef","useState","isOpened","setOpened","onClick","children","elements","map","e","index","key","to","url","onclick","text","mapDispatchToProps","logout","connect","state","currentUser","auth","isAuthenticated","menuOpened","setMenuOpened","maxheight","src","Fragment","icon","faTimes","faBars","accountType","Avatar","avatar","undefined","displayName","profileId","faAngleDown","withRouter","TransitionGroup","CSSTransition","location","pathname","split","classNames","timeout","appear","className","fallback","BarLoader","Home","lazy","Login","Register","Chat","RegisterSuccess","ProfileList","Profile","ProfileSettings","Dashboard","VideoChat","NotFound","AddPatient","PatientDetails","Offline","App","navigator","onLine","setIsOnline","window","updateIndicator","console","log","type","history","push","store","persistor","exact","path","component","ReactDOM","render","getElementById","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initialState","id","email","token","isLoggingIn","isRegistering","handleLogin","handleRegister","handleLogout","watchLoginRequest","watchRegisterRequest","watchLogout","authSaga","action","call","Auth","login","payload","res","put","loginError","loginSuccess","data","from","registerError","registerSuccess","takeEvery","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT","all","fork","ChatActionTypes","city","services","priceRange","min","max","sorting","rootSaga","createBrowserHistory","rootReducer","combineReducers","connectRouter","LOGIN_SUCCESS","user","LOGIN_ERROR","REGISTER_SUCCESS","REGISTER_ERROR","AUTH_ERROR_RESET","SET_CURRENT_USER","chat","SEND_MESSAGE_REQUEST","SEND_MESSAGE_SUCCESS","SEND_MESSAGE_ERROR","filters","FiltersActionTypes","FILTER","SortingActionTypes","SORT","persistConfig","storage","whitelist","loggerMiddleware","createLogger","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","persistStore","run","API_ROOT","STATIC_FILES_ROOT","PROFILES_PAGE_SIZE","MESSAGES_PAGE_SIZE","FALLBACK_AVATAR_URL","loginRequest","registerRequest","resetAuthError","setCurrentUser","black","golden","lightgray","CONTAINER_FLUID_GUTTER_REM","multiplier","TopBarProgress","config","barColors","shadowColor","socket","io","on","localStorage","setItem","requests","get","axios","interceptors","request","use","socketid","getItem","headers","getState","Authorization","Promise","reject","response","status","dispatch","showLoginFirstMessage","LoginTypes","MessageTypes","post","body","patch","delete","loginType","local","facebook","sendMessage","messageType","file","fd","FormData","append","set","conversationId","getConversations","getMessages","encodeURIComponent","qty","offset","getFile","responseType","getProfiles","alreadyFetched","filterQuery","JSON","stringify","getProfile","addPriceListElement","deletePriceListElement","addImage","deleteImage","imageId","uploadAvatar","resetAvatar","updateProfileData","updateUserData","addReview","updateReview","search","phrase","count","mostRecent","getReport","days","getUser","Patient","getPatients","getPatient","addPatient","addNote","deleteNote","getNotes","patientId","getDataSets","addDataSet","removeDataSet","dataSetId","addDataValue","deleteDataValue","AvatarWrapper","isFull","AvatarImage","includes","ContainerFluid"],"mappings":"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","file":"static/js/main.83ed29f5.chunk.js","sourcesContent":["import { LoginProps, RegisterProps } from \"../../api\";\r\n\r\nexport interface AuthState {\r\n    readonly currentUser: {\r\n        id: string,\r\n        avatar: string,\r\n        displayName: string,\r\n        email: string,\r\n        accountType: string,\r\n        profileId: string\r\n    },\r\n    readonly token: string,\r\n    readonly isLoggingIn: boolean,\r\n    readonly isRegistering: boolean,\r\n    readonly isAuthenticated: boolean,\r\n    readonly error: any\r\n}\r\n\r\nexport enum AuthActionTypes {\r\n    LOGIN_REQUEST = \"@@auth/LOGIN_REQUEST\",\r\n    LOGIN_SUCCESS = \"@@auth/LOGIN_SUCCESS\",\r\n    LOGIN_ERROR = \"@@auth/LOGIN_ERROR\",\r\n    REGISTER_REQUEST = \"@@auth/REGISTER_REQUEST\",\r\n    REGISTER_SUCCESS = \"@@auth/REGISTER_SUCCESS\",\r\n    REGISTER_ERROR = \"@@auth/REGISTER_ERROR\",\r\n    AUTH_ERROR_RESET = \"@@auth/AUTH_ERROR_RESET\",\r\n    LOGOUT = \"@@auth/LOGOUT\",\r\n    SET_CURRENT_USER = \"@@auth/SET_CURRENT_USER\"\r\n}","import styled from \"styled-components\";\r\nimport { BREAKPOINTS, GUTTER, NAV_HEIGHT, COLORS } from \"../../styles/variables\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const NavbarStyled = styled.nav`\r\n    position: sticky;\r\n    box-sizing: border-box;\r\n    top: 0;\r\n    z-index: 1000;\r\n    height: ${NAV_HEIGHT};\r\n    width: 100%;\r\n    -webkit-box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.2);\r\n    -moz-box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.2);\r\n    box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.2);\r\n\r\n    font-weight: bold;\r\n`;\r\n\r\ntype NavbarInnerProps = {\r\n    isOnline: boolean;\r\n}\r\n\r\nexport const NavbarInner = styled.div<NavbarInnerProps>`\r\n    display: flex;\r\n    justify-content: ${props => (props.isOnline ? \"space-between\" : \"center\")};\r\n    /* justify-content: space-between; */\r\n    align-items: center;\r\n    height: 100%;\r\n    box-sizing: border-box;\r\n`;\r\n\r\nexport const OfflineBadge = styled.div`\r\n    position: absolute;\r\n    background: #ff2020;\r\n    opacity: 0.92;\r\n    height: 2rem;\r\n    font-size: 1.2rem;\r\n    bottom: -2rem;\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    letter-spacing: 0.1rem;\r\n    justify-content: center;\r\n    color: white;\r\n    z-index: 0;\r\n`\r\n\r\nexport const Logo = styled.div`\r\n    padding: 0 ${GUTTER(3)};\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding-left: 0;\r\n    position: relative;\r\n    height: 100%;\r\n`;\r\n\r\nexport const Hamburger = styled.button`\r\n    display: none;\r\n    background: none;\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        display: block;\r\n    }\r\n    width: 2.6rem;\r\n    height: 2.6rem;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    margin: 0;\r\n    border: none;\r\n    background: ${COLORS.white};\r\n    color: ${COLORS.blue};\r\n    font-size: 2.2rem;\r\n    outline: none;\r\n`;\r\n\r\ntype ItemListProps = {\r\n    opened: boolean;\r\n}\r\n\r\nexport const ItemList = styled.ul<ItemListProps>`\r\n    display: flex;\r\n    flex-direction: row;\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        width: 100%;\r\n        left: 0;\r\n        top: ${NAV_HEIGHT};\r\n        max-height: calc(100vh - ${NAV_HEIGHT});\r\n        position: absolute;\r\n        flex-direction: column;\r\n        justify-content: space-evenly;\r\n        background: white;\r\n        display: ${props => (props.opened ? \"flex\" : \"none\")};\r\n    }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n    padding: 0 ${GUTTER(4)};\r\n    font-size: 1.4rem;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    \r\n\r\n    :last-of-type {\r\n        padding-right: 0;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        justify-content: flex-start;\r\n        padding: ${GUTTER(4)};\r\n        border-top: 1px solid ${COLORS.gray};\r\n        :last-of-type {\r\n            padding-right: ${GUTTER(4)};\r\n            border-bottom: 1px solid ${COLORS.gray};\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LinkStyled = styled(Link)`\r\n    text-decoration: none;\r\n    color: ${COLORS.darkblue};\r\n    transition: color 0.1s;\r\n\r\n    :link {\r\n        color: ${COLORS.darkblue};\r\n    }\r\n\r\n    &:hover {\r\n        color: ${COLORS.blue2};\r\n    }\r\n\r\n    position: relative;\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const NameBadge = styled.span`\r\n    color: #444;\r\n    padding: 0 0.5rem;\r\n`\r\n\r\nexport const AvatarAndDropdown = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\ntype LogoImageProps = {\r\n    isBig?: boolean;\r\n}\r\n\r\nexport const LogoImage = styled.img<LogoImageProps>`\r\n    height: ${props => (props.isBig ? \"5rem\" : \"3.2rem\")};\r\n    margin-left: ${props => (props.isBig ? \"2rem\" : \"0rem\")};\r\n`","import { css } from \"styled-components\";\r\n\r\nexport const scrollbar = css`\r\n    ::-webkit-scrollbar {\r\n        width: 8px;\r\n    }\r\n\r\n    ::-webkit-scrollbar:hover {\r\n        background: #ddd;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        box-shadow: inset 0 0 4px rgba(148, 148, 148, 0.6);\r\n    }\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: rgba(156, 156, 156, 0.7);\r\n        border-radius: 3px;\r\n        border: 1px solid rgba(196, 196, 196, 0.7);\r\n    }\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: rgba(126, 126, 126, 1);\r\n    }\r\n`;","import { css } from \"styled-components\";\r\nimport { routerTransition } from \"./variables\";\r\n\r\nexport const router = css`\r\n    .router-enter {\r\n        opacity: 0.01;\r\n        transform: translate3d(0, 12px, 0);\r\n    }\r\n\r\n    .router-enter-active {\r\n        opacity: 1;\r\n        transform: translate3d(0, 0px, 0);\r\n        transition: all ${routerTransition.exit}ms ${routerTransition.enter - routerTransition.exit}ms;\r\n    }\r\n\r\n    .router-exit {\r\n        opacity: 1;\r\n        transform: translate3d(0, 0px, 0);\r\n    }\r\n\r\n    .router-exit-active {\r\n        opacity: 0.01;\r\n        transform: translate3d(0, 12px, 0);\r\n        transition: all ${routerTransition.exit}ms;\r\n    }\r\n`;","import { css } from \"styled-components\";\r\nimport { routerTransition } from \"./variables\";\r\n\r\nexport const gallery = css`\r\n.gallery {\r\n    &__container {\r\n        display: grid;\r\n        grid-gap: 2rem;\r\n        grid-template-columns: repeat(6, 1fr);\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            grid-template-columns: repeat(2, 1fr);\r\n        }\r\n    }\r\n        \r\n\r\n\r\n    &__image--small {\r\n        height: 100%;\r\n        width: 100%;\r\n        cursor: pointer;\r\n        position: relative;\r\n\r\n        img {\r\n            height: 100%;\r\n            width: 100%;\r\n            object-fit: cover;\r\n            object-position: center;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n.ril__toolbar {\r\n    background-color: transparent !important;\r\n}\r\n`;","import { css } from \"styled-components\";\r\nimport { routerTransition } from \"./variables\";\r\n\r\nexport const inputRange = css`\r\n    .input-range {\r\n        padding: 3rem 0rem;\r\n        \r\n        &__label-container {\r\n            font-size: 1.6rem !important;\r\n        }\r\n\r\n        &__label--value {\r\n            top: -3rem !important;\r\n        }\r\n\r\n        &__label--max {\r\n            bottom: -0.4rem !important;\r\n        }\r\n\r\n        &__label--min {\r\n            bottom: -0.4rem !important;\r\n        }\r\n    }\r\n`;","import { createGlobalStyle } from \"styled-components\";\r\nimport { BREAKPOINTS, NAV_HEADROOM } from \"./variables\";\r\nimport { scrollbar } from \"./scrollbar\";\r\nimport { router } from \"./router\";\r\nimport { gallery } from \"./gallery\";\r\nimport { inputRange } from \"./input-range\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n    @import url(\"https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap\");\r\n    html,\r\n    body {\r\n        font-size: 62.5%;\r\n        @media (max-width: ${BREAKPOINTS.xl}) {\r\n            font-size: 60%;\r\n        }\r\n        @media (max-width: ${BREAKPOINTS.lg}) {\r\n            font-size: 57.5%;\r\n        }\r\n        @media (max-width: ${BREAKPOINTS.md}) {\r\n            font-size: 55%;\r\n        }\r\n        @media (max-width: ${BREAKPOINTS.sm}) {\r\n            font-size: 52.5%;\r\n        }\r\n\r\n    \r\n        scroll-behavior: smooth;\r\n\r\n        max-width: 100vw;\r\n\r\n    }\r\n    body {\r\n        overflow: overlay;\r\n        font-size: 1.6rem;\r\n        line-height: 2.4rem;\r\n        font-family: \"Roboto\", sans-serif;\r\n        -webkit-font-smoothing: antialiased;\r\n        -moz-osx-font-smoothing: grayscale;\r\n        text-rendering: optimizeLegibility;\r\n    }\r\n    html,\r\n    body,\r\n    div,\r\n    span,\r\n    applet,\r\n    object,\r\n    iframe,\r\n    h1,\r\n    h2,\r\n    h3,\r\n    h4,\r\n    h5,\r\n    h6,\r\n    p,\r\n    blockquote,\r\n    pre,\r\n    a,\r\n    abbr,\r\n    acronym,\r\n    address,\r\n    big,\r\n    cite,\r\n    code,\r\n    del,\r\n    dfn,\r\n    em,\r\n    img,\r\n    ins,\r\n    kbd,\r\n    q,\r\n    s,\r\n    samp,\r\n    small,\r\n    strike,\r\n    strong,\r\n    sub,\r\n    sup,\r\n    tt,\r\n    var,\r\n    b,\r\n    u,\r\n    i,\r\n    center,\r\n    dl,\r\n    dt,\r\n    dd,\r\n    ol,\r\n    ul,\r\n    li,\r\n    fieldset,\r\n    form,\r\n    label,\r\n    legend,\r\n    table,\r\n    caption,\r\n    tbody,\r\n    tfoot,\r\n    thead,\r\n    tr,\r\n    th,\r\n    td,\r\n    article,\r\n    aside,\r\n    canvas,\r\n    details,\r\n    embed,\r\n    figure,\r\n    figcaption,\r\n    footer,\r\n    header,\r\n    hgroup,\r\n    menu,\r\n    nav,\r\n    output,\r\n    ruby,\r\n    section,\r\n    summary,\r\n    time,\r\n    mark,\r\n    audio,\r\n    video {\r\n        margin: 0;\r\n        padding: 0;\r\n        border: 0;\r\n        vertical-align: baseline;\r\n        box-sizing: border-box;\r\n    }\r\n    article,\r\n    aside,\r\n    details,\r\n    figcaption,\r\n    figure,\r\n    footer,\r\n    header,\r\n    hgroup,\r\n    menu,\r\n    nav,\r\n    section {\r\n        display: block;\r\n    }\r\n    ol,\r\n    ul {\r\n        list-style: none;\r\n    }\r\n    blockquote,\r\n    q {\r\n        quotes: none;\r\n    }\r\n    blockquote:before,\r\n    blockquote:after,\r\n    q:before,\r\n    q:after {\r\n        content: \"\";\r\n        content: none;\r\n    }\r\n    table {\r\n        border-collapse: collapse;\r\n        border-spacing: 0;\r\n    }\r\n    .page-wrapper {\r\n        position: absolute;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        padding-top: ${NAV_HEADROOM};\r\n        box-sizing: border-box;\r\n        display: block;\r\n    }\r\n    ${scrollbar}\r\n    ${router}\r\n    ${gallery}\r\n    ${inputRange}\r\n\r\n    select {\r\n        display: inline-block;\r\n        width: 100%;\r\n        height: calc(1.5em + 0.75rem + 2px);\r\n        padding: 0.375rem 1.75rem 0.375rem 0.75rem;\r\n        font-weight: 400;\r\n        line-height: 1.5;\r\n        color: #495057;\r\n        vertical-align: middle;\r\n        background: #fff url(\"data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23343a40' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M2 5l6 6 6-6'/%3e%3c/svg%3e\") no-repeat right 0.75rem center/16px 12px;\r\n        border: 1px solid #ced4da;\r\n        border-radius: 0.25rem;\r\n        -webkit-appearance: none;\r\n        -moz-appearance: none;\r\n        appearance: none;\r\n    }\r\n`;","import styled from 'styled-components'\r\nimport { Link } from 'react-router-dom'\r\nimport { COLORS } from '../../styles/variables'\r\n\r\nexport const Wrapper = styled.div`\r\n    width: 2.6rem;\r\n    height: 2.6rem;\r\n    padding: 0;\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`\r\n\r\nexport const Toggle = styled.button`\r\n    display: block;\r\n    border: none;\r\n    width: 2.6rem;\r\n    height: 2.6rem;\r\n    cursor: pointer;\r\n    padding: 0;\r\n    margin: 0;\r\n    border-radius: 100%;\r\n    background: ${COLORS.white};\r\n    color: ${COLORS.blue};\r\n    font-size: 2.2rem;\r\n    outline: none;\r\n`\r\n\r\nexport const List = styled.ul`\r\n    display: flex;\r\n    flex-direction: column;\r\n    position: absolute;\r\n    top: 120%;\r\n    right: 0;\r\n    width: 12rem;\r\n\r\n    box-shadow:\r\n  0 4.5px 10px rgba(0, 0, 0, 0.078),\r\n  0 9px 80px rgba(0, 0, 0, 0.12)\r\n;\r\n\r\n    border: 1px solid #eee;\r\n\r\n`\r\n\r\nexport const LinkElement = styled(Link)`\r\n    padding: 0.5rem;\r\n    width: 100%;\r\n    font-size: 1.4rem;\r\n    border-bottom: 1px solid #eee;\r\n    background: ${COLORS.white};\r\n    text-decoration: none;\r\n    color: ${COLORS.blue};\r\n    text-align: center;\r\n\r\n    &:hover {\r\n        background: #ddd;\r\n        cursor: pointer;\r\n    }\r\n\r\n`","import React, { useRef, useEffect } from \"react\";\r\n\r\nfunction useOutsideAlerter(ref: any, handler: any) {\r\n    function handleClickOutside(event: any) {\r\n        if (ref.current && !ref.current.contains(event.target)) {\r\n            handler()\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", handleClickOutside);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleClickOutside);\r\n        };\r\n    });\r\n}\r\n\r\nexport default useOutsideAlerter;","import React, { useState, useRef } from \"react\";\r\nimport { Wrapper, Toggle, LinkElement, List } from \"./DropdownMenu.styled\";\r\nimport useOutsideAlerter from \"../../hooks/useOutsideAlerter\";\r\n\r\ntype Props = {\r\n    children?: any;\r\n    elements: {\r\n        text: string;\r\n        url?: string;\r\n        onclick?: () => any;\r\n    }[];\r\n};\r\n\r\nconst DropdownMenu = (props: Props) => {\r\n    const ref = useRef(null);\r\n    const [isOpened, setOpened] = useState(false);\r\n    useOutsideAlerter(ref, () => {\r\n        setOpened(false);\r\n    });\r\n    return (\r\n        <Wrapper ref={ref}>\r\n            <Toggle onClick={() => setOpened(!isOpened)}>{props.children}</Toggle>\r\n            {isOpened && (\r\n                <List>\r\n                    {props.elements.map((e, index) => {\r\n                        return (\r\n                            <LinkElement\r\n                                key={index}\r\n                                to={e.url}\r\n                                onClick={() => {\r\n                                    setOpened(!isOpened);\r\n                                    if (e.onclick) {\r\n                                        e.onclick();\r\n                                    }\r\n                                }}\r\n                            >\r\n                                {e.text}\r\n                            </LinkElement>\r\n                        );\r\n                    })}\r\n                </List>\r\n            )}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default DropdownMenu;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n    NavbarStyled,\r\n    Logo,\r\n    Hamburger,\r\n    ItemList,\r\n    Item,\r\n    NavbarInner,\r\n    NameBadge,\r\n    LinkStyled,\r\n    AvatarAndDropdown,\r\n    OfflineBadge,\r\n    LogoImage\r\n} from \"./Navbar.styled\";\r\nimport { ContainerFluid } from \"../SharedStyledComponents/ContainerFluid.styled\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../store/auth/actions\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport Avatar from \"../Avatar/Avatar\";\r\nimport DropdownMenu from \"../DropdownMenu/DropdownMenu\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faAngleDown, faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> &\r\n    typeof mapDispatchToProps & {\r\n        isOnline: boolean;\r\n    };\r\n\r\nconst Navbar = (props: Props) => {\r\n    const [menuOpened, setMenuOpened] = useState(false);\r\n\r\n    return (\r\n        <NavbarStyled>\r\n            {!props.isOnline && <OfflineBadge>Jesteś offline</OfflineBadge>}\r\n\r\n            <ContainerFluid maxheight>\r\n                <NavbarInner isOnline={props.isOnline}>\r\n                    <Logo onClick={() => setMenuOpened(false)}>\r\n                        <LinkStyled to=\"/\"><LogoImage src=\"/logo.svg\" ></LogoImage></LinkStyled>\r\n                    </Logo>\r\n                    {props.isOnline && (\r\n                        <React.Fragment>\r\n                            <Hamburger onClick={() => setMenuOpened(!menuOpened)}>\r\n                                {menuOpened ? (\r\n                                    <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\r\n                                ) : (\r\n                                    <FontAwesomeIcon icon={faBars}></FontAwesomeIcon>\r\n                                )}\r\n                            </Hamburger>\r\n                            <ItemList opened={menuOpened}>\r\n                                <Item onClick={() => setMenuOpened(false)}>\r\n                                    <LinkStyled to=\"/list\">Przeglądaj profile</LinkStyled>\r\n                                </Item>\r\n                                {props.isAuthenticated ? (\r\n                                    <React.Fragment>\r\n                                        <Item onClick={() => setMenuOpened(false)}>\r\n                                            <LinkStyled to=\"/chat\">Chat</LinkStyled>\r\n                                        </Item>\r\n                                        {props.currentUser.accountType === \"doctor\" ? (\r\n                                            <React.Fragment>\r\n                                                <Item onClick={() => setMenuOpened(false)}>\r\n                                                    <LinkStyled to={\"/dashboard\"}>Panel</LinkStyled>\r\n                                                </Item>\r\n                                                <Item>\r\n                                                    <AvatarAndDropdown>\r\n                                                        <Avatar\r\n                                                            url={props.currentUser.avatar ? props.currentUser.avatar : undefined}\r\n                                                        ></Avatar>\r\n                                                        <NameBadge>{props.currentUser.displayName}</NameBadge>\r\n                                                        <DropdownMenu\r\n                                                            elements={[\r\n                                                                {\r\n                                                                    text: \"Mój profil\",\r\n                                                                    url: \"/profile/\" + props.currentUser.profileId\r\n                                                                },\r\n                                                                { text: \"Edytuj profil\", url: \"/profile-settings\" },\r\n                                                                {\r\n                                                                    text: \"Wyloguj się\",\r\n                                                                    onclick: () => {\r\n                                                                        props.logout();\r\n                                                                    }\r\n                                                                }\r\n                                                            ]}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faAngleDown}></FontAwesomeIcon>\r\n                                                        </DropdownMenu>\r\n                                                    </AvatarAndDropdown>\r\n                                                </Item>\r\n                                            </React.Fragment>\r\n                                        ) : (\r\n                                            <Item>\r\n                                                <AvatarAndDropdown>\r\n                                                    <Avatar\r\n                                                        url={props.currentUser.avatar ? props.currentUser.avatar : undefined}\r\n                                                    ></Avatar>\r\n                                                    <NameBadge>{props.currentUser.displayName}</NameBadge>\r\n                                                    <DropdownMenu\r\n                                                        elements={[\r\n                                                            { text: \"Edytuj profil\", url: \"/profile-settings\" },\r\n                                                            {\r\n                                                                text: \"Wyloguj się\",\r\n                                                                onclick: () => {\r\n                                                                    props.logout();\r\n                                                                }\r\n                                                            }\r\n                                                        ]}\r\n                                                    >\r\n                                                        <FontAwesomeIcon icon={faAngleDown}></FontAwesomeIcon>\r\n                                                    </DropdownMenu>\r\n                                                </AvatarAndDropdown>\r\n                                            </Item>\r\n                                        )}\r\n                                    </React.Fragment>\r\n                                ) : (\r\n                                    <React.Fragment>\r\n                                        <Item onClick={() => setMenuOpened(false)}>\r\n                                            <LinkStyled to=\"/login\">Logowanie</LinkStyled>\r\n                                        </Item>\r\n                                        <Item onClick={() => setMenuOpened(false)}>\r\n                                            <LinkStyled to=\"/register\">Rejestracja</LinkStyled>\r\n                                        </Item>\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </ItemList>\r\n                        </React.Fragment>\r\n                    )}\r\n                </NavbarInner>\r\n            </ContainerFluid>\r\n        </NavbarStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n    return {\r\n        currentUser: state.auth.currentUser,\r\n        isAuthenticated: state.auth.isAuthenticated\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    logout\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\r\n","import React, { Suspense } from \"react\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport { Switch, withRouter, RouteComponentProps } from \"react-router\";\r\nimport BarLoader from \"./BarLoader/BarLoader\";\r\nimport { routerTransition } from \"../styles/variables\";\r\n\r\ntype Props = {\r\n    children: JSX.Element[] | JSX.Element | string;\r\n} & RouteComponentProps;\r\n\r\nconst AnimatedSwitch = (props: Props) => (\r\n    <TransitionGroup>\r\n        <CSSTransition\r\n            key={props.location.pathname.split(\"/\")[1] || \"/\"}\r\n            classNames=\"router\"\r\n            timeout={{ appear: routerTransition.appear, enter: routerTransition.enter, exit: routerTransition.exit }}\r\n            appear={true}\r\n        >\r\n            <div className=\"page-wrapper\">\r\n                <Suspense fallback={<BarLoader />}>\r\n                    <Switch location={props.location}>{props.children}</Switch>\r\n                </Suspense>\r\n            </div>\r\n        </CSSTransition>\r\n    </TransitionGroup>\r\n);\r\n\r\nexport default withRouter(AnimatedSwitch);\r\n","import React, { Suspense, lazy, useEffect, ComponentType, useState } from \"react\";\r\nimport { Provider } from \"react-redux\";\r\nimport { PersistGate } from \"redux-persist/integration/react\";\r\n\r\nimport { store, persistor, history } from \"../../store\";\r\n\r\nimport { GlobalStyle } from \"../../styles/global\";\r\nimport BarLoader from \"../BarLoader/BarLoader\";\r\nimport Navbar from \"../Navbar/Navbar\";\r\n// import ProtectedRoute from \"./ProtectedRoute\";\r\n\r\nimport AnimatedSwitch from \"../AnimatedSwitch\";\r\nimport { Route, Redirect } from \"react-router\";\r\nimport { ConnectedRouter } from \"connected-react-router\";\r\nimport ProtectedRoute from \"../ProtectedRoute\";\r\n\r\n// import Home from \"../../views/Home/Home\";\r\n\r\nconst Home = lazy(() => import(\"../../views/Home/Home\"));\r\nconst Login = lazy(() => import(\"../../views/Login/Login\"));\r\nconst Register = lazy(() => import(\"../../views/Register/Register\"));\r\nconst Chat = lazy(() => import(\"../../views/Chat/Chat\"));\r\nconst RegisterSuccess = lazy(() => import(\"../../views/RegisterSuccess/RegisterSuccess\"));\r\nconst ProfileList = lazy(() => import(\"../../views/ProfileList/ProfileList\"));\r\nconst Profile = lazy(() => import(\"../../views/Profile/Profile\"));\r\nconst ProfileSettings = lazy(() => import(\"../../views/ProfileSettings/ProfileSettings\"));\r\nconst Dashboard = lazy(() => import(\"../../views/Dashboard/Dashboard\"));\r\nconst VideoChat = lazy(() => import(\"../../views/VideoChat/VideoChat\"));\r\nconst NotFound = lazy(() => import(\"../../views/NotFound/NotFound\"));\r\nconst AddPatient = lazy(() => import(\"../../views/AddPatient/AddPatient\"));\r\nconst PatientDetails = lazy(() => import(\"../../views/PatientDetails/PatientDetails\"));\r\nconst Offline = lazy(() => import(\"../../views/Offline/Offline\"));\r\n\r\nconst App = () => {\r\n    const [isOnline, setIsOnline] = useState(navigator.onLine);\r\n    useEffect(() => {\r\n        window.addEventListener(\"online\", updateIndicator);\r\n        window.addEventListener(\"offline\", updateIndicator);\r\n\r\n        // history.listen((location: any, action: any) => {\r\n        //     console.log(`The current URL is ${location.pathname}${location.search}${location.hash}`)\r\n        //     if((!isOnline || !navigator.onLine) && location.pathname !== \"/offline\") {\r\n        //         history.push(\"/offline\")\r\n        //     } \r\n        //   });\r\n    }, []);\r\n\r\n    const updateIndicator = (e: any) => {\r\n        console.log(e.type);\r\n        if (e.type === \"offline\") {\r\n            setIsOnline(false);\r\n            history.push(\"/offline\")\r\n        } else {\r\n            setIsOnline(true);\r\n            history.push(\"/\")\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Suspense fallback={<BarLoader />}>\r\n            <Provider store={store}>\r\n                <PersistGate persistor={persistor}>\r\n                    <ConnectedRouter history={history}>\r\n                        <React.Fragment>\r\n                            <GlobalStyle />\r\n                            <Navbar isOnline={isOnline} />\r\n                            <AnimatedSwitch>\r\n                                <Route exact path=\"/\" component={Home} />\r\n                                <Route exact path=\"/login\" component={Login} />\r\n                                <Route exact path=\"/register\" component={Register} />\r\n                                <Route exact path=\"/register-success\" component={RegisterSuccess} />\r\n                                <Route path=\"/chat\" component={Chat} />\r\n                                <Route path=\"/chat/:id\" component={Chat} />\r\n                                <Route path=\"/list\" component={ProfileList} />\r\n                                <Route path=\"/profile-settings\" component={ProfileSettings} />\r\n                                <Route path=\"/profile/:id\" component={Profile} />\r\n                                <Route path=\"/dashboard\" component={Dashboard} />\r\n                                <Route path=\"/video/:id\" component={VideoChat} />\r\n                                <Route path=\"/not-found\" component={NotFound} />\r\n                                <Route path=\"/add-patient\" component={AddPatient} />\r\n                                <Route path=\"/patient-details/:id\" component={PatientDetails} />\r\n                                <Route path=\"/offline\" component={Offline} />\r\n                                <Redirect to={{ pathname: \"/not-found\" }} />\r\n                            </AnimatedSwitch>\r\n                        </React.Fragment>\r\n                    </ConnectedRouter>\r\n                </PersistGate>\r\n            </Provider>\r\n        </Suspense>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nexport default function register () {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = 'service-worker.js';\r\n      navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n          registration.onupdatefound = () => {\r\n            const installingWorker = registration.installing;\r\n            installingWorker.onstatechange = () => {\r\n              if (installingWorker.state === 'installed') {\r\n                if (navigator.serviceWorker.controller) {\r\n                  // At this point, the old content will have been purged and\r\n                  // the fresh content will have been added to the cache.\r\n                  // It's the perfect time to display a \"New content is\r\n                  // available; please refresh.\" message in your web app.\r\n                  console.log('New content is available; please refresh.');\r\n                } else {\r\n                  // At this point, everything has been precached.\r\n                  // It's the perfect time to display a\r\n                  // \"Content is cached for offline use.\" message.\r\n                  console.log('Content is cached for offline use.');\r\n                }\r\n              }\r\n            };\r\n          };\r\n        })\r\n        .catch(error => {\r\n          console.error('Error during service worker registration:', error);\r\n        });\r\n    });\r\n  }\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}","import { Reducer } from 'redux'\r\nimport { AuthState, AuthActionTypes } from './types'\r\n\r\nexport const initialState: AuthState = {\r\n    currentUser: {\r\n        id: \"\",\r\n        avatar: \"\",\r\n        displayName: \"\",\r\n        email: \"\",\r\n        accountType: \"\",\r\n        profileId: \"\"\r\n    },\r\n    token: \"\",\r\n    isLoggingIn: false,\r\n    isRegistering: false,\r\n    isAuthenticated: false,\r\n    error: null\r\n}\r\n\r\nexport const authReducer: Reducer<AuthState> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case AuthActionTypes.LOGOUT:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false,\r\n                currentUser: {\r\n                    id: \"\",\r\n                    avatar: \"\",\r\n                    displayName: \"\",\r\n                    email: \"\",\r\n                    accountType: \"\",\r\n                    profileId: \"\"\r\n                },\r\n                token: \"\"\r\n            }\r\n        case AuthActionTypes.LOGIN_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true\r\n            }\r\n        case AuthActionTypes.LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isAuthenticated: true,\r\n                currentUser: {\r\n                    id: action.payload.user.id,\r\n                    avatar: action.payload.user.avatar,\r\n                    displayName: action.payload.user.displayName,\r\n                    email: action.payload.user.email,\r\n                    accountType: action.payload.user.accountType,\r\n                    profileId: action.payload.user.profileId\r\n                },\r\n                token: action.payload.token\r\n            }\r\n        case AuthActionTypes.LOGIN_ERROR:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                error: action.payload\r\n            }\r\n        case AuthActionTypes.REGISTER_REQUEST:\r\n            return {\r\n                ...state,\r\n                isRegistering: true\r\n            }\r\n        case AuthActionTypes.REGISTER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isRegistering: false\r\n            }\r\n        case AuthActionTypes.REGISTER_ERROR:\r\n            return {\r\n                ...state,\r\n                isRegistering: false,\r\n                error: action.payload\r\n            }\r\n        case AuthActionTypes.AUTH_ERROR_RESET:\r\n            return {\r\n                ...state,\r\n                error: null\r\n            }\r\n        case AuthActionTypes.SET_CURRENT_USER:\r\n            return {\r\n                ...state,\r\n                currentUser: {\r\n                    ...state.currentUser,\r\n                    displayName: action.payload.displayName !== undefined ? action.payload.displayName : state.currentUser.displayName,\r\n                    avatar: action.payload.avatar !== undefined ? action.payload.avatar : state.currentUser.avatar\r\n                }\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import { all, call, fork, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport { Auth } from '../../api';\r\nimport { loginRequest, loginSuccess, loginError, registerRequest, registerError, registerSuccess, logout } from './actions';\r\nimport { AuthActionTypes } from './types';\r\nimport { push } from 'connected-react-router'\r\n\r\nfunction* handleLogin(action: ReturnType<typeof loginRequest>) {\r\n    try {\r\n        const res = yield call(Auth.login, action.payload);\r\n        \r\n        if (res.error) {\r\n            yield put(loginError(res.error))\r\n        } else {\r\n            yield put(loginSuccess(res.data))\r\n            if(action.payload.from){\r\n                yield put(push(action.payload.from));\r\n            } else {\r\n                yield put(push(\"/\"));\r\n            }\r\n        }\r\n    } catch (err) {\r\n        console.log(err)\r\n        yield put(loginError(err))\r\n    }\r\n}\r\n\r\nfunction* handleRegister(action: ReturnType<typeof registerRequest>) {\r\n    try {\r\n        const res = yield call(Auth.register, action.payload);\r\n\r\n        if (res.error) {\r\n            yield put(registerError(res.error))\r\n        } else {\r\n            yield put(registerSuccess(res.data))\r\n        }\r\n    } catch (err) {\r\n        yield put(registerError(err))\r\n    }\r\n}\r\n\r\nfunction* handleLogout(action: ReturnType<typeof logout>) {\r\n    yield put(push(\"/\"));\r\n}\r\n\r\nfunction* watchLoginRequest() {\r\n    yield takeEvery(AuthActionTypes.LOGIN_REQUEST, handleLogin);\r\n}\r\n\r\nfunction* watchRegisterRequest() {\r\n    yield takeEvery(AuthActionTypes.REGISTER_REQUEST, handleRegister);\r\n}\r\n\r\nfunction* watchLogout() {\r\n    yield takeEvery(AuthActionTypes.LOGOUT, handleLogout);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchLoginRequest), fork(watchRegisterRequest), fork(watchLogout)]);\r\n}\r\n\r\nexport default authSaga;","\r\nexport interface ChatState {\r\n\r\n}\r\n\r\nexport enum ChatActionTypes {\r\n    SEND_MESSAGE_REQUEST = \"@@chat/SEND_MESSAGE_REQUEST\",\r\n    SEND_MESSAGE_SUCCESS = \"@@chat/SEND_MESSAGE_SUCCESS\",\r\n    SEND_MESSAGE_ERROR = \"@@chat/SEND_MESSAGE_ERROR\",\r\n}","import { Reducer } from 'redux'\r\nimport { ChatState, ChatActionTypes } from './types'\r\n\r\nexport const initialState: ChatState = {\r\n\r\n}\r\n\r\nexport const chatReducer: Reducer<ChatState> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ChatActionTypes.SEND_MESSAGE_REQUEST:\r\n            return {\r\n                ...state,\r\n            }\r\n        case ChatActionTypes.SEND_MESSAGE_SUCCESS:\r\n            return {\r\n                ...state,\r\n            }\r\n        case ChatActionTypes.SEND_MESSAGE_ERROR:\r\n            return {\r\n                ...state\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}","import { Reducer } from 'redux'\r\nimport { FiltersState, FiltersActionTypes } from './types'\r\n\r\nexport const initialState: FiltersState = {\r\n    city: \"All\",\r\n    services: [],\r\n    priceRange: {\r\n        min: 0,\r\n        max: 200\r\n    }\r\n}\r\n\r\nexport const filtersReducer: Reducer<FiltersState> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FiltersActionTypes.FILTER:\r\n            console.log(action.payload)\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import { Reducer } from 'redux'\r\nimport { SortingActionTypes, SortingState } from './types'\r\n\r\nexport const initialState: SortingState = {\r\n    sorting: \"POPULARITY_ASC\"\r\n}\r\n\r\nexport const sortingReducer: Reducer<SortingState> = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SortingActionTypes.SORT:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\r\nimport { createLogger } from \"redux-logger\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport storage from \"redux-persist/lib/storage\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport { all, fork } from 'redux-saga/effects'\r\nimport { authReducer } from \"./auth/reducer\";\r\nimport authSaga from \"./auth/sagas\";\r\nimport { AuthState } from \"./auth/types\";\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\nimport { createBrowserHistory } from 'history';\r\nimport { ChatState } from \"./chat/types\";\r\nimport { FiltersState } from \"./filters/types\";\r\nimport { SortingState } from \"./sorting/types\";\r\nimport { chatReducer } from \"./chat/reducer\";\r\nimport { filtersReducer } from \"./filters/reducer\";\r\nimport { sortingReducer } from \"./sorting/reducer\";\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nexport interface ApplicationState {\r\n    auth: AuthState,\r\n    chat: ChatState,\r\n    filters: FiltersState,\r\n    sorting: SortingState\r\n}\r\n\r\nconst rootReducer = combineReducers({\r\n    router: connectRouter(history),\r\n    auth: authReducer,\r\n    chat: chatReducer,\r\n    filters: filtersReducer,\r\n    sorting: sortingReducer\r\n});\r\n\r\nconst persistConfig = {\r\n    key: \"root\",\r\n    storage,\r\n    whitelist: ['auth', 'filters', 'sorting']\r\n};\r\n\r\nconst loggerMiddleware = createLogger();\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nexport const store = createStore(\r\n    persistedReducer,\r\n    composeWithDevTools(\r\n        applyMiddleware(routerMiddleware(history), loggerMiddleware, sagaMiddleware)\r\n    )\r\n);\r\n\r\nexport const persistor = persistStore(store);\r\n\r\nfunction* rootSaga() {\r\n    yield all([fork(authSaga)])\r\n}\r\n\r\nsagaMiddleware.run(rootSaga);\r\n","// export const API_ROOT = \"http://localhost:4000\";\r\nexport const API_ROOT = \"https://praca-inz-backend.herokuapp.com\";\r\nexport const STATIC_FILES_ROOT = API_ROOT + \"/uploads/\";\r\nexport const PROFILES_PAGE_SIZE = 5;\r\nexport const MESSAGES_PAGE_SIZE = 100;\r\nexport const MIN_COMPLETION_RATE = 0;\r\nexport const FALLBACK_AVATAR_URL = \"https://icon-library.net/images/default-user-icon/default-user-icon-8.jpg\";\r\n","import { action } from \"typesafe-actions\";\r\nimport { AuthActionTypes } from \"./types\";\r\nimport { LoginProps, RegisterProps } from \"../../api\";\r\n\r\nexport const loginRequest = (data: LoginProps) => action(AuthActionTypes.LOGIN_REQUEST, data);\r\nexport const loginSuccess = (data: any) => action(AuthActionTypes.LOGIN_SUCCESS, data);\r\nexport const loginError = (error: any) => action(AuthActionTypes.LOGIN_ERROR, error);\r\n\r\nexport const registerRequest = (data: RegisterProps) => action(AuthActionTypes.REGISTER_REQUEST, data);\r\nexport const registerSuccess = (data: any) => action(AuthActionTypes.REGISTER_SUCCESS, data);\r\nexport const registerError = (error: any) => action(AuthActionTypes.REGISTER_ERROR, error);\r\n\r\nexport const resetAuthError = () => action(AuthActionTypes.AUTH_ERROR_RESET);\r\nexport const logout = () => action(AuthActionTypes.LOGOUT);\r\n\r\nexport const setCurrentUser = (data: any) => action(AuthActionTypes.SET_CURRENT_USER, data);\r\n","export const COLORS = {\r\n    white: \"#FFFFFF\",\r\n    black: \"#000000\",\r\n    gray: \"#E1E1E1\",\r\n    golden: \"#CD9843\",\r\n    lightgray: \"#EEEEEE\",\r\n    blue: \"#3b95f5\",\r\n    blue2: \"#00d1a4\",\r\n    darkblue: \"#277cd6\"\r\n};\r\n\r\nexport const BREAKPOINTS = {\r\n    sm: \"576px\",\r\n    md: \"768px\",\r\n    lg: \"992px\",\r\n    xl: \"1200px\"\r\n};\r\n\r\nexport const routerTransition = {\r\n    appear: 300,\r\n    enter: 500,\r\n    exit: 375\r\n}\r\n\r\nexport const NAV_HEIGHT = \"55px\";\r\nexport const NAV_MARGIN = \"0rem\";\r\nexport const NAV_HEADROOM = `calc(${NAV_HEIGHT + ' + ' + NAV_MARGIN})`\r\nexport const CONTAINER_FLUID_GUTTER_REM = 2;\r\n\r\n\r\nconst GUTTER_REM = 0.5;\r\nexport const GUTTER = (multiplier = 1) => {\r\n    return multiplier * GUTTER_REM + \"rem\";\r\n};","import React from \"react\";\r\n//@ts-ignore\r\nimport TopBarProgress from \"react-topbar-progress-indicator\";\r\n\r\nTopBarProgress.config({\r\n    barColors: {\r\n        \"0\": \"#3b95f5\",\r\n        \"1.0\": \"#00d1a4\"\r\n    },\r\n    shadowColor: \"#0b05f5\"\r\n});\r\n\r\n\r\nconst BarLoader = () => {\r\n    return <TopBarProgress />;\r\n};\r\n\r\nexport default BarLoader;","import axios from \"axios\";\r\nimport { API_ROOT, PROFILES_PAGE_SIZE } from \"./constants/config\";\r\nimport { store, history } from \"./store/index\";\r\nimport { AuthActionTypes } from \"./store/auth/types\";\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket = io.connect(API_ROOT);\r\n\r\nsocket.on(\"SET_ID\", (id: string) => {\r\n    localStorage.setItem(\"SOCKET_ID\", id);\r\n    requests.get(\"/\")\r\n});\r\n\r\naxios.interceptors.request.use(\r\n    config => {\r\n        let socketid: string = localStorage.getItem(\"SOCKET_ID\") || '';\r\n        config.headers.socketid = socketid;\r\n\r\n        const token = store.getState().auth.token;\r\n        if (token) {\r\n            config.headers.Authorization = `Bearer ${token}`;\r\n        }\r\n        return config;\r\n    },\r\n    error => {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\naxios.interceptors.response.use(\r\n    response => {\r\n        return response;\r\n    },\r\n    error => {\r\n        if (error.response && error.response.status === 401) {\r\n            if (history.location.pathname !== \"/login\") {\r\n                store.dispatch({ type: AuthActionTypes.LOGOUT });\r\n                history.push({\r\n                    pathname: \"/login\",\r\n                    state: {\r\n                        from: history.location.pathname,\r\n                        showLoginFirstMessage: true\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return Promise.reject(error.response);\r\n    }\r\n);\r\n\r\nconst requests = {\r\n    get: (url: string, config?: any) => axios.get(`${API_ROOT}${url}`, config),\r\n    post: (url: string, body: any, config?: any) => axios.post(`${API_ROOT}${url}`, body, config),\r\n    put: (url: string, body: any, config?: any) => axios.put(`${API_ROOT}${url}`, body, config),\r\n    patch: (url: string, body: any, config?: any) => axios.patch(`${API_ROOT}${url}`, body, config),\r\n    delete: (url: string, config?: any) => axios.delete(`${API_ROOT}${url}`, config)\r\n};\r\n\r\nconst Auth = {\r\n    register: (data: RegisterProps) => requests.post(\"/auth/register\", data),\r\n    login: (props: LoginProps) => {\r\n        if (props.loginType === LoginTypes.local) {\r\n            return requests.post(\"/auth/login\", props.data);\r\n        } else if (props.loginType === LoginTypes.facebook) {\r\n            console.log(props.data)\r\n            return requests.post(\"/auth/facebookToken\", props.data);\r\n        }\r\n    }\r\n};\r\n\r\nexport enum LoginTypes {\r\n    local = \"LOCAL\",\r\n    facebook = \"FACEBOOK\"\r\n}\r\n\r\nexport enum MessageTypes {\r\n    text = \"text\",\r\n    file = \"file\"\r\n}\r\n\r\nexport interface LoginProps {\r\n    data: {\r\n        email: string,\r\n        password: string\r\n    } | {\r\n        access_token: string\r\n    },\r\n    loginType: LoginTypes,\r\n    from?: string\r\n}\r\n\r\nexport interface RegisterProps {\r\n    email: string,\r\n    password: string,\r\n    displayName: string,\r\n    accountType: string\r\n}\r\n\r\n\r\nconst Chat = {\r\n    sendMessage: (data: SendMessageProps) => {\r\n        if (data.messageType === MessageTypes.file) {\r\n            let fd = new FormData();\r\n            fd.append('file', data.file);\r\n            fd.set('conversationId', data.conversationId);\r\n            fd.set('text', data.text);\r\n            fd.set('messageType', data.messageType);\r\n            // fd.set('newConversation', data.newConversation || false);\r\n            return requests.post(\"/upload/file\", fd, { headers: { 'Content-Type': 'multipart/form-data' } })\r\n        } else {\r\n            return requests.post(\"/chat/send\", data)\r\n        }\r\n    },\r\n    getConversations: () => requests.get(\"/chat/conversations\"),\r\n    getMessages: (data: GetMessagesProps) => requests.get(\"/chat/conversations/\" + encodeURIComponent(data.conversationId) + \"?qty=\" + encodeURIComponent(data.qty) + \"&offset=\" + encodeURIComponent(data.offset)),\r\n    getFile: (id: string) => requests.get(\"/upload/file/\" + id, {\r\n        responseType: 'blob'\r\n    }),\r\n}\r\n\r\nexport interface SendMessageProps {\r\n    conversationId: string,\r\n    text: string,\r\n    file: any,\r\n    messageType: MessageTypes,\r\n    newConversation?: boolean,\r\n    newConversationUserId?: string\r\n}\r\n\r\nexport interface GetMessagesProps {\r\n    conversationId: string,\r\n    qty: number,\r\n    offset: number\r\n}\r\n\r\nexport interface AddPriceListElementProps {\r\n    profileId: string,\r\n    price: string,\r\n    elementName: string\r\n}\r\n\r\nexport interface AddImageProps {\r\n    profileId: string,\r\n    file: any,\r\n}\r\n\r\nexport interface UploadAvatarProps {\r\n    file: any\r\n}\r\n\r\nexport interface UpdateProfileDataProps {\r\n    descr?: string,\r\n    city?: string,\r\n}\r\n\r\nconst Profile = {\r\n    getProfiles: (alreadyFetched: number = 0, filters: any = {}) => {\r\n        let filterQuery = encodeURIComponent(JSON.stringify(filters))\r\n        return requests.get(\r\n            `/profile?already_fetched=${alreadyFetched}&filters=${filterQuery}&batch_size=${PROFILES_PAGE_SIZE}`\r\n        );\r\n    },\r\n    getProfile: (id: string) => requests.get(`/profile/${id}`),\r\n    addPriceListElement: (data: AddPriceListElementProps) => requests.post('/profile/price-list-element', data),\r\n    deletePriceListElement: (id: string) => requests.delete(`/profile/price-list-element/${id}`),\r\n    addImage: (data: AddImageProps) => {\r\n        let fd = new FormData();\r\n        fd.append('file', data.file);\r\n        fd.set('profileId', data.profileId);\r\n        return requests.post(\"/upload/image\", fd, { headers: { 'Content-Type': 'multipart/form-data' } })\r\n    },\r\n    deleteImage: (imageId: string) => requests.delete('/profile/image/' + imageId),\r\n    uploadAvatar: (data: UploadAvatarProps) => {\r\n        let fd = new FormData();\r\n        fd.append('file', data.file);\r\n        return requests.post(\"/upload/avatar\", fd, { headers: { 'Content-Type': 'multipart/form-data' } })\r\n    },\r\n    resetAvatar: () => requests.get('/profile/avatar-reset'),\r\n    updateProfileData: (data: UpdateProfileDataProps, id: string) => requests.put('/profile/' + id, data),\r\n    updateUserData: (data: any) => requests.put(\"/profile/user\", data),\r\n    addReview: (data: any) => requests.post(\"/profile/review\", data),\r\n    updateReview: (data: any) => requests.put(\"/profile/review\", data),\r\n    search: (phrase: string) => requests.get('/profile/search/' + phrase),\r\n    count: () => requests.get(\"/profile/count\"),\r\n    mostRecent: () => requests.get(\"/profile/most-recent\"),\r\n    getReport: (days: number, profileId: string) => requests.get(\"/profile/report?profile=\" + profileId + \"&days=\" + days),\r\n    getUser: (id: string) => requests.get(\"/user/\" + id)\r\n};\r\n\r\nconst Patient = {\r\n    getPatients: () => requests.get(\"/patient\"),\r\n    getPatient: (id: string) => requests.get(\"/patient/\" + id),\r\n    addPatient: (data: any) => requests.post(\"/patient\", data),\r\n    addNote: (data: any) => requests.post(\"/patient/note\", data),\r\n    deleteNote: (id: string) => requests.delete(\"/patient/note/\" + id),\r\n    getNotes: (patientId?: string) => requests.get(\"/patient/note\" + (patientId ? (\"/\" + patientId) : \"\")),\r\n    getDataSets: (patientId: string) => requests.get(\"/patient/data-set/\" + patientId),\r\n    addDataSet: (patientId: string, data: any) => requests.post(\"/patient/data-set/\" + patientId, data),\r\n    removeDataSet: (dataSetId: string) => requests.delete(\"/patient/data-set/\" + dataSetId),\r\n    addDataValue: (data: any) => requests.post(\"/patient/data-value\", data),\r\n    deleteDataValue: (id: string) => requests.delete(\"/patient/data-value/\" + id)\r\n}\r\n\r\nexport { socket, Auth, Chat, Profile, Patient };","import styled from 'styled-components';\r\n\r\nconst AVATAR_SIZE = \"30px\";\r\n\r\ninterface Props {\r\n    isFull?: boolean,\r\n}\r\n\r\nexport const AvatarWrapper = styled.div<Props>`\r\n    width: ${props => (props.isFull ? \"100%\": AVATAR_SIZE)};\r\n    height: ${props => (props.isFull ? \"100%\": AVATAR_SIZE)};\r\n    border-radius: ${props => (props.isFull ? \"0px\": AVATAR_SIZE)};\r\n    border: 1px solid #ccc;\r\n`\r\n\r\nexport const AvatarImage = styled.img<Props>`\r\n    width: 100%;\r\n    height: 100%;\r\n    object-fit: cover;\r\n    background-size: contain;\r\n    border-radius: ${props => (props.isFull ? \"0px\": AVATAR_SIZE)};\r\n`","import React from \"react\";\r\nimport { AvatarWrapper, AvatarImage } from \"./Avatar.styled\";\r\nimport { FALLBACK_AVATAR_URL, STATIC_FILES_ROOT } from \"../../constants/config\";\r\n\r\ntype Props = {\r\n    url?: string;\r\n    isFull?: boolean;\r\n};\r\n\r\nconst Avatar = (props: Props) => {\r\n    let url: any = props.url || \"\";\r\n    if (!url) {\r\n        url = FALLBACK_AVATAR_URL;\r\n    } else if (url.includes(\"http\")) {\r\n        url = props.url;\r\n    } else {\r\n        url = STATIC_FILES_ROOT + props.url;\r\n    }\r\n\r\n    return (\r\n        <AvatarWrapper isFull={props.isFull}>\r\n            <AvatarImage src={url} isFull={props.isFull}></AvatarImage>\r\n        </AvatarWrapper>\r\n    );\r\n};\r\n\r\nexport default Avatar;\r\n","import styled from \"styled-components\";\r\nimport { BREAKPOINTS, CONTAINER_FLUID_GUTTER_REM } from \"../../styles/variables\";\r\n\r\ntype Props = {\r\n    maxheight?: boolean\r\n}\r\n\r\nexport const ContainerFluid = styled.div<Props>`\r\n    display: block;\r\n    padding-left: ${8 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n    padding-right: ${8 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n    @media (max-width: ${BREAKPOINTS.xl}) {\r\n        padding-right: ${6 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n        padding-left: ${6 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.lg}) {\r\n        padding-right: ${4 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n        padding-left: ${4 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        padding-right: ${2 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n        padding-left: ${2 * CONTAINER_FLUID_GUTTER_REM}rem;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        padding-right: ${CONTAINER_FLUID_GUTTER_REM}rem;\r\n        padding-left: ${CONTAINER_FLUID_GUTTER_REM}rem;\r\n    }\r\n    \r\n    ${({ maxheight }) =>\r\n        maxheight &&\r\n        `\r\n            height: 100%\r\n        `}\r\n\r\n    width: 100%;\r\n    max-width: 100vw;\r\n`;","export enum FiltersActionTypes {\r\n    FILTER = \"@@filters/filter\"\r\n}\r\n\r\nexport interface FiltersState {\r\n    readonly city: string,\r\n    readonly services: string[],\r\n    readonly priceRange: {\r\n        readonly min: number,\r\n        readonly max: number\r\n    }\r\n}\r\n","export enum SortingActionTypes {\r\n    SORT = \"@@sorting/sort\"\r\n}\r\n\r\nexport interface SortingState {\r\n    readonly sorting: string;\r\n}"],"sourceRoot":""}