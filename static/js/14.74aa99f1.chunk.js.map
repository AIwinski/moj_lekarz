{"version":3,"sources":["components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","hooks/useDocumentTitle.ts","components/Chat/Info/Info.styled.ts","../node_modules/file-saver/dist/FileSaver.min.js","views/Chat/Chat.styled.ts","components/Chat/List/List.styled.ts","components/Chat/ListElement/ListElement.styled.ts","components/Chat/ListElement/ListElement.tsx","components/Chat/List/List.tsx","components/PatientButton/PatientButton.styled.ts","components/PatientButton/PatientButton.tsx","components/Chat/Info/Info.tsx","components/Chat/Form/Form.styled.ts","components/Chat/Form/Form.tsx","components/Chat/Message/Message.styled.ts","components/Chat/Message/Message.tsx","views/Chat/Chat.tsx"],"names":["LoaderStyled","styled","div","COLORS","blue","LoaderWrapper","Loader","_toConsumableArray","arr","Array","isArray","i","arr2","length","iter","Symbol","iterator","Object","prototype","toString","call","from","TypeError","title","useEffect","document","InfoStyled","NAV_HEADROOM","BREAKPOINTS","md","Name","InfoWrapper","NoInfo","AccountType","Email","Container","c","b","d","e","XMLHttpRequest","open","responseType","onload","a","response","onerror","console","error","send","status","dispatchEvent","MouseEvent","createEvent","initMouseEvent","window","f","self","global","saveAs","HTMLAnchorElement","g","h","URL","webkitURL","j","createElement","name","download","rel","href","origin","location","target","createObjectURL","setTimeout","revokeObjectURL","navigator","msSaveOrOpenBlob","autoBom","warn","test","type","Blob","body","innerText","HTMLElement","safari","userAgent","FileReader","onloadend","result","replace","readAsDataURL","k","l","module","exports","ChatFormWrapper","ChatStyled","ConversationWrapper","ChatWindow","ChatInfoWrapper","NewMessageBadge","NoMessagesBadge","ListStyled","ListInfo","ListElementStyled","props","isActive","ListElement","onClick","children","List","elements","onElementClick","map","index","String","active","key","id","value","AddPatientButtonStyled","LinkStyled","Wrapper","OpenPatientButton","PatientButton","useState","isFetching","setIsFetching","patients","setPatients","Patient","getPatients","then","res","log","data","catch","err","p","userAccountId","includes","to","find","pathname","state","Info","info","Avatar","url","avatar","displayName","email","accountType","userId","ChatSubmitButton","button","darkblue","ChatTextArea","Field","AddFile","input","AddFileLabel","label","Bottom","Label","span","Form","ref","useRef","onEnterPress","keyCode","shiftKey","preventDefault","current","handleSubmit","initialValues","text","file","onSubmit","values","setFieldValue","conversationId","coversationId","messageType","MessageTypes","newConversation","newConversationUserId","ChatApi","sendMessage","onMessageSent","render","placeholder","component","onKeyDown","icon","faUpload","onChange","event","currentTarget","files","faArrowRight","MessageStyled","isReceived","MessageWrapper","FileBadge","Message","date","srcPath","initialFileName","getFile","statusText","blob","downloadFile","faDownload","mapDispatchToProps","push","connect","currentUser","auth","useDocumentTitle","match","params","activeConversationId","setActiveConversationId","conversations","setConversations","activeConversationMessages","setActiveConversationMessages","activeConversationInfo","setActiveConversationInfo","undefined","setNewConversationUserId","isLoadingConversations","setIsLoadingConversations","chatWindowRef","fetchConversations","socket","on","updateMessages","setConversationInfo","fetchMessages","getConversationIndexByUserId","changeActiveConversation","findIndex","createdNewConversation","message","scrollToBottomOfChatWindow","forEach","users","u","getConversations","loadedMessages","filter","m","getMessagesProps","qty","MESSAGES_PAGE_SIZE","offset","getMessages","messages","scrollTop","scrollHeight","conversationName","slice","parseConversationResponse","createdAt","senderId"],"mappings":"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","file":"static/js/14.74aa99f1.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 64px;\r\n    height: 64px;\r\n    z-index: 1000;\r\n    div {\r\n        position: absolute;\r\n        top: 27px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        background: ${COLORS.blue};\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from \"react\";\r\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LoaderStyled>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </LoaderStyled>\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import { useEffect } from 'react'\r\n\r\nexport default (title: string) => {\r\n    useEffect(() => {\r\n        document.title = title;\r\n    }, [title])\r\n}","import styled from \"styled-components\";\r\nimport { NAV_HEADROOM, BREAKPOINTS } from \"../../../styles/variables\";\r\n\r\nexport const InfoStyled = styled.div`\r\n    position: relative;\r\n    border-left: 1px solid #eee;\r\n    min-height: calc(100vh - ${NAV_HEADROOM});\r\n    padding: 0.5rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        min-height: auto;\r\n    }\r\n`;\r\n\r\nexport const Name = styled.div`\r\n    margin-left: 1rem;\r\n`\r\nexport const InfoWrapper = styled.div`\r\n    \r\n`\r\n\r\nexport const NoInfo = styled.div`\r\n\r\n`\r\n\r\nexport const AccountType = styled.div`\r\n\r\n`\r\n\r\nexport const Email = styled.div`\r\n\r\n`\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n`","(function (a, b) {\n  if (\"function\" == typeof define && define.amd) define([], b);else if (\"undefined\" != typeof exports) b();else {\n    b(), a.FileSaver = {\n      exports: {}\n    }.exports;\n  }\n})(this, function () {\n  \"use strict\";\n\n  function b(a, b) {\n    return \"undefined\" == typeof b ? b = {\n      autoBom: !1\n    } : \"object\" != typeof b && (console.warn(\"Deprecated: Expected third argument to be a object\"), b = {\n      autoBom: !b\n    }), b.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(a.type) ? new Blob([\"\\uFEFF\", a], {\n      type: a.type\n    }) : a;\n  }\n\n  function c(b, c, d) {\n    var e = new XMLHttpRequest();\n    e.open(\"GET\", b), e.responseType = \"blob\", e.onload = function () {\n      a(e.response, c, d);\n    }, e.onerror = function () {\n      console.error(\"could not download file\");\n    }, e.send();\n  }\n\n  function d(a) {\n    var b = new XMLHttpRequest();\n    b.open(\"HEAD\", a, !1);\n\n    try {\n      b.send();\n    } catch (a) {}\n\n    return 200 <= b.status && 299 >= b.status;\n  }\n\n  function e(a) {\n    try {\n      a.dispatchEvent(new MouseEvent(\"click\"));\n    } catch (c) {\n      var b = document.createEvent(\"MouseEvents\");\n      b.initMouseEvent(\"click\", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), a.dispatchEvent(b);\n    }\n  }\n\n  var f = \"object\" == typeof window && window.window === window ? window : \"object\" == typeof self && self.self === self ? self : \"object\" == typeof global && global.global === global ? global : void 0,\n      a = f.saveAs || (\"object\" != typeof window || window !== f ? function () {} : \"download\" in HTMLAnchorElement.prototype ? function (b, g, h) {\n    var i = f.URL || f.webkitURL,\n        j = document.createElement(\"a\");\n    g = g || b.name || \"download\", j.download = g, j.rel = \"noopener\", \"string\" == typeof b ? (j.href = b, j.origin === location.origin ? e(j) : d(j.href) ? c(b, g, h) : e(j, j.target = \"_blank\")) : (j.href = i.createObjectURL(b), setTimeout(function () {\n      i.revokeObjectURL(j.href);\n    }, 4E4), setTimeout(function () {\n      e(j);\n    }, 0));\n  } : \"msSaveOrOpenBlob\" in navigator ? function (f, g, h) {\n    if (g = g || f.name || \"download\", \"string\" != typeof f) navigator.msSaveOrOpenBlob(b(f, h), g);else if (d(f)) c(f, g, h);else {\n      var i = document.createElement(\"a\");\n      i.href = f, i.target = \"_blank\", setTimeout(function () {\n        e(i);\n      });\n    }\n  } : function (a, b, d, e) {\n    if (e = e || open(\"\", \"_blank\"), e && (e.document.title = e.document.body.innerText = \"downloading...\"), \"string\" == typeof a) return c(a, b, d);\n    var g = \"application/octet-stream\" === a.type,\n        h = /constructor/i.test(f.HTMLElement) || f.safari,\n        i = /CriOS\\/[\\d]+/.test(navigator.userAgent);\n\n    if ((i || g && h) && \"object\" == typeof FileReader) {\n      var j = new FileReader();\n      j.onloadend = function () {\n        var a = j.result;\n        a = i ? a : a.replace(/^data:[^;]*;/, \"data:attachment/file;\"), e ? e.location.href = a : location = a, e = null;\n      }, j.readAsDataURL(a);\n    } else {\n      var k = f.URL || f.webkitURL,\n          l = k.createObjectURL(a);\n      e ? e.location = l : location.href = l, e = null, setTimeout(function () {\n        k.revokeObjectURL(l);\n      }, 4E4);\n    }\n  });\n  f.saveAs = a.saveAs = a, \"undefined\" != typeof module && (module.exports = a);\n});","import styled from \"styled-components\";\r\nimport { NAV_HEADROOM, BREAKPOINTS } from \"../../styles/variables\";\r\n\r\nexport const ChatFormWrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 20%;\r\n    form {\r\n        height: 100%;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nexport const ChatStyled = styled.div`\r\n    position: relative;\r\n    height: calc(100vh - ${NAV_HEADROOM});\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr 1fr;\r\n    box-sizing: border-box;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        height: auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n    }\r\n`;\r\n\r\nexport const ConversationWrapper = styled.div`\r\n    position: relative;\r\n    height: calc(100vh - ${NAV_HEADROOM});\r\n    box-sizing: border-box;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nexport const ChatWindow = styled.div`\r\n    box-sizing: border-box;\r\n    height: 80%;\r\n    overflow: auto;\r\n    padding: 0.5rem;\r\n    position: relative;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        height: auto;\r\n    }\r\n`;\r\n\r\nexport const ChatInfoWrapper = styled.div`\r\n    position: relative;\r\n`\r\n\r\nexport const NewMessageBadge = styled.div`\r\n\r\n`\r\n\r\nexport const NoMessagesBadge = styled.div`\r\n\r\n`","import styled from \"styled-components\";\r\nimport { NAV_HEADROOM, BREAKPOINTS } from \"../../../styles/variables\";\r\n\r\nexport const ListStyled = styled.div`\r\n    min-height: calc(100vh - ${NAV_HEADROOM});\r\n    overflow: auto;\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    border-right: 1px solid #ddd;\r\n    position: relative;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        min-height: auto;\r\n    }\r\n`;\r\n\r\nexport const ListInfo = styled.div`\r\n    color: red;\r\n`","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n    isActive: boolean;\r\n}\r\n\r\nexport const ListElementStyled = styled.div<Props>`\r\n    padding: 1rem;\r\n    cursor: pointer;\r\n    background: ${props => (props.isActive ? \"#fff\" : \"#e5e5e5\")};\r\n    border-left: ${props => (props.isActive ? \"none\" : \"3px solid #c92d02\")};\r\n    &:hover {\r\n        background: #eee;\r\n    }\r\n`;","import React from \"react\";\r\nimport { ListElementStyled } from \"./ListElement.styled\";\r\n\r\ntype Props = {\r\n    children: JSX.Element[] | JSX.Element | string;\r\n    isActive: boolean;\r\n    onClick: () => any;\r\n};\r\n\r\nconst ListElement = (props: Props) => {\r\n    return (\r\n        <ListElementStyled onClick={props.onClick} isActive={props.isActive}>\r\n            {props.children}\r\n        </ListElementStyled>\r\n    );\r\n};\r\n\r\nexport default ListElement;\r\n","import React from \"react\";\r\nimport { ListStyled } from \"./List.styled\";\r\nimport ListElement from \"../ListElement/ListElement\";\r\nimport { ListInfo } from \"./List.styled\";\r\nimport Loader from \"../../Loader/Loader\";\r\n\r\ntype Props = {\r\n    elements:\r\n        | {\r\n              id: string;\r\n              value: string;\r\n          }[]\r\n        | undefined;\r\n    onElementClick: (id: string) => any;\r\n    active: number;\r\n};\r\n\r\nconst List = (props: Props) => {\r\n    const { elements, onElementClick } = props;\r\n    return (\r\n        <ListStyled>\r\n            {elements ? (\r\n                elements.length === 0 ? (\r\n                    <ListInfo>Nie masz jeszcze zadnych konwersacji</ListInfo>\r\n                ) : (\r\n                    elements.map((e, index) => (\r\n                        <ListElement isActive={String(index) !== String(props.active)} key={index} onClick={() => onElementClick(e.id)}>\r\n                            {e.value}\r\n                        </ListElement>\r\n                    ))\r\n                )\r\n            ) : (\r\n                <Loader />\r\n            )}\r\n        </ListStyled>\r\n    );\r\n};\r\n\r\nexport default List;\r\n","import styled from 'styled-components';\r\nimport { LinkStyled } from '../Navbar/Navbar.styled';\r\n\r\nexport const AddPatientButtonStyled = styled(LinkStyled)`\r\n\r\n`\r\n\r\nexport const Wrapper = styled.div`\r\n\r\n`\r\n\r\nexport const OpenPatientButton = styled(LinkStyled)`\r\n\r\n`","import React, { useState, useEffect } from \"react\";\r\nimport { AddPatientButtonStyled, Wrapper, OpenPatientButton } from \"./PatientButton.styled\";\r\nimport { Patient } from \"../../api\";\r\nimport Loader from \"../Loader/Loader\";\r\n\r\ntype Props = {\r\n    userAccountId: string;\r\n};\r\n\r\nconst PatientButton = (props: Props) => {\r\n    const [isFetching, setIsFetching] = useState(true);\r\n    const [patients, setPatients] = useState([] as any[]);\r\n\r\n    useEffect(() => {\r\n        Patient.getPatients()\r\n            .then(res => {\r\n                console.log(res.data.patients);\r\n                setPatients(res.data.patients);\r\n                setIsFetching(false);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <Wrapper>\r\n            {isFetching ? (\r\n                <Loader></Loader>\r\n            ) : patients.map(p => String(p.userAccountId)).includes(String(props.userAccountId)) ? (\r\n                <OpenPatientButton to={\"/patient-details/\" + patients.find(p => String(p.userAccountId)).id}>\r\n                    Szczegóły pacjenta\r\n                </OpenPatientButton>\r\n            ) : (\r\n                <AddPatientButtonStyled to={{ pathname: \"/add-patient\", state: { userAccountId: props.userAccountId } }}>\r\n                    Dodaj pacjenta\r\n                </AddPatientButtonStyled>\r\n            )}\r\n        </Wrapper>\r\n    );\r\n};\r\n\r\nexport default PatientButton;\r\n","import React from \"react\";\r\nimport { InfoStyled, InfoWrapper, Name, NoInfo, Email, AccountType, Container } from \"./Info.styled\";\r\nimport Avatar from \"../../Avatar/Avatar\";\r\nimport { LinkStyled } from \"../../Navbar/Navbar.styled\";\r\nimport PatientButton from \"../../PatientButton/PatientButton\";\r\n\r\ntype Props = {\r\n    info:\r\n        | {\r\n              displayName: string;\r\n              avatar: string;\r\n              accountType: string;\r\n              email: string;\r\n              userId: string;\r\n          }\r\n        | undefined;\r\n};\r\n\r\nconst Info = (props: Props) => {\r\n    const { info } = props;\r\n    return (\r\n        <InfoStyled>\r\n            {info ? (\r\n                <InfoWrapper>\r\n                    <Container>\r\n                        <Avatar url={info.avatar}></Avatar>\r\n                        <Name>{info.displayName}</Name>\r\n                    </Container>\r\n                    <Email>Email: {info.email}</Email>\r\n                    <AccountType>Typ konta: {info.accountType === \"doctor\" ? \"lekarz\" : \"pacjent\"}</AccountType>\r\n                    <LinkStyled to={\"/video/\" + info.userId}>Chat video</LinkStyled>\r\n                    {info.accountType === \"patient\" && <PatientButton userAccountId={info.userId}></PatientButton>}\r\n                </InfoWrapper>\r\n            ) : (\r\n                <InfoWrapper>\r\n                    <NoInfo>Brak danych</NoInfo>\r\n                </InfoWrapper>\r\n            )}\r\n        </InfoStyled>\r\n    );\r\n};\r\n\r\nexport default Info;\r\n","import styled from \"styled-components\";\r\nimport { Field } from \"formik\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\n\r\nexport const ChatSubmitButton = styled.button`\r\n    cursor: pointer;\r\n    padding: 0;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    color: ${COLORS.darkblue};\r\n    border: none;\r\n    background: none;\r\n`;\r\n\r\nexport const ChatTextArea = styled(Field)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 100%;\r\n    resize: none;\r\n    padding: 1rem;\r\n    padding-right: 6rem;\r\n    border: none;\r\n    display: block;\r\n    border-top: 1px solid #ddd;\r\n`;\r\n\r\nexport const AddFile = styled.input`\r\n    display: none;\r\n`;\r\n\r\nexport const AddFileLabel = styled.label`\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    color: ${COLORS.darkblue};\r\n`\r\n\r\nexport const Bottom = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    position: absolute;\r\n    bottom: 0;\r\n    width: 100%;\r\n    padding: 1rem;\r\n`\r\n\r\nexport const Label = styled.span`\r\n    padding: 0 0.5rem;\r\n`","import React, { useRef } from \"react\";\r\nimport { ChatSubmitButton, ChatTextArea, AddFile, Bottom, AddFileLabel, Label } from \"./Form.styled\";\r\nimport { Formik, Form as FormikForm } from \"formik\";\r\nimport { SendMessageProps, MessageTypes } from \"../../../api\";\r\nimport { Chat as ChatApi } from \"../../../api\";\r\nimport { faUpload, faArrowRight } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\ntype Props = {\r\n    newConversation: boolean;\r\n    newConversationUserId: string;\r\n    coversationId: string;\r\n    onMessageSent: (data: any) => any;\r\n};\r\n\r\nconst Form = (props: Props) => {\r\n    const ref = useRef(null);\r\n\r\n    const onEnterPress = (e: any) => {\r\n        if (e.keyCode == 13 && e.shiftKey == false) {\r\n            e.preventDefault();\r\n            // @ts-ignore\r\n            ref.current.handleSubmit();\r\n        }\r\n    };\r\n    return (\r\n        <Formik\r\n            ref={ref}\r\n            initialValues={{ text: \"\", file: null }}\r\n            onSubmit={(values, { setFieldValue }) => {\r\n                if (!values.text.replace(/\\s/g, \"\").length && values.file == null) {\r\n                    return;\r\n                }\r\n                let data: SendMessageProps;\r\n\r\n                if (values.file == null) {\r\n                    data = {\r\n                        conversationId: props.coversationId,\r\n                        text: values.text,\r\n                        file: null,\r\n                        messageType: MessageTypes.text,\r\n                        newConversation: props.newConversation,\r\n                        newConversationUserId: props.newConversationUserId\r\n                    };\r\n                } else {\r\n                    data = {\r\n                        conversationId: props.coversationId,\r\n                        text: values.text,\r\n                        file: values.file,\r\n                        messageType: MessageTypes.file,\r\n                        newConversation: props.newConversation,\r\n                        newConversationUserId: props.newConversationUserId\r\n                    };\r\n                }\r\n\r\n                console.log(data);\r\n                ChatApi.sendMessage(data)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        props.onMessageSent(res.data);\r\n                        setFieldValue(\"text\", \"\");\r\n                        setFieldValue(\"file\", null);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n            }}\r\n            render={({ setFieldValue, values }) => (\r\n                <FormikForm>\r\n                    <ChatTextArea name=\"text\" placeholder=\"Wpisz wiadomość...\" component=\"textarea\" onKeyDown={onEnterPress} />\r\n                    <Bottom>\r\n                        <AddFileLabel>\r\n                            <FontAwesomeIcon icon={faUpload}></FontAwesomeIcon>\r\n\r\n                            <Label>\r\n                                {/* \r\n                                // @ts-ignore */}\r\n                                {values.file ? values.file.name : \"Załącz plik\"}\r\n                            </Label>\r\n                            <AddFile\r\n                                id=\"file\"\r\n                                name=\"file\"\r\n                                type=\"file\"\r\n                                onChange={(event: any) => {\r\n                                    setFieldValue(\"file\", event.currentTarget.files[0]);\r\n                                }}\r\n                            ></AddFile>\r\n                        </AddFileLabel>\r\n\r\n                        <ChatSubmitButton type=\"submit\"><Label>Wyślij</Label> <FontAwesomeIcon icon={faArrowRight}></FontAwesomeIcon></ChatSubmitButton>\r\n                    </Bottom>\r\n                </FormikForm>\r\n            )}\r\n        ></Formik>\r\n    );\r\n};\r\n\r\nexport default Form;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../../styles/variables\";\r\n\r\ntype Props = {\r\n    isReceived: boolean;\r\n}\r\n\r\nexport const MessageStyled = styled.div<Props>`\r\n    border: 1px solid #ddd;\r\n    display: flex;\r\n    align-self: flex-start;\r\n    padding: 0;\r\n    border-radius: 40px;\r\n    font-size: 1.6rem;\r\n    line-height: 2rem;\r\n    vertical-align: baseline;\r\n    padding: 0.2rem 1.2rem;\r\n    margin: 0.2rem 0;\r\n    margin-right: 20%;\r\n    border-top-left-radius: 6px;\r\n    background: #ccc;\r\n    ${props =>\r\n        props.isReceived &&\r\n        `\r\n        align-self: flex-end;\r\n        color: white;\r\n        background: ${COLORS.blue};\r\n        margin-right: 0;\r\n        margin-left: 20%;\r\n        border-top-left-radius: 40px;\r\n        border-bottom-right-radius: 6px;\r\n    `}\r\n`;\r\n\r\nexport const MessageWrapper = styled.div`\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n`;\r\n\r\nexport const FileBadge = styled.div`\r\n    cursor: pointer;\r\n    font-weight: bold;\r\n`","import React from \"react\";\r\nimport { MessageStyled, MessageWrapper, FileBadge } from \"./Message.styled\";\r\nimport { MessageTypes, Chat as ChatApi } from \"../../../api\";\r\nimport { saveAs } from \"file-saver\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faDownload } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ntype Props = {\r\n    isReceived: boolean;\r\n    type: string;\r\n    text: string;\r\n    date: string;\r\n    srcPath: string;\r\n    id: string;\r\n    initialFileName: string;\r\n};\r\n\r\nconst Message = (props: Props) => {\r\n    const { isReceived, type, text, date, srcPath, id, initialFileName } = props;\r\n\r\n    const downloadFile = (id: string) => {\r\n        ChatApi.getFile(id)\r\n            .then((res: any) => {\r\n                console.log(res);\r\n                if (res.statusText === \"OK\") {\r\n                    const blob = new Blob([res.data], {\r\n                        type: res.data.type\r\n                    });\r\n                    saveAs(blob, initialFileName);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    switch (type) {\r\n        case MessageTypes.text:\r\n            return (\r\n                <MessageWrapper>\r\n                    <MessageStyled isReceived={isReceived}>{text}</MessageStyled>\r\n                </MessageWrapper>\r\n            );\r\n        case MessageTypes.file:\r\n            return (\r\n                <MessageWrapper>\r\n                    <MessageStyled isReceived={isReceived} onClick={() => downloadFile(id)}>\r\n                        {text}\r\n                        <FileBadge>\r\n                            <FontAwesomeIcon icon={faDownload}></FontAwesomeIcon>\r\n                            {initialFileName}\r\n                        </FileBadge>\r\n                    </MessageStyled>\r\n                </MessageWrapper>\r\n            );\r\n        default:\r\n            return <MessageWrapper>Unsupported message type</MessageWrapper>;\r\n    }\r\n};\r\n\r\nexport default Message;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n    ChatStyled,\r\n    ConversationWrapper,\r\n    ChatWindow,\r\n    ChatFormWrapper,\r\n    ChatInfoWrapper,\r\n    NewMessageBadge,\r\n    NoMessagesBadge\r\n} from \"./Chat.styled\";\r\nimport List from \"../../components/Chat/List/List\";\r\nimport Info from \"../../components/Chat/Info/Info\";\r\nimport Form from \"../../components/Chat/Form/Form\";\r\nimport Message from \"../../components/Chat/Message/Message\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport useDocumentTitle from \"../../hooks/useDocumentTitle\";\r\nimport { Chat as ChatApi, GetMessagesProps } from \"../../api\";\r\nimport { MESSAGES_PAGE_SIZE } from \"../../constants/config\";\r\nimport { push } from \"connected-react-router\";\r\nimport { socket } from \"../../api\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams> & ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {};\r\n\r\nconst Chat = (props: Props) => {\r\n    useDocumentTitle(\"Chat\");\r\n    const [activeConversationId, setActiveConversationId] = useState(props.match.params.id);\r\n    const [conversations, setConversations] = useState([] as any[]);\r\n    const [activeConversationMessages, setActiveConversationMessages] = useState([] as any[]);\r\n    const [activeConversationInfo, setActiveConversationInfo] = useState();\r\n    const [newConversationUserId, setNewConversationUserId] = useState(\r\n        props.location && props.location.state ? props.location.state.newConversationUserId : undefined\r\n    );\r\n    const [isLoadingConversations, setIsLoadingConversations] = useState(true);\r\n\r\n    const chatWindowRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        fetchConversations();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        socket.on(\"MESSAGE\", (data: any) => {\r\n            updateMessages(data);\r\n        });\r\n        setConversationInfo(activeConversationId);\r\n    }, [activeConversationMessages, activeConversationId]);\r\n\r\n    useEffect(() => {\r\n        if (activeConversationId) {\r\n            fetchMessages();\r\n        }\r\n    }, [activeConversationId]);\r\n\r\n    useEffect(() => {\r\n        if (newConversationUserId) {\r\n            let index = getConversationIndexByUserId(conversations, newConversationUserId);\r\n            console.log(index);\r\n            if (index !== -1) {\r\n                changeActiveConversation(conversations[index].id);\r\n            }\r\n        } else {\r\n            if (activeConversationId) {\r\n                let index = conversations.findIndex((c: any) => c.id === activeConversationId);\r\n                console.log(index);\r\n                if (index !== -1) {\r\n                    changeActiveConversation(conversations[index].id);\r\n                } else {\r\n                    if (conversations.length) {\r\n                        changeActiveConversation(conversations[0].id);\r\n                    } else {\r\n                        changeActiveConversation(\"\");\r\n                    }\r\n                }\r\n            } else {\r\n                if (conversations.length) {\r\n                    changeActiveConversation(conversations[0].id);\r\n                } else {\r\n                    changeActiveConversation(\"\");\r\n                }\r\n            }\r\n        }\r\n    }, [conversations, isLoadingConversations]);\r\n\r\n    const updateMessages = (data: any) => {\r\n        if (data.createdNewConversation) {\r\n            console.log(conversations);\r\n            setConversations([...conversations, data.newConversation]);\r\n        }\r\n        if (activeConversationId == String(data.message.conversationId)) {\r\n            setActiveConversationMessages([...activeConversationMessages, data.message]);\r\n            scrollToBottomOfChatWindow();\r\n        }\r\n    };\r\n\r\n    const getConversationIndexByUserId = (conversations: any[], userId: string) => {\r\n        let result = -1;\r\n\r\n        conversations.forEach((c: any, index: number) => {\r\n            if (c.users.length > 1) {\r\n                c.users.forEach((u: any) => {\r\n                    if (String(u.id) === String(userId) && String(u.id) !== String(props.currentUser.id)) {\r\n                        result = index;\r\n                    }\r\n                });\r\n            } else if (\r\n                c.users.length === 1 &&\r\n                String(c.users[0].id) === String(props.currentUser.id) &&\r\n                String(c.users[0].id) === String(userId)\r\n            ) {\r\n                result = index;\r\n            }\r\n        });\r\n        console.log(conversations);\r\n        console.log(result);\r\n        return result;\r\n    };\r\n\r\n    const fetchConversations = () => {\r\n        ChatApi.getConversations()\r\n            .then((res: any) => {\r\n                setConversations(res.data.conversations);\r\n                setIsLoadingConversations(false);\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    const onMessageSent = (data: any) => {\r\n        if (data.createdNewConversation) {\r\n            const newConversation = data.newConversation;\r\n            setConversations([...conversations, newConversation]);\r\n            changeActiveConversation(newConversation.id);\r\n        }\r\n    };\r\n\r\n    const changeActiveConversation = (id: string) => {\r\n        setActiveConversationId(id);\r\n        setConversationInfo(id);\r\n        setNewConversationUserId(undefined);\r\n        if (id) {\r\n            props.push(\"/chat/\" + id);\r\n        } else {\r\n            props.push(\"/chat\");\r\n        }\r\n    };\r\n\r\n    const fetchMessages = () => {\r\n        let loadedMessages = activeConversationMessages.filter(m => String(m.conversationId) === activeConversationId) || [];\r\n        const getMessagesProps: GetMessagesProps = {\r\n            conversationId: activeConversationId,\r\n            qty: MESSAGES_PAGE_SIZE,\r\n            offset: loadedMessages.length\r\n        };\r\n        ChatApi.getMessages(getMessagesProps)\r\n            .then((res: any) => {\r\n                setActiveConversationMessages([...loadedMessages, ...res.data.messages]);\r\n                scrollToBottomOfChatWindow();\r\n            })\r\n            .catch((err: any) => {\r\n                console.error(err);\r\n            });\r\n    };\r\n\r\n    const onConversationClick = (id: string) => {\r\n        changeActiveConversation(String(id));\r\n    };\r\n\r\n    const parseConversationResponse = (conversations: any) => {\r\n        return conversations.map((c: any) => {\r\n            let conversationName = \"\";\r\n            c.users.forEach((u: any) => {\r\n                if (u.displayName !== props.currentUser.displayName) {\r\n                    conversationName += u.displayName + \", \";\r\n                }\r\n            });\r\n            if (conversationName.length === 0) {\r\n                conversationName = props.currentUser.displayName + \", \";\r\n            }\r\n            return { value: conversationName.slice(0, -2), id: c.id };\r\n        });\r\n    };\r\n\r\n    const setConversationInfo = (id: string) => {\r\n        console.log(conversations);\r\n        let data = undefined;\r\n        let c = conversations.find((c: any) => String(c.id) === String(id));\r\n        if (c) {\r\n            if (c.users.length === 1) {\r\n                data = {\r\n                    displayName: c.users[0].displayName,\r\n                    accountType: c.users[0].accountType,\r\n                    email: c.users[0].email,\r\n                    avatar: c.users[0].avatar,\r\n                    userId: c.users[0].id\r\n                };\r\n            } else if (c.users.length > 1) {\r\n                let u = c.users.find((u: any) => String(u.id) !== String(props.currentUser.id));\r\n                if (u) {\r\n                    data = {\r\n                        displayName: u.displayName,\r\n                        accountType: u.accountType,\r\n                        email: u.email,\r\n                        avatar: u.avatar,\r\n                        userId: u.id\r\n                    };\r\n                } else {\r\n                    data = undefined;\r\n                }\r\n            }\r\n        }\r\n\r\n        setActiveConversationInfo(data);\r\n    };\r\n\r\n    const scrollToBottomOfChatWindow = () => {\r\n        if (chatWindowRef && chatWindowRef.current) {\r\n            // @ts-ignore\r\n            chatWindowRef.current.scrollTop = chatWindowRef.current.scrollHeight;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <ChatStyled>\r\n            <List\r\n                elements={!isLoadingConversations && conversations ? parseConversationResponse(conversations) : undefined}\r\n                onElementClick={onConversationClick}\r\n                active={\r\n                    !isLoadingConversations && conversations\r\n                        ? conversations.findIndex(c => String(c.id) === String(activeConversationId))\r\n                        : -1\r\n                }\r\n            />\r\n            <ConversationWrapper>\r\n                <ChatWindow ref={chatWindowRef}>\r\n                    {newConversationUserId ? (\r\n                        <NewMessageBadge>new conversation: {newConversationUserId}</NewMessageBadge>\r\n                    ) : activeConversationMessages !== undefined ? (\r\n                        activeConversationMessages.length !== 0 ? (\r\n                            activeConversationMessages.map((m: any) => (\r\n                                <Message\r\n                                    text={m.text}\r\n                                    key={m.id}\r\n                                    id={m.id}\r\n                                    date={m.createdAt}\r\n                                    type={m.messageType}\r\n                                    srcPath={m.srcPath}\r\n                                    initialFileName={m.initialFileName}\r\n                                    isReceived={String(props.currentUser.id) === String(m.senderId)}\r\n                                ></Message>\r\n                            ))\r\n                        ) : (\r\n                            <NoMessagesBadge>brak wiadomosci</NoMessagesBadge>\r\n                        )\r\n                    ) : (\r\n                        <Loader />\r\n                    )}\r\n                </ChatWindow>\r\n                <ChatFormWrapper>\r\n                    <Form\r\n                        newConversationUserId={newConversationUserId}\r\n                        coversationId={activeConversationId}\r\n                        newConversation={!!newConversationUserId}\r\n                        onMessageSent={onMessageSent}\r\n                    />\r\n                </ChatFormWrapper>\r\n            </ConversationWrapper>\r\n            <ChatInfoWrapper>{conversations ? <Info info={activeConversationInfo} /> : <Loader />}</ChatInfoWrapper>\r\n        </ChatStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n    return { currentUser: state.auth.currentUser };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    push\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Chat);\r\n"],"sourceRoot":""}