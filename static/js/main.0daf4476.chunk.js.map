{"version":3,"sources":["store/auth/types.ts","components/Navbar/Navbar.styled.ts","styles/scrollbar.ts","styles/router.ts","styles/gallery.ts","styles/input-range.ts","styles/global.ts","components/DropdownMenu/DropdownMenu.styled.ts","hooks/useOutsideAlerter.ts","components/DropdownMenu/DropdownMenu.tsx","components/Navbar/Navbar.tsx","components/AnimatedSwitch.tsx","components/App/App.tsx","index.tsx","registerServiceWorker.js","constants/config.ts","store/auth/reducer.ts","store/auth/sagas.ts","store/chat/types.ts","store/chat/reducer.ts","store/filters/reducer.ts","store/sorting/reducer.ts","store/index.ts","store/auth/actions.ts","styles/variables.ts","components/BarLoader/BarLoader.tsx","api.ts","components/Avatar/Avatar.styled.ts","components/Avatar/Avatar.tsx","components/SharedStyledComponents/ContainerFluid.styled.ts","store/filters/types.ts","store/sorting/types.ts"],"names":["AuthActionTypes","NavbarStyled","styled","nav","NAV_HEIGHT","NavbarInner","div","Logo","GUTTER","Hamburger","button","BREAKPOINTS","md","COLORS","white","blue","ItemList","ul","props","opened","Item","li","gray","LinkStyled","Link","darkblue","blue2","NameBadge","span","AvatarAndDropdown","scrollbar","css","router","routerTransition","exit","enter","gallery","inputRange","GlobalStyle","createGlobalStyle","xl","lg","sm","NAV_HEADROOM","Wrapper","Toggle","List","LinkElement","useOutsideAlerter","ref","handler","handleClickOutside","event","current","contains","target","useEffect","document","addEventListener","removeEventListener","DropdownMenu","useRef","useState","isOpened","setOpened","onClick","children","elements","map","e","index","key","to","url","onclick","text","mapDispatchToProps","logout","connect","state","currentUser","auth","isAuthenticated","menuOpened","setMenuOpened","maxheight","icon","faTimes","faBars","Fragment","accountType","Avatar","avatar","undefined","displayName","profileId","faAngleDown","withRouter","TransitionGroup","CSSTransition","location","pathname","split","classNames","timeout","appear","className","fallback","BarLoader","Home","lazy","Login","Register","Chat","RegisterSuccess","ProfileList","Profile","ProfileSettings","Dashboard","VideoChat","NotFound","AddPatient","PatientDetails","App","store","persistor","history","exact","path","component","ReactDOM","render","getElementById","navigator","window","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","API_ROOT","STATIC_FILES_ROOT","PROFILES_PAGE_SIZE","MESSAGES_PAGE_SIZE","FALLBACK_AVATAR_URL","initialState","id","email","token","isLoggingIn","isRegistering","handleLogin","handleRegister","handleLogout","watchLoginRequest","watchRegisterRequest","watchLogout","authSaga","action","call","Auth","login","payload","res","put","loginError","loginSuccess","data","from","push","registerError","registerSuccess","takeEvery","LOGIN_REQUEST","REGISTER_REQUEST","LOGOUT","all","fork","ChatActionTypes","city","services","priceRange","min","max","sorting","rootSaga","createBrowserHistory","rootReducer","combineReducers","connectRouter","type","LOGIN_SUCCESS","user","LOGIN_ERROR","REGISTER_SUCCESS","REGISTER_ERROR","AUTH_ERROR_RESET","SET_CURRENT_USER","chat","SEND_MESSAGE_REQUEST","SEND_MESSAGE_SUCCESS","SEND_MESSAGE_ERROR","filters","FiltersActionTypes","FILTER","SortingActionTypes","SORT","persistConfig","storage","whitelist","loggerMiddleware","createLogger","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","routerMiddleware","persistStore","run","loginRequest","registerRequest","resetAuthError","setCurrentUser","black","golden","lightgray","CONTAINER_FLUID_GUTTER_REM","multiplier","TopBarProgress","config","barColors","shadowColor","socket","io","on","localStorage","setItem","requests","get","axios","interceptors","request","use","socketid","getItem","headers","getState","Authorization","Promise","reject","response","status","dispatch","showLoginFirstMessage","LoginTypes","MessageTypes","post","body","patch","delete","loginType","local","facebook","sendMessage","messageType","file","fd","FormData","append","set","conversationId","getConversations","getMessages","encodeURIComponent","qty","offset","getFile","responseType","getProfiles","alreadyFetched","filterQuery","JSON","stringify","getProfile","addPriceListElement","deletePriceListElement","addImage","deleteImage","imageId","uploadAvatar","resetAvatar","updateProfileData","updateUserData","addReview","search","phrase","count","mostRecent","getReport","days","getUser","Patient","getPatients","getPatient","addPatient","addNote","deleteNote","getNotes","patientId","getDataSets","addDataSet","removeDataSet","dataSetId","addDataValue","deleteDataValue","AvatarWrapper","isFull","AvatarImage","img","includes","src","ContainerFluid"],"mappings":"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","file":"static/js/main.0daf4476.chunk.js","sourcesContent":["import { LoginProps, RegisterProps } from \"../../api\";\n\nexport interface AuthState {\n    readonly currentUser: {\n        id: string,\n        avatar: string,\n        displayName: string,\n        email: string,\n        accountType: string,\n        profileId: string\n    },\n    readonly token: string,\n    readonly isLoggingIn: boolean,\n    readonly isRegistering: boolean,\n    readonly isAuthenticated: boolean,\n    readonly error: any\n}\n\nexport enum AuthActionTypes {\n    LOGIN_REQUEST = \"@@auth/LOGIN_REQUEST\",\n    LOGIN_SUCCESS = \"@@auth/LOGIN_SUCCESS\",\n    LOGIN_ERROR = \"@@auth/LOGIN_ERROR\",\n    REGISTER_REQUEST = \"@@auth/REGISTER_REQUEST\",\n    REGISTER_SUCCESS = \"@@auth/REGISTER_SUCCESS\",\n    REGISTER_ERROR = \"@@auth/REGISTER_ERROR\",\n    AUTH_ERROR_RESET = \"@@auth/AUTH_ERROR_RESET\",\n    LOGOUT = \"@@auth/LOGOUT\",\n    SET_CURRENT_USER = \"@@auth/SET_CURRENT_USER\"\n}","import styled from \"styled-components\";\nimport { BREAKPOINTS, GUTTER, NAV_HEIGHT, COLORS } from \"../../styles/variables\";\nimport { Link } from \"react-router-dom\";\n\nexport const NavbarStyled = styled.nav`\n    position: sticky;\n    box-sizing: border-box;\n    top: 0;\n    z-index: 1000;\n    height: ${NAV_HEIGHT};\n    width: 100%;\n    -webkit-box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.2);\n    -moz-box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.2);\n    box-shadow: 0px 2px 10px 0px rgba(0, 0, 0, 0.2);\n\n    font-weight: bold;\n`;\n\nexport const NavbarInner = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 100%;\n    box-sizing: border-box;\n`;\n\nexport const Logo = styled.div`\n    padding: 0 ${GUTTER(3)};\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    padding-left: 0;\n`;\n\nexport const Hamburger = styled.button`\n    display: none;\n    background: none;\n    @media (max-width: ${BREAKPOINTS.md}) {\n        display: block;\n    }\n    width: 2.6rem;\n    height: 2.6rem;\n    cursor: pointer;\n    padding: 0;\n    margin: 0;\n    border: none;\n    background: ${COLORS.white};\n    color: ${COLORS.blue};\n    font-size: 2.2rem;\n    outline: none;\n`;\n\ntype ItemListProps = {\n    opened: boolean;\n}\n\nexport const ItemList = styled.ul<ItemListProps>`\n    display: flex;\n    flex-direction: row;\n    @media (max-width: ${BREAKPOINTS.md}) {\n        width: 100%;\n        left: 0;\n        top: ${NAV_HEIGHT};\n        max-height: calc(100vh - ${NAV_HEIGHT});\n        position: absolute;\n        flex-direction: column;\n        justify-content: space-evenly;\n        background: white;\n        display: ${props => (props.opened ? \"flex\" : \"none\")};\n    }\n`;\n\nexport const Item = styled.li`\n    padding: 0 ${GUTTER(4)};\n    font-size: 1.4rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n\n    :last-of-type {\n        padding-right: 0;\n    }\n    @media (max-width: ${BREAKPOINTS.md}) {\n        justify-content: flex-start;\n        padding: ${GUTTER(4)};\n        border-top: 1px solid ${COLORS.gray};\n        :last-of-type {\n            padding-right: ${GUTTER(4)};\n            border-bottom: 1px solid ${COLORS.gray};\n        }\n    }\n`;\n\nexport const LinkStyled = styled(Link)`\n    text-decoration: none;\n    color: ${COLORS.darkblue};\n    transition: color 0.1s;\n\n    :link {\n        color: ${COLORS.darkblue};\n    }\n\n    &:hover {\n        color: ${COLORS.blue2};\n    }\n`\n\nexport const NameBadge = styled.span`\n    color: #444;\n    padding: 0 0.5rem;\n`\n\nexport const AvatarAndDropdown = styled.div`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n","import { css } from \"styled-components\";\n\nexport const scrollbar = css`\n    ::-webkit-scrollbar {\n        width: 8px;\n    }\n\n    ::-webkit-scrollbar:hover {\n        background: #ddd;\n    }\n\n    /* Track */\n    ::-webkit-scrollbar-track {\n        box-shadow: inset 0 0 4px rgba(148, 148, 148, 0.6);\n    }\n    /* Handle */\n    ::-webkit-scrollbar-thumb {\n        background: rgba(156, 156, 156, 0.7);\n        border-radius: 3px;\n        border: 1px solid rgba(196, 196, 196, 0.7);\n    }\n    ::-webkit-scrollbar-thumb:hover {\n        background: rgba(126, 126, 126, 1);\n    }\n`;","import { css } from \"styled-components\";\nimport { routerTransition } from \"./variables\";\n\nexport const router = css`\n    .router-enter {\n        opacity: 0.01;\n        transform: translate3d(0, 12px, 0);\n    }\n\n    .router-enter-active {\n        opacity: 1;\n        transform: translate3d(0, 0px, 0);\n        transition: all ${routerTransition.exit}ms ${routerTransition.enter - routerTransition.exit}ms;\n    }\n\n    .router-exit {\n        opacity: 1;\n        transform: translate3d(0, 0px, 0);\n    }\n\n    .router-exit-active {\n        opacity: 0.01;\n        transform: translate3d(0, 12px, 0);\n        transition: all ${routerTransition.exit}ms;\n    }\n`;","import { css } from \"styled-components\";\nimport { routerTransition } from \"./variables\";\n\nexport const gallery = css`\n.gallery {\n    &__container {\n        display: grid;\n        grid-gap: 2rem;\n        grid-template-columns: repeat(6, 1fr);\n\n        @media only screen and (max-width: 600px) {\n            grid-template-columns: repeat(2, 1fr);\n        }\n    }\n        \n\n\n    &__image--small {\n        height: 100%;\n        width: 100%;\n        cursor: pointer;\n        position: relative;\n\n        img {\n            height: 100%;\n            width: 100%;\n            object-fit: cover;\n            object-position: center;\n        }\n    }\n}\n\n\n.ril__toolbar {\n    background-color: transparent !important;\n}\n`;","import { css } from \"styled-components\";\nimport { routerTransition } from \"./variables\";\n\nexport const inputRange = css`\n    .input-range {\n        padding: 3rem 0rem;\n        \n        &__label-container {\n            font-size: 1.6rem !important;\n        }\n\n        &__label--value {\n            top: -3rem !important;\n        }\n\n        &__label--max {\n            bottom: -0.4rem !important;\n        }\n\n        &__label--min {\n            bottom: -0.4rem !important;\n        }\n    }\n`;","import { createGlobalStyle } from \"styled-components\";\nimport { BREAKPOINTS, NAV_HEADROOM } from \"./variables\";\nimport { scrollbar } from \"./scrollbar\";\nimport { router } from \"./router\";\nimport { gallery } from \"./gallery\";\nimport { inputRange } from \"./input-range\";\n\nexport const GlobalStyle = createGlobalStyle`\n    @import url(\"https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap\");\n    html,\n    body {\n        font-size: 62.5%;\n        @media (max-width: ${BREAKPOINTS.xl}) {\n            font-size: 60%;\n        }\n        @media (max-width: ${BREAKPOINTS.lg}) {\n            font-size: 57.5%;\n        }\n        @media (max-width: ${BREAKPOINTS.md}) {\n            font-size: 55%;\n        }\n        @media (max-width: ${BREAKPOINTS.sm}) {\n            font-size: 52.5%;\n        }\n\n    \n        scroll-behavior: smooth;\n\n        max-width: 100vw;\n\n    }\n    body {\n        overflow: overlay;\n        font-size: 1.6rem;\n        line-height: 2.4rem;\n        font-family: \"Roboto\", sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        text-rendering: optimizeLegibility;\n    }\n    html,\n    body,\n    div,\n    span,\n    applet,\n    object,\n    iframe,\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6,\n    p,\n    blockquote,\n    pre,\n    a,\n    abbr,\n    acronym,\n    address,\n    big,\n    cite,\n    code,\n    del,\n    dfn,\n    em,\n    img,\n    ins,\n    kbd,\n    q,\n    s,\n    samp,\n    small,\n    strike,\n    strong,\n    sub,\n    sup,\n    tt,\n    var,\n    b,\n    u,\n    i,\n    center,\n    dl,\n    dt,\n    dd,\n    ol,\n    ul,\n    li,\n    fieldset,\n    form,\n    label,\n    legend,\n    table,\n    caption,\n    tbody,\n    tfoot,\n    thead,\n    tr,\n    th,\n    td,\n    article,\n    aside,\n    canvas,\n    details,\n    embed,\n    figure,\n    figcaption,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    output,\n    ruby,\n    section,\n    summary,\n    time,\n    mark,\n    audio,\n    video {\n        margin: 0;\n        padding: 0;\n        border: 0;\n        vertical-align: baseline;\n        box-sizing: border-box;\n    }\n    article,\n    aside,\n    details,\n    figcaption,\n    figure,\n    footer,\n    header,\n    hgroup,\n    menu,\n    nav,\n    section {\n        display: block;\n    }\n    ol,\n    ul {\n        list-style: none;\n    }\n    blockquote,\n    q {\n        quotes: none;\n    }\n    blockquote:before,\n    blockquote:after,\n    q:before,\n    q:after {\n        content: \"\";\n        content: none;\n    }\n    table {\n        border-collapse: collapse;\n        border-spacing: 0;\n    }\n    .page-wrapper {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        padding-top: ${NAV_HEADROOM};\n        box-sizing: border-box;\n        display: block;\n    }\n    ${scrollbar}\n    ${router}\n    ${gallery}\n    ${inputRange}\n`;","import styled from 'styled-components'\nimport { Link } from 'react-router-dom'\nimport { COLORS } from '../../styles/variables'\n\nexport const Wrapper = styled.div`\n    width: 2.6rem;\n    height: 2.6rem;\n    padding: 0;\n    position: relative;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nexport const Toggle = styled.button`\n    display: block;\n    border: none;\n    width: 2.6rem;\n    height: 2.6rem;\n    cursor: pointer;\n    padding: 0;\n    margin: 0;\n    border-radius: 100%;\n    background: ${COLORS.white};\n    color: ${COLORS.blue};\n    font-size: 2.2rem;\n    outline: none;\n`\n\nexport const List = styled.ul`\n    display: flex;\n    flex-direction: column;\n    position: absolute;\n    top: 120%;\n    right: 0;\n    width: 12rem;\n\n    box-shadow:\n  0 4.5px 10px rgba(0, 0, 0, 0.078),\n  0 9px 80px rgba(0, 0, 0, 0.12)\n;\n\n    border: 1px solid #eee;\n\n`\n\nexport const LinkElement = styled(Link)`\n    padding: 0.5rem;\n    width: 100%;\n    font-size: 1.4rem;\n    border-bottom: 1px solid #eee;\n    background: ${COLORS.white};\n    text-decoration: none;\n    color: ${COLORS.blue};\n    text-align: center;\n\n    &:hover {\n        background: #ddd;\n        cursor: pointer;\n    }\n\n`","import React, { useRef, useEffect } from \"react\";\n\nfunction useOutsideAlerter(ref: any, handler: any) {\n    function handleClickOutside(event: any) {\n        if (ref.current && !ref.current.contains(event.target)) {\n            handler()\n        }\n    }\n\n    useEffect(() => {\n        document.addEventListener(\"mousedown\", handleClickOutside);\n        return () => {\n            document.removeEventListener(\"mousedown\", handleClickOutside);\n        };\n    });\n}\n\nexport default useOutsideAlerter;","import React, { useState, useRef } from \"react\";\nimport { Wrapper, Toggle, LinkElement, List } from \"./DropdownMenu.styled\";\nimport useOutsideAlerter from \"../../hooks/useOutsideAlerter\";\n\ntype Props = {\n    children?: any;\n    elements: {\n        text: string;\n        url?: string;\n        onclick?: () => any;\n    }[];\n};\n\nconst DropdownMenu = (props: Props) => {\n    const ref = useRef(null);\n    const [isOpened, setOpened] = useState(false);\n    useOutsideAlerter(ref, () => {\n        setOpened(false);\n    });\n    return (\n        <Wrapper ref={ref}>\n            <Toggle onClick={() => setOpened(!isOpened)}>{props.children}</Toggle>\n            {isOpened && (\n                <List>\n                    {props.elements.map((e, index) => {\n                        return (\n                            <LinkElement\n                                key={index}\n                                to={e.url}\n                                onClick={() => {\n                                    setOpened(!isOpened);\n                                    if (e.onclick) {\n                                        e.onclick();\n                                    }\n                                }}\n                            >\n                                {e.text}\n                            </LinkElement>\n                        );\n                    })}\n                </List>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default DropdownMenu;\n","import React, { useState } from \"react\";\nimport {\n    NavbarStyled,\n    Logo,\n    Hamburger,\n    ItemList,\n    Item,\n    NavbarInner,\n    NameBadge,\n    LinkStyled,\n    AvatarAndDropdown\n} from \"./Navbar.styled\";\nimport { ContainerFluid } from \"../SharedStyledComponents/ContainerFluid.styled\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../store/auth/actions\";\nimport { ApplicationState } from \"../../store\";\nimport Avatar from \"../Avatar/Avatar\";\nimport DropdownMenu from \"../DropdownMenu/DropdownMenu\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleDown, faBars, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps;\n\nconst Navbar = (props: Props) => {\n    const [menuOpened, setMenuOpened] = useState(false);\n\n    return (\n        <NavbarStyled>\n            <ContainerFluid maxheight>\n                <NavbarInner>\n                    <Logo onClick={() => setMenuOpened(false)}>\n                        <LinkStyled to=\"/\">LOGO</LinkStyled>\n                    </Logo>\n                    <Hamburger onClick={() => setMenuOpened(!menuOpened)}>\n                        {menuOpened ? (\n                            <FontAwesomeIcon icon={faTimes}></FontAwesomeIcon>\n                        ) : (\n                            <FontAwesomeIcon icon={faBars}></FontAwesomeIcon>\n                        )}\n                    </Hamburger>\n                    <ItemList opened={menuOpened}>\n                        <Item onClick={() => setMenuOpened(false)}>\n                            <LinkStyled to=\"/list\">Przeglądaj profile</LinkStyled>\n                        </Item>\n                        {props.isAuthenticated ? (\n                            <React.Fragment>\n                                <Item onClick={() => setMenuOpened(false)}>\n                                    <LinkStyled to=\"/chat\">Chat</LinkStyled>\n                                </Item>\n                                {props.currentUser.accountType === \"doctor\" ? (\n                                    <React.Fragment>\n                                        <Item onClick={() => setMenuOpened(false)}>\n                                            <LinkStyled to={\"/dashboard\"}>Panel</LinkStyled>\n                                        </Item>\n                                        <Item>\n                                            <AvatarAndDropdown>\n                                                <Avatar\n                                                    url={props.currentUser.avatar ? props.currentUser.avatar : undefined}\n                                                ></Avatar>\n                                                <NameBadge>{props.currentUser.displayName}</NameBadge>\n                                                <DropdownMenu\n                                                    elements={[\n                                                        { text: \"Mój profil\", url: \"/profile/\" + props.currentUser.profileId },\n                                                        { text: \"Edytuj profil\", url: \"/profile-settings\" },\n                                                        {\n                                                            text: \"Wyloguj się\",\n                                                            onclick: () => {\n                                                                props.logout();\n                                                            }\n                                                        }\n                                                    ]}\n                                                >\n                                                    <FontAwesomeIcon icon={faAngleDown}></FontAwesomeIcon>\n                                                </DropdownMenu>\n                                            </AvatarAndDropdown>\n                                        </Item>\n                                    </React.Fragment>\n                                ) : (\n                                    <Item>\n                                        <AvatarAndDropdown>\n                                            <Avatar\n                                                url={props.currentUser.avatar ? props.currentUser.avatar : undefined}\n                                            ></Avatar>\n                                            <NameBadge>{props.currentUser.displayName}</NameBadge>\n                                            <DropdownMenu\n                                                elements={[\n                                                    { text: \"Edytuj profil\", url: \"/profile-settings\" },\n                                                    {\n                                                        text: \"Wyloguj się\",\n                                                        onclick: () => {\n                                                            props.logout();\n                                                        }\n                                                    }\n                                                ]}\n                                            >\n                                                <FontAwesomeIcon icon={faAngleDown}></FontAwesomeIcon>\n                                            </DropdownMenu>\n                                        </AvatarAndDropdown>\n                                    </Item>\n                                )}\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                <Item onClick={() => setMenuOpened(false)}>\n                                    <LinkStyled to=\"/login\">Logowanie</LinkStyled>\n                                </Item>\n                                <Item onClick={() => setMenuOpened(false)}>\n                                    <LinkStyled to=\"/register\">Rejestracja</LinkStyled>\n                                </Item>\n                            </React.Fragment>\n                        )}\n                    </ItemList>\n                </NavbarInner>\n            </ContainerFluid>\n        </NavbarStyled>\n    );\n};\n\nconst mapStateToProps = (state: ApplicationState) => {\n    return {\n        currentUser: state.auth.currentUser,\n        isAuthenticated: state.auth.isAuthenticated\n    };\n};\n\nconst mapDispatchToProps = {\n    logout\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);\n","import React, { Suspense } from \"react\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\nimport { Switch, withRouter, RouteComponentProps } from \"react-router\";\nimport BarLoader from \"./BarLoader/BarLoader\";\nimport { routerTransition } from \"../styles/variables\";\n\ntype Props = {\n    children: JSX.Element[] | JSX.Element | string;\n} & RouteComponentProps;\n\nconst AnimatedSwitch = (props: Props) => (\n    <TransitionGroup>\n        <CSSTransition\n            key={props.location.pathname.split(\"/\")[1] || \"/\"}\n            classNames=\"router\"\n            timeout={{ appear: routerTransition.appear, enter: routerTransition.enter, exit: routerTransition.exit }}\n            appear={true}\n        >\n            <div className=\"page-wrapper\">\n                <Suspense fallback={<BarLoader />}>\n                    <Switch location={props.location}>{props.children}</Switch>\n                </Suspense>\n            </div>\n        </CSSTransition>\n    </TransitionGroup>\n);\n\nexport default withRouter(AnimatedSwitch);\n","import React, { Suspense, lazy, useEffect, ComponentType } from \"react\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport { store, persistor, history } from \"../../store\";\n\nimport { GlobalStyle } from \"../../styles/global\";\nimport BarLoader from \"../BarLoader/BarLoader\";\nimport Navbar from \"../Navbar/Navbar\";\n// import ProtectedRoute from \"./ProtectedRoute\";\n\nimport AnimatedSwitch from \"../AnimatedSwitch\";\nimport { Route, Redirect } from \"react-router\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport ProtectedRoute from \"../ProtectedRoute\";\n\n// import Home from \"../../views/Home/Home\";\n\nconst Home = lazy(() => import(\"../../views/Home/Home\"));\nconst Login = lazy(() => import(\"../../views/Login/Login\"));\nconst Register = lazy(() => import(\"../../views/Register/Register\"));\nconst Chat = lazy(() => import(\"../../views/Chat/Chat\"));\nconst RegisterSuccess = lazy(() => import(\"../../views/RegisterSuccess/RegisterSuccess\"));\nconst ProfileList = lazy(() => import(\"../../views/ProfileList/ProfileList\"));\nconst Profile = lazy(() => import(\"../../views/Profile/Profile\"));\nconst ProfileSettings = lazy(() => import(\"../../views/ProfileSettings/ProfileSettings\"));\nconst Dashboard = lazy(() => import(\"../../views/Dashboard/Dashboard\"));\nconst VideoChat = lazy(() => import(\"../../views/VideoChat/VideoChat\"));\nconst NotFound = lazy(() => import(\"../../views/NotFound/NotFound\"));\nconst AddPatient = lazy(() => import(\"../../views/AddPatient/AddPatient\"));\nconst PatientDetails = lazy(() => import(\"../../views/PatientDetails/PatientDetails\"));\n\nconst App = () => {\n    return (\n        <Suspense fallback={<BarLoader />}>\n            <Provider store={store}>\n                <PersistGate persistor={persistor}>\n                    <ConnectedRouter history={history}>\n                        <React.Fragment>\n                            <GlobalStyle />\n                            <Navbar />\n                            <AnimatedSwitch>\n                                <Route exact path=\"/\" component={Home} />\n                                <Route exact path=\"/login\" component={Login} />\n                                <Route exact path=\"/register\" component={Register} />\n                                <Route exact path=\"/register-success\" component={RegisterSuccess} />\n                                <Route path=\"/chat\" component={Chat} />\n                                <Route path=\"/chat/:id\" component={Chat} />\n                                <Route path=\"/list\" component={ProfileList} />\n                                <Route path=\"/profile-settings\" component={ProfileSettings} />\n                                <Route path=\"/profile/:id\" component={Profile} />\n                                <Route path=\"/dashboard\" component={Dashboard} />\n                                <Route path=\"/video/:id\" component={VideoChat} />\n                                <Route path=\"/not-found\" component={NotFound} />\n                                <Route path=\"/add-patient\" component={AddPatient} />\n                                <Route path=\"/patient-details/:id\" component={PatientDetails} />\n                                <Redirect to={{ pathname: \"/not-found\" }} />\n                            </AnimatedSwitch>\n                        </React.Fragment>\n                    </ConnectedRouter>\n                </PersistGate>\n            </Provider>\n        </Suspense>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport registerServiceWorker from './registerServiceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nregisterServiceWorker();\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nexport default function register () {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = 'service-worker.js';\n      navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n          registration.onupdatefound = () => {\n            const installingWorker = registration.installing;\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a \"New content is\n                  // available; please refresh.\" message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // \"Content is cached for offline use.\" message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          };\n        })\n        .catch(error => {\n          console.error('Error during service worker registration:', error);\n        });\n    });\n  }\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","// export const API_ROOT = \"http://localhost:4000\";\nexport const API_ROOT = \"https://praca-inz-backend.herokuapp.com\";\nexport const STATIC_FILES_ROOT = API_ROOT + \"/uploads/\";\nexport const PROFILES_PAGE_SIZE = 5;\nexport const MESSAGES_PAGE_SIZE = 100;\nexport const MIN_COMPLETION_RATE = 0;\nexport const FALLBACK_AVATAR_URL = \"https://icon-library.net/images/default-user-icon/default-user-icon-8.jpg\";\n","import { Reducer } from 'redux'\nimport { AuthState, AuthActionTypes } from './types'\n\nexport const initialState: AuthState = {\n    currentUser: {\n        id: \"\",\n        avatar: \"\",\n        displayName: \"\",\n        email: \"\",\n        accountType: \"\",\n        profileId: \"\"\n    },\n    token: \"\",\n    isLoggingIn: false,\n    isRegistering: false,\n    isAuthenticated: false,\n    error: null\n}\n\nexport const authReducer: Reducer<AuthState> = (state = initialState, action) => {\n    switch (action.type) {\n        case AuthActionTypes.LOGOUT:\n            return {\n                ...state,\n                isAuthenticated: false,\n                currentUser: {\n                    id: \"\",\n                    avatar: \"\",\n                    displayName: \"\",\n                    email: \"\",\n                    accountType: \"\",\n                    profileId: \"\"\n                },\n                token: \"\"\n            }\n        case AuthActionTypes.LOGIN_REQUEST:\n            return {\n                ...state,\n                isLoggingIn: true\n            }\n        case AuthActionTypes.LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggingIn: false,\n                isAuthenticated: true,\n                currentUser: {\n                    id: action.payload.user.id,\n                    avatar: action.payload.user.avatar,\n                    displayName: action.payload.user.displayName,\n                    email: action.payload.user.email,\n                    accountType: action.payload.user.accountType,\n                    profileId: action.payload.user.profileId\n                },\n                token: action.payload.token\n            }\n        case AuthActionTypes.LOGIN_ERROR:\n            return {\n                ...state,\n                isLoggingIn: false,\n                error: action.payload\n            }\n        case AuthActionTypes.REGISTER_REQUEST:\n            return {\n                ...state,\n                isRegistering: true\n            }\n        case AuthActionTypes.REGISTER_SUCCESS:\n            return {\n                ...state,\n                isRegistering: false\n            }\n        case AuthActionTypes.REGISTER_ERROR:\n            return {\n                ...state,\n                isRegistering: false,\n                error: action.payload\n            }\n        case AuthActionTypes.AUTH_ERROR_RESET:\n            return {\n                ...state,\n                error: null\n            }\n        case AuthActionTypes.SET_CURRENT_USER:\n            return {\n                ...state,\n                currentUser: {\n                    ...state.currentUser,\n                    displayName: action.payload.displayName !== undefined ? action.payload.displayName : state.currentUser.displayName,\n                    avatar: action.payload.avatar !== undefined ? action.payload.avatar : state.currentUser.avatar\n                }\n            }\n        default: {\n            return state\n        }\n    }\n}\n","import { all, call, fork, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport { Auth } from '../../api';\nimport { loginRequest, loginSuccess, loginError, registerRequest, registerError, registerSuccess, logout } from './actions';\nimport { AuthActionTypes } from './types';\nimport { push } from 'connected-react-router'\n\nfunction* handleLogin(action: ReturnType<typeof loginRequest>) {\n    try {\n        const res = yield call(Auth.login, action.payload);\n        \n        if (res.error) {\n            yield put(loginError(res.error))\n        } else {\n            yield put(loginSuccess(res.data))\n            if(action.payload.from){\n                yield put(push(action.payload.from));\n            } else {\n                yield put(push(\"/\"));\n            }\n        }\n    } catch (err) {\n        console.log(err)\n        yield put(loginError(err))\n    }\n}\n\nfunction* handleRegister(action: ReturnType<typeof registerRequest>) {\n    try {\n        const res = yield call(Auth.register, action.payload);\n\n        if (res.error) {\n            yield put(registerError(res.error))\n        } else {\n            yield put(registerSuccess(res.data))\n        }\n    } catch (err) {\n        yield put(registerError(err))\n    }\n}\n\nfunction* handleLogout(action: ReturnType<typeof logout>) {\n    yield put(push(\"/\"));\n}\n\nfunction* watchLoginRequest() {\n    yield takeEvery(AuthActionTypes.LOGIN_REQUEST, handleLogin);\n}\n\nfunction* watchRegisterRequest() {\n    yield takeEvery(AuthActionTypes.REGISTER_REQUEST, handleRegister);\n}\n\nfunction* watchLogout() {\n    yield takeEvery(AuthActionTypes.LOGOUT, handleLogout);\n}\n\nfunction* authSaga() {\n    yield all([fork(watchLoginRequest), fork(watchRegisterRequest), fork(watchLogout)]);\n}\n\nexport default authSaga;","\nexport interface ChatState {\n\n}\n\nexport enum ChatActionTypes {\n    SEND_MESSAGE_REQUEST = \"@@chat/SEND_MESSAGE_REQUEST\",\n    SEND_MESSAGE_SUCCESS = \"@@chat/SEND_MESSAGE_SUCCESS\",\n    SEND_MESSAGE_ERROR = \"@@chat/SEND_MESSAGE_ERROR\",\n}","import { Reducer } from 'redux'\nimport { ChatState, ChatActionTypes } from './types'\n\nexport const initialState: ChatState = {\n\n}\n\nexport const chatReducer: Reducer<ChatState> = (state = initialState, action) => {\n    switch (action.type) {\n        case ChatActionTypes.SEND_MESSAGE_REQUEST:\n            return {\n                ...state,\n            }\n        case ChatActionTypes.SEND_MESSAGE_SUCCESS:\n            return {\n                ...state,\n            }\n        case ChatActionTypes.SEND_MESSAGE_ERROR:\n            return {\n                ...state\n            }\n        default: {\n            return state\n        }\n    }\n}","import { Reducer } from 'redux'\nimport { FiltersState, FiltersActionTypes } from './types'\n\nexport const initialState: FiltersState = {\n    city: \"All\",\n    services: [],\n    priceRange: {\n        min: 0,\n        max: 200\n    }\n}\n\nexport const filtersReducer: Reducer<FiltersState> = (state = initialState, action) => {\n    switch (action.type) {\n        case FiltersActionTypes.FILTER:\n            console.log(action.payload)\n            return {\n                ...state,\n                ...action.payload\n            }\n        default: {\n            return state\n        }\n    }\n}\n","import { Reducer } from 'redux'\nimport { SortingActionTypes, SortingState } from './types'\n\nexport const initialState: SortingState = {\n    sorting: \"POPULARITY_ASC\"\n}\n\nexport const sortingReducer: Reducer<SortingState> = (state = initialState, action) => {\n    switch (action.type) {\n        case SortingActionTypes.SORT:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default: {\n            return state\n        }\n    }\n}\n","import { createStore, applyMiddleware, combineReducers } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport createSagaMiddleware from 'redux-saga'\nimport { all, fork } from 'redux-saga/effects'\nimport { authReducer } from \"./auth/reducer\";\nimport authSaga from \"./auth/sagas\";\nimport { AuthState } from \"./auth/types\";\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { ChatState } from \"./chat/types\";\nimport { FiltersState } from \"./filters/types\";\nimport { SortingState } from \"./sorting/types\";\nimport { chatReducer } from \"./chat/reducer\";\nimport { filtersReducer } from \"./filters/reducer\";\nimport { sortingReducer } from \"./sorting/reducer\";\n\nexport const history = createBrowserHistory()\n\nexport interface ApplicationState {\n    auth: AuthState,\n    chat: ChatState,\n    filters: FiltersState,\n    sorting: SortingState\n}\n\nconst rootReducer = combineReducers({\n    router: connectRouter(history),\n    auth: authReducer,\n    chat: chatReducer,\n    filters: filtersReducer,\n    sorting: sortingReducer\n});\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: ['auth', 'filters', 'sorting']\n};\n\nconst loggerMiddleware = createLogger();\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n    persistedReducer,\n    composeWithDevTools(\n        applyMiddleware(routerMiddleware(history), loggerMiddleware, sagaMiddleware)\n    )\n);\n\nexport const persistor = persistStore(store);\n\nfunction* rootSaga() {\n    yield all([fork(authSaga)])\n}\n\nsagaMiddleware.run(rootSaga);\n","import { action } from \"typesafe-actions\";\nimport { AuthActionTypes } from \"./types\";\nimport { LoginProps, RegisterProps } from \"../../api\";\n\nexport const loginRequest = (data: LoginProps) => action(AuthActionTypes.LOGIN_REQUEST, data);\nexport const loginSuccess = (data: any) => action(AuthActionTypes.LOGIN_SUCCESS, data);\nexport const loginError = (error: any) => action(AuthActionTypes.LOGIN_ERROR, error);\n\nexport const registerRequest = (data: RegisterProps) => action(AuthActionTypes.REGISTER_REQUEST, data);\nexport const registerSuccess = (data: any) => action(AuthActionTypes.REGISTER_SUCCESS, data);\nexport const registerError = (error: any) => action(AuthActionTypes.REGISTER_ERROR, error);\n\nexport const resetAuthError = () => action(AuthActionTypes.AUTH_ERROR_RESET);\nexport const logout = () => action(AuthActionTypes.LOGOUT);\n\nexport const setCurrentUser = (data: any) => action(AuthActionTypes.SET_CURRENT_USER, data);\n","export const COLORS = {\n    white: \"#FFFFFF\",\n    black: \"#000000\",\n    gray: \"#E1E1E1\",\n    golden: \"#CD9843\",\n    lightgray: \"#EEEEEE\",\n    blue: \"#3b95f5\",\n    blue2: \"#00d1a4\",\n    darkblue: \"#277cd6\"\n};\n\nexport const BREAKPOINTS = {\n    sm: \"576px\",\n    md: \"768px\",\n    lg: \"992px\",\n    xl: \"1200px\"\n};\n\nexport const routerTransition = {\n    appear: 300,\n    enter: 500,\n    exit: 375\n}\n\nexport const NAV_HEIGHT = \"55px\";\nexport const NAV_MARGIN = \"0rem\";\nexport const NAV_HEADROOM = `calc(${NAV_HEIGHT + ' + ' + NAV_MARGIN})`\nexport const CONTAINER_FLUID_GUTTER_REM = 2;\n\n\nconst GUTTER_REM = 0.5;\nexport const GUTTER = (multiplier = 1) => {\n    return multiplier * GUTTER_REM + \"rem\";\n};","import React from \"react\";\n//@ts-ignore\nimport TopBarProgress from \"react-topbar-progress-indicator\";\n\nTopBarProgress.config({\n    barColors: {\n        \"0\": \"#3b95f5\",\n        \"1.0\": \"#00d1a4\"\n    },\n    shadowColor: \"#0b05f5\"\n});\n\n\nconst BarLoader = () => {\n    return <TopBarProgress />;\n};\n\nexport default BarLoader;","import axios from \"axios\";\nimport { API_ROOT, PROFILES_PAGE_SIZE } from \"./constants/config\";\nimport { store, history } from \"./store/index\";\nimport { AuthActionTypes } from \"./store/auth/types\";\nimport io from \"socket.io-client\";\n\nlet socket = io.connect(API_ROOT);\n\nsocket.on(\"SET_ID\", (id: string) => {\n    localStorage.setItem(\"SOCKET_ID\", id);\n    requests.get(\"/\")\n});\n\naxios.interceptors.request.use(\n    config => {\n        let socketid: string = localStorage.getItem(\"SOCKET_ID\") || '';\n        config.headers.socketid = socketid;\n\n        const token = store.getState().auth.token;\n        if (token) {\n            config.headers.Authorization = `Bearer ${token}`;\n        }\n        return config;\n    },\n    error => {\n        return Promise.reject(error);\n    }\n);\n\naxios.interceptors.response.use(\n    response => {\n        return response;\n    },\n    error => {\n        if (error.response && error.response.status === 401) {\n            if (history.location.pathname !== \"/login\") {\n                store.dispatch({ type: AuthActionTypes.LOGOUT });\n                history.push({\n                    pathname: \"/login\",\n                    state: {\n                        from: history.location.pathname,\n                        showLoginFirstMessage: true\n                    }\n                });\n            }\n        }\n        return Promise.reject(error.response);\n    }\n);\n\nwindow.addEventListener('online', () => console.log('came online'));\nwindow.addEventListener('offline', () => console.log('came offline'));\n\n\nconst requests = {\n    get: (url: string, config?: any) => axios.get(`${API_ROOT}${url}`, config),\n    post: (url: string, body: any, config?: any) => axios.post(`${API_ROOT}${url}`, body, config),\n    put: (url: string, body: any, config?: any) => axios.put(`${API_ROOT}${url}`, body, config),\n    patch: (url: string, body: any, config?: any) => axios.patch(`${API_ROOT}${url}`, body, config),\n    delete: (url: string, config?: any) => axios.delete(`${API_ROOT}${url}`, config)\n};\n\nconst Auth = {\n    register: (data: RegisterProps) => requests.post(\"/auth/register\", data),\n    login: (props: LoginProps) => {\n        if (props.loginType === LoginTypes.local) {\n            return requests.post(\"/auth/login\", props.data);\n        } else if (props.loginType === LoginTypes.facebook) {\n            console.log(props.data)\n            return requests.post(\"/auth/facebookToken\", props.data);\n        }\n    }\n};\n\nexport enum LoginTypes {\n    local = \"LOCAL\",\n    facebook = \"FACEBOOK\"\n}\n\nexport enum MessageTypes {\n    text = \"text\",\n    file = \"file\"\n}\n\nexport interface LoginProps {\n    data: {\n        email: string,\n        password: string\n    } | {\n        access_token: string\n    },\n    loginType: LoginTypes,\n    from?: string\n}\n\nexport interface RegisterProps {\n    email: string,\n    password: string,\n    displayName: string,\n    accountType: string\n}\n\n\nconst Chat = {\n    sendMessage: (data: SendMessageProps) => {\n        if (data.messageType === MessageTypes.file) {\n            let fd = new FormData();\n            fd.append('file', data.file);\n            fd.set('conversationId', data.conversationId);\n            fd.set('text', data.text);\n            fd.set('messageType', data.messageType);\n            // fd.set('newConversation', data.newConversation || false);\n            return requests.post(\"/upload/file\", fd, { headers: { 'Content-Type': 'multipart/form-data' } })\n        } else {\n            return requests.post(\"/chat/send\", data)\n        }\n    },\n    getConversations: () => requests.get(\"/chat/conversations\"),\n    getMessages: (data: GetMessagesProps) => requests.get(\"/chat/conversations/\" + encodeURIComponent(data.conversationId) + \"?qty=\" + encodeURIComponent(data.qty) + \"&offset=\" + encodeURIComponent(data.offset)),\n    getFile: (id: string) => requests.get(\"/upload/file/\" + id, {\n        responseType: 'blob'\n    }),\n}\n\nexport interface SendMessageProps {\n    conversationId: string,\n    text: string,\n    file: any,\n    messageType: MessageTypes,\n    newConversation?: boolean,\n    newConversationUserId?: string\n}\n\nexport interface GetMessagesProps {\n    conversationId: string,\n    qty: number,\n    offset: number\n}\n\nexport interface AddPriceListElementProps {\n    profileId: string,\n    price: string,\n    elementName: string\n}\n\nexport interface AddImageProps {\n    profileId: string,\n    file: any,\n}\n\nexport interface UploadAvatarProps {\n    file: any\n}\n\nexport interface UpdateProfileDataProps {\n    descr?: string,\n    city?: string,\n}\n\nconst Profile = {\n    getProfiles: (alreadyFetched: number = 0, filters: any = {}) => {\n        let filterQuery = encodeURIComponent(JSON.stringify(filters))\n        return requests.get(\n            `/profile?already_fetched=${alreadyFetched}&filters=${filterQuery}&batch_size=${PROFILES_PAGE_SIZE}`\n        );\n    },\n    getProfile: (id: string) => requests.get(`/profile/${id}`),\n    addPriceListElement: (data: AddPriceListElementProps) => requests.post('/profile/price-list-element', data),\n    deletePriceListElement: (id: string) => requests.delete(`/profile/price-list-element/${id}`),\n    addImage: (data: AddImageProps) => {\n        let fd = new FormData();\n        fd.append('file', data.file);\n        fd.set('profileId', data.profileId);\n        return requests.post(\"/upload/image\", fd, { headers: { 'Content-Type': 'multipart/form-data' } })\n    },\n    deleteImage: (imageId: string) => requests.delete('/profile/image/' + imageId),\n    uploadAvatar: (data: UploadAvatarProps) => {\n        let fd = new FormData();\n        fd.append('file', data.file);\n        return requests.post(\"/upload/avatar\", fd, { headers: { 'Content-Type': 'multipart/form-data' } })\n    },\n    resetAvatar: () => requests.get('/profile/avatar-reset'),\n    updateProfileData: (data: UpdateProfileDataProps, id: string) => requests.put('/profile/' + id, data),\n    updateUserData: (data: any) => requests.put(\"/profile/user\", data),\n    addReview: (data: any) => requests.post(\"/profile/review\", data),\n    search: (phrase: string) => requests.get('/profile/search/' + phrase),\n    count: () => requests.get(\"/profile/count\"),\n    mostRecent: () => requests.get(\"/profile/most-recent\"),\n    getReport: (days: number, profileId: string) => requests.get(\"/profile/report?profile=\" + profileId + \"&days=\" + days),\n    getUser: (id: string) => requests.get(\"/user/\" + id)\n};\n\nconst Patient = {\n    getPatients: () => requests.get(\"/patient\"),\n    getPatient: (id: string) => requests.get(\"/patient/\" + id),\n    addPatient: (data: any) => requests.post(\"/patient\", data),\n    addNote: (data: any) => requests.post(\"/patient/note\", data),\n    deleteNote: (id: string) => requests.delete(\"/patient/note/\" + id),\n    getNotes: (patientId?: string) => requests.get(\"/patient/note\" + (patientId ? (\"/\" + patientId) : \"\")),\n    getDataSets: (patientId: string) => requests.get(\"/patient/data-set/\" + patientId),\n    addDataSet: (patientId: string, data: any) => requests.post(\"/patient/data-set/\" + patientId, data),\n    removeDataSet: (dataSetId: string) => requests.delete(\"/patient/data-set/\" + dataSetId),\n    addDataValue: (data: any) => requests.post(\"/patient/data-value\", data),\n    deleteDataValue: (id: string) => requests.delete(\"/patient/data-value/\" + id)\n}\n\nexport { socket, Auth, Chat, Profile, Patient };","import styled from 'styled-components';\n\nconst AVATAR_SIZE = \"30px\";\n\ninterface Props {\n    isFull?: boolean,\n}\n\nexport const AvatarWrapper = styled.div<Props>`\n    width: ${props => (props.isFull ? \"100%\": AVATAR_SIZE)};\n    height: ${props => (props.isFull ? \"100%\": AVATAR_SIZE)};\n    border-radius: ${props => (props.isFull ? \"0px\": AVATAR_SIZE)};\n    border: 1px solid #ccc;\n`\n\nexport const AvatarImage = styled.img<Props>`\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    background-size: contain;\n    border-radius: ${props => (props.isFull ? \"0px\": AVATAR_SIZE)};\n`","import React from \"react\";\nimport { AvatarWrapper, AvatarImage } from \"./Avatar.styled\";\nimport { FALLBACK_AVATAR_URL, STATIC_FILES_ROOT } from \"../../constants/config\";\n\ntype Props = {\n    url?: string;\n    isFull?: boolean;\n};\n\nconst Avatar = (props: Props) => {\n    let url: any = props.url || \"\";\n    if (!url) {\n        url = FALLBACK_AVATAR_URL;\n    } else if (url.includes(\"http\")) {\n        url = props.url;\n    } else {\n        url = STATIC_FILES_ROOT + props.url;\n    }\n\n    return (\n        <AvatarWrapper isFull={props.isFull}>\n            <AvatarImage src={url} isFull={props.isFull}></AvatarImage>\n        </AvatarWrapper>\n    );\n};\n\nexport default Avatar;\n","import styled from \"styled-components\";\nimport { BREAKPOINTS, CONTAINER_FLUID_GUTTER_REM } from \"../../styles/variables\";\n\ntype Props = {\n    maxheight?: boolean\n}\n\nexport const ContainerFluid = styled.div<Props>`\n    display: block;\n    padding-left: ${8 * CONTAINER_FLUID_GUTTER_REM}rem;\n    padding-right: ${8 * CONTAINER_FLUID_GUTTER_REM}rem;\n    @media (max-width: ${BREAKPOINTS.xl}) {\n        padding-right: ${6 * CONTAINER_FLUID_GUTTER_REM}rem;\n        padding-left: ${6 * CONTAINER_FLUID_GUTTER_REM}rem;\n    }\n    @media (max-width: ${BREAKPOINTS.lg}) {\n        padding-right: ${4 * CONTAINER_FLUID_GUTTER_REM}rem;\n        padding-left: ${4 * CONTAINER_FLUID_GUTTER_REM}rem;\n    }\n    @media (max-width: ${BREAKPOINTS.md}) {\n        padding-right: ${2 * CONTAINER_FLUID_GUTTER_REM}rem;\n        padding-left: ${2 * CONTAINER_FLUID_GUTTER_REM}rem;\n    }\n    @media (max-width: ${BREAKPOINTS.sm}) {\n        padding-right: ${CONTAINER_FLUID_GUTTER_REM}rem;\n        padding-left: ${CONTAINER_FLUID_GUTTER_REM}rem;\n    }\n    \n    ${({ maxheight }) =>\n        maxheight &&\n        `\n            height: 100%\n        `}\n\n    width: 100%;\n    max-width: 100vw;\n`;","export enum FiltersActionTypes {\n    FILTER = \"@@filters/filter\"\n}\n\nexport interface FiltersState {\n    readonly city: string,\n    readonly services: string[],\n    readonly priceRange: {\n        readonly min: number,\n        readonly max: number\n    }\n}\n","export enum SortingActionTypes {\n    SORT = \"@@sorting/sort\"\n}\n\nexport interface SortingState {\n    readonly sorting: string;\n}"],"sourceRoot":""}