{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","views/Home/Home.styled.ts","components/Notes/Note/Note.styled.ts","views/Profile/Profile.styled.ts","views/Dashboard/Dashboard.styled.ts","components/Notes/Note/Note.tsx","components/Notes/NoteForm/NoteForm.styled.ts","components/Notes/NoteForm/NoteForm.tsx","views/PatientDetails/PatientDetails.styled.ts","components/PatientData/AddDataSet/AddDataSet.styled.ts","components/PatientData/AddDataSet/AddDataSet.tsx","components/PatientData/AddData/AddData.styled.ts","components/PatientData/AddData/AddData.tsx","views/PatientDetails/PatientDetails.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","HomePageStyled","HomeInner","HomeHero","NAV_HEADROOM","HomeTitle","HomeText","SearchInputWrapper","ScrollButton","HashLink","InfoSection","InfoCard","InfoCardIcon","InfoCardText","PopularProfiles","PopularProfilesInner","SectionTitle","PopularProfilesCard","PopularProfilesCardName","PopularProfilesCardCity","black","LogSection","NoteStyled","DateBadge","Content","DeleteButton","p","Container","ProfileStyled","ContactButton","Link","MainWrapper","AvatarImage","GeneralInfo","Name","City","Description","MainRating","ProfileSection","ElementMissingInfo","Info","DashboardStyled","DashboardStyledInner","NotesList","PatientList","PatientCard","NotesAndPatientsContainer","AddPatientButton","Note","props","moment","utc","createdAt","local","format","onClick","id","Patient","deleteNote","then","res","onNoteDelete","catch","err","console","log","content","NoteFormStyled","NoteForm","initialValues","onSubmit","values","setFieldValue","addNote","patientId","onNoteAdd","data","note","render","htmlFor","name","placeholder","type","PatientDetailsStyled","PatientDetailsStyledInner","PatientInfo","ImageWrapper","PatientInfoInner","UserExistInfo","UserDoesNotExistInfo","Age","Gender","TherapyGoal","DataSetWrapper","DataSetInner","DeleteDataSet","DataSetsContainer","DataSetTableWrapper","DataSetChartWrapper","DataSetFormWrapper","Table","table","StyledTr","tr","StyledTh","th","StyledTd","td","DataSetInfo","DataSetDescription","DataSetTitle","DataSetUnit","AddDataSetStyled","AddDataSet","title","descr","unit","dataType","addDataSet","onDataSetAdd","dataSet","AddDataStyled","addDataValidationSchema","Yup","shape","dataValue","typeError","required","AddData","dateValue","validationSchema","setFieldError","resetForm","setValues","isValid","NaN","toDate","getTime","addDataValue","dataSetId","onDataValueAdd","patientData","component","PatientDetails","useState","isPatientFetching","setPatientFetching","patient","setPatient","isDataSetsFetching","setDataSetsFetching","dataSets","setDataSets","addDataSetShown","setDataSetShown","notes","setNotes","isNotesFetching","setNotesFetching","useEffect","getPatient","match","params","finally","getNotes","getDataSets","map","ds","dataValues","dv","dateValueString","forEach","sort","a","b","filter","e","Fragment","userAccount","to","pathname","state","newConversationUserId","Avatar","isFull","firstName","lastName","age","gender","therapyGoal","index","key","removeDataSet","dsCopy","JSON","parse","stringify","splice","findIndex","deleteDataValue","find","i","push","width","height","margin","top","right","left","bottom","dataKey"],"mappings":"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","file":"static/js/13.fd7e5fcd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Field, ErrorMessage } from \"formik\";\r\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\r\n\r\nexport const InfoBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border-radius: 5px;\r\n    font-size: 1.4rem;\r\n    background: #fff87d;\r\n`;\r\n\r\nexport const ErrorBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    font-size: 1.4rem;\r\n    border-radius: 5px;\r\n    color: white;\r\n    background: #ff4230;\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem;\r\n    font-size: 1.5rem;\r\n    width: 50%;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        padding: 1rem;\r\n        width: 80%;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        padding: 1rem;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nexport const FormGroup2 = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1rem;\r\n`\r\n\r\nexport const FieldStyled = styled(Field)`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    transition: all 0.2s;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border: 1px solid ${COLORS.blue};\r\n        box-shadow: 0 0 5px ${COLORS.blue};\r\n    }\r\n\r\n    &[type=\"radio\"] {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n        cursor: pointer;\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n    }\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled(ErrorMessage)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    color: red;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n    box-sizing: border-box;\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\ntype SubmitButtonProps = {\r\n    light?: boolean\r\n}\r\n\r\nexport const SubmitButton = styled.button<SubmitButtonProps>`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${COLORS.blue};\r\n    border-radius: 5px;\r\n    transition: background 0.2s;\r\n\r\n    :hover {\r\n        background: ${COLORS.darkblue};\r\n    }\r\n\r\n    ${({ light }) =>\r\n        light && `\r\n            background: #226aff;\r\n            :hover {\r\n                background: #042bfc;\r\n            }\r\n        `\r\n    }\r\n`;\r\n\r\nexport const FormInfo = styled.div`\r\n    width: 100%;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    \r\n`\r\nexport const FormInfoContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    padding-bottom: 1rem;\r\n`","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 64px;\r\n    height: 64px;\r\n    z-index: 1000;\r\n    div {\r\n        position: absolute;\r\n        top: 27px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        background: ${COLORS.blue};\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from \"react\";\r\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LoaderStyled>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </LoaderStyled>\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\"\r\nimport { NAV_HEADROOM, COLORS, BREAKPOINTS } from \"../../styles/variables\"\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nexport const HomePageStyled = styled.div`\r\n    \r\n`\r\n\r\nexport const HomeInner = styled.div`\r\n    width: 100%;\r\n`\r\n\r\nexport const HomeHero = styled.div`\r\n    min-height: calc(100vh - ${NAV_HEADROOM});\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    width: 100%;\r\n    position: relative;\r\n`\r\n\r\nexport const HomeTitle = styled.div`\r\n    font-weight: bold;\r\n    font-size: 5rem;\r\n    line-height: 5rem;\r\n    margin-bottom: 2.5rem;\r\n    color: ${COLORS.blue};\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const HomeText = styled.div`\r\n    font-size: 2.6rem;\r\n    margin-bottom: 2.5rem;\r\n`\r\n\r\nexport const LoggedInBadge = styled.span`\r\n\r\n`\r\n\r\nexport const SearchInputWrapper = styled.div`\r\n    width: 40%;\r\n    padding-bottom: ${NAV_HEADROOM};\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        width: 75%;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const ScrollButton = styled(HashLink)`\r\n    position: absolute;\r\n    bottom: 2rem;\r\n    left: 50%;\r\n    color: ${COLORS.blue};\r\n    cursor: pointer;\r\n    font-size: 4rem;\r\n    outline: none;\r\n`\r\n\r\nexport const InfoSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 1rem;\r\n    padding: 2rem 0;\r\n    border-top: 1px solid #ddd;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nexport const InfoCard = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    border: 2px solid ${COLORS.blue};\r\n    border-radius: 1rem;\r\n`\r\n\r\nexport const InfoCardIcon = styled.div`\r\n    color: ${COLORS.blue};\r\n    font-size: 5rem;\r\n    padding-bottom: 1.5rem;\r\n`\r\n\r\nexport const InfoCardText = styled.div`\r\n    width: 100%;\r\n    text-align: justify;\r\n`\r\n\r\nexport const PopularProfiles = styled.div`\r\n    padding: 2rem 0;\r\n    border-top: 1px solid #ddd;\r\n    position: relative;\r\n`\r\n\r\nexport const PopularProfilesInner = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: 1rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    \r\n`\r\n\r\nexport const SectionTitle = styled.div`\r\n    color: ${COLORS.darkblue};\r\n    padding: 1rem 0;\r\n    padding-left: 1rem;\r\n    font-size: 2rem;\r\n`\r\n\r\nexport const PopularProfilesCard = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    border: 2px solid ${COLORS.blue};\r\n    border-radius: 1rem;\r\n`\r\n\r\nexport const PopularProfilesCardName = styled.div`\r\n    color: ${COLORS.blue};\r\n    font-size: 2.2rem;\r\n    padding: 1rem 0;\r\n`\r\n\r\nexport const PopularProfilesCardCity = styled.div`\r\n    color: ${COLORS.black};\r\n    font-size: 1.4rem;\r\n    padding-bottom: 1rem;\r\n`\r\n\r\nexport const LogSection = styled.div`\r\n    padding: 2rem 0;\r\n    border-top: 1px solid #ddd;\r\n`\r\n","import styled from 'styled-components'\r\n\r\nexport const NoteStyled = styled.div`\r\n    border: 1px solid #ddd;\r\n    padding: 0.5rem;\r\n    position: relative;\r\n    margin-bottom: 0.5rem;\r\n    :hover {\r\n        background: #f3f3f3;\r\n    }\r\n`\r\n\r\nexport const DateBadge = styled.div`\r\n    font-size: 1.2rem;\r\n    color: #333;\r\n`\r\n\r\nexport const Content = styled.div`\r\n    font-size: 1.6rem;\r\n`\r\n\r\nexport const DeleteButton = styled.p`\r\n    font-size: 12px;\r\n    border: none;\r\n    background: #d11;\r\n    color: white;\r\n    border-radius: 6px;\r\n    font-weight: bold;\r\n    width: 2.4rem;\r\n    height: 2.4rem;\r\n    cursor: pointer;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    display: inline-block;\r\n    padding-bottom: 1rem;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n    border-bottom: 1px solid #ddd;\r\n`","import styled from 'styled-components'\r\nimport { COLORS } from '../../styles/variables'\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const ProfileStyled = styled.div`\r\n    padding-top: 1rem;\r\n`\r\n\r\nexport const AlertStyled = styled.div`\r\n    padding: 1rem;\r\n    border-radius: 5px;\r\n`\r\n\r\nexport const ContactButton = styled(Link)`\r\n    text-decoration: none !important;\r\n    border: 2px solid ${COLORS.blue};\r\n    color: white !important;\r\n    background: ${COLORS.blue};\r\n    border-radius: 4px;\r\n    padding: 0.5rem;\r\n    display: inline-block;\r\n    width: 100px;\r\n    text-align: center;\r\n`\r\n\r\nexport const MainWrapper = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 120px 1fr 1fr;\r\n`\r\n\r\nexport const AvatarImage = styled.div`\r\n`\r\n\r\nexport const GeneralInfo = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    justify-content: space-between;\r\n`\r\n\r\nexport const Name = styled.span`\r\n\r\n`\r\n\r\nexport const City = styled.span`\r\n\r\n`\r\n\r\nexport const Description = styled.div`\r\n\r\n`\r\n\r\nexport const MainRating = styled.div`\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: flex-start;\r\n`\r\n\r\nexport const ProfileMain = styled.div`\r\n\r\n`\r\n\r\nexport const ProfileGallery = styled.div`\r\n\r\n`\r\n\r\nexport const ProfileSection = styled.div`\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    background: white;\r\n    padding: 1rem;\r\n    margin-bottom: 0.5rem;\r\n    position: relative;\r\n`\r\nexport const ElementMissingInfo = styled.div`\r\n\r\n`\r\n\r\nexport const Info = styled.span`\r\n    color: ${COLORS.blue};\r\n    font-size: 2rem;\r\n    font-weight: bold;\r\n    border-bottom: 1px solid #eee;\r\n    width: 100%;\r\n    margin-bottom: 0.5rem;\r\n    padding-bottom: 0.3rem;\r\n    display: block;\r\n`","import styled from 'styled-components'\r\nimport { BREAKPOINTS, COLORS } from '../../styles/variables'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const DashboardStyled = styled.div`\r\n    min-height: 100vh;\r\n    position: relative;\r\n`\r\n\r\nexport const DashboardStyledInner = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-top: 1rem;\r\n`\r\n\r\nexport const NotesList = styled.div`\r\n    border: 1px solid #eee;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n`\r\n\r\nexport const PatientList = styled.div`\r\n    border: 1px solid #eee;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n    width: 100%;\r\n`\r\n\r\nexport const PatientCard = styled.div`\r\n    border: 1px solid #ddd;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n    margin-bottom: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n\r\n    :hover {\r\n        background: #f3f3f3;\r\n    }\r\n`\r\n\r\nexport const NotesAndPatientsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 0.5rem;\r\n    border: 1px solid #ccc;\r\n    padding: 0.5rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n        padding: 0;\r\n    }\r\n`\r\n\r\nexport const Container = styled.div`\r\n    border: 1px solid #ccc;\r\n    padding: 0.5rem;\r\n`\r\n\r\nexport const AddPatientButton = styled(Link)`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${COLORS.blue};\r\n    border-radius: 5px;\r\n    transition: background 0.2s;\r\n    text-decoration: none;\r\n    display: block;\r\n    text-align: center;\r\n    margin: 0.5rem 0;\r\n    font-size: 1.4rem;\r\n\r\n    :hover {\r\n        background: ${COLORS.darkblue};\r\n    }\r\n`","import React from \"react\";\r\nimport { NoteStyled, DateBadge, Content, DeleteButton, Container } from \"./Note.styled\";\r\nimport { Patient } from \"../../../api\";\r\nimport moment from \"moment\";\r\n\r\ntype Props = {\r\n    createdAt: any;\r\n    content: string;\r\n    onNoteDelete: (id: string) => void;\r\n    id: string;\r\n};\r\n\r\nconst Note = (props: Props) => {\r\n    const onDelete = (id: string) => {\r\n        Patient.deleteNote(id)\r\n            .then(res => {\r\n                props.onNoteDelete(id);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <NoteStyled>\r\n            <Container>\r\n                <DateBadge>{moment.utc(props.createdAt).local().format(\"DD-MM-YYYY HH:mm\")}</DateBadge>\r\n                <DeleteButton onClick={() => onDelete(props.id)}>x</DeleteButton>\r\n            </Container>\r\n\r\n            <Content>{props.content}</Content>\r\n        </NoteStyled>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import styled from 'styled-components'\r\nimport { Form } from 'formik'\r\n\r\nexport const NoteFormStyled = styled(Form)`\r\n\r\n`","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { NoteFormStyled } from \"./NoteForm.styled\";\r\nimport { SubmitButton, FormGroup, LabelStyled, FieldStyled } from \"../../SharedStyledComponents/Form.styled\";\r\nimport { Patient } from \"../../../api\";\r\n\r\ntype Props = {\r\n    patientId?: string;\r\n    onNoteAdd: (note: any) => void;\r\n};\r\n\r\nconst NoteForm = (props: Props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                content: \"\"\r\n            }}\r\n            onSubmit={(values, { setFieldValue }) => {\r\n                console.log(values);\r\n                Patient.addNote({\r\n                    ...values,\r\n                    patientId: props.patientId\r\n                })\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        props.onNoteAdd(res.data.note);\r\n                        setFieldValue(\"content\", \"\");\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n            }}\r\n            render={() => (\r\n                <NoteFormStyled>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"content\">Notatka</LabelStyled>\r\n                        <FieldStyled name=\"content\" placeholder=\"Notatka...\" id=\"content\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <SubmitButton type=\"submit\">Dodaj notatkę</SubmitButton>\r\n                    </FormGroup>\r\n                </NoteFormStyled>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default NoteForm;\r\n","import styled from 'styled-components';\r\nimport { BREAKPOINTS } from '../../styles/variables';\r\n\r\nexport const PatientDetailsStyled = styled.div`\r\n\r\n`\r\n\r\nexport const PatientDetailsStyledInner = styled.div`\r\n\r\n`\r\n\r\nexport const PageTitle = styled.div`\r\n    font-weight: bold;\r\n`\r\n\r\nexport const PatientInfo = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    width: 100%;\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n    margin: 1rem 0;\r\n`\r\n\r\nexport const ImageWrapper = styled.div`\r\n    width: 16rem;\r\n    height: 16rem;\r\n`\r\n\r\nexport const PatientInfoInner = styled.div`\r\n    height: 16rem;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n`\r\n\r\nexport const InfoBadge = styled.div`\r\n    padding: 0.5rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 6px;\r\n`\r\n\r\nexport const UserExistInfo = styled.div`\r\n\r\n`\r\n\r\nexport const UserDoesNotExistInfo = styled.div`\r\n\r\n`\r\n\r\nexport const Age = styled.div`\r\n\r\n`\r\n\r\nexport const Gender = styled.div`\r\n\r\n`\r\n\r\nexport const TherapyGoal = styled.div`\r\n\r\n`\r\n\r\nexport const DataSetWrapper = styled.div`\r\n    border: 1px solid #ccc;\r\n    border-radius: 6px;\r\n    padding: 1rem;\r\n    margin-bottom: 0.5rem;\r\n`\r\n\r\nexport const DataSetInner = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 2fr;\r\n    grid-gap: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n        padding: 0;\r\n    }\r\n    \r\n`\r\n\r\nexport const DeleteDataSet = styled.div`\r\n    color: red;\r\n    cursor: pointer;\r\n`\r\n\r\nexport const DataSetsContainer = styled.div`\r\n    border: 1px solid #ddd;\r\n    padding: 1rem;\r\n`\r\n\r\nexport const DataSetTableWrapper = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    border: 1px solid #eee;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n    max-height: 350px;\r\n    overflow-y: scroll;\r\n`\r\n\r\nexport const DataSetChartWrapper = styled.div`\r\n    border: 1px solid #eee;\r\n    height: 350px;\r\n    border-radius: 6px;\r\n`\r\n\r\nexport const DataSetFormWrapper = styled.div`\r\n    border-top: 1px solid #ccc;\r\n`\r\n\r\nexport const Table = styled.table`\r\n    width: 100%;\r\n    border-bottom: 1px soid #ccc;\r\n`\r\n\r\nexport const StyledTr = styled.tr`\r\n    border-bottom: 1px soid #ccc;\r\n`\r\n\r\nexport const StyledTh = styled.th`\r\n    border: 2px solid #eee;\r\n`\r\n\r\nexport const StyledTd = styled.td`\r\n    padding: 0.2rem;\r\n    font-size: 1.2rem;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n`\r\n\r\nexport const DataSetInfo = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    padding: 2rem;\r\n    grid-gap: 0.5rem;\r\n    border: 1px solid #ccc;\r\n    margin-bottom: 1rem;\r\n    border-radius: 6px;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n        padding: 0;\r\n    }\r\n`\r\n\r\nexport const DataSetDescription = styled.div`\r\n\r\n`\r\n\r\nexport const DataSetTitle = styled.div`\r\n    font-weight: bold;\r\n    font-size: 2rem;\r\n`\r\n\r\nexport const DataSetUnit = styled.div`\r\n\r\n`\r\n","import styled from 'styled-components';\r\nimport { Form } from 'formik';\r\n\r\nexport const AddDataSetStyled = styled(Form)`\r\n\r\n`","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { AddDataSetStyled } from \"./AddDataSet.styled\";\r\nimport { SubmitButton, FormGroup, LabelStyled, FieldStyled } from \"../../SharedStyledComponents/Form.styled\";\r\nimport { Patient } from \"../../../api\";\r\n\r\ntype Props = {\r\n    patientId: string;\r\n    onDataSetAdd: (note: any) => void;\r\n};\r\n\r\nconst AddDataSet = (props: Props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                title: \"\",\r\n                descr: \"\",\r\n                unit: \"\",\r\n                dataType: \"\"\r\n            }}\r\n            onSubmit={values => {\r\n                console.log(values);\r\n                Patient.addDataSet(props.patientId, {\r\n                    ...values\r\n                })\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        props.onDataSetAdd(res.data.dataSet);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n            }}\r\n            render={() => (\r\n                <AddDataSetStyled>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"title\">Tytuł</LabelStyled>\r\n                        <FieldStyled name=\"title\" placeholder=\"Tytuł...\" id=\"title\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"descr\">Opis</LabelStyled>\r\n                        <FieldStyled name=\"descr\" placeholder=\"Opis...\" id=\"descr\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"unit\">Jednostka</LabelStyled>\r\n                        <FieldStyled name=\"unit\" placeholder=\"Jednostka...\" id=\"unit\" />\r\n                    </FormGroup>\r\n                    {/* <FormGroup>\r\n                        <LabelStyled htmlFor=\"dataType\">Typ danych</LabelStyled>\r\n                        <FieldStyled name=\"dataType\" placeholder=\"Typ danych...\" id=\"dataType\" />\r\n                    </FormGroup> */}\r\n\r\n                    <SubmitButton type=\"submit\">Dodaj zbiór danych</SubmitButton>\r\n                </AddDataSetStyled>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AddDataSet;\r\n","import styled from 'styled-components'\r\nimport { Form } from 'formik'\r\n\r\nexport const AddDataStyled = styled(Form)`\r\n\r\n`","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { AddDataStyled } from \"./AddData.styled\";\r\nimport { SubmitButton, FormGroup, LabelStyled, FieldStyled, ErrorMessageStyled } from \"../../SharedStyledComponents/Form.styled\";\r\nimport { Patient } from \"../../../api\";\r\nimport * as Yup from \"yup\";\r\nimport moment from \"moment\";\r\n\r\nconst addDataValidationSchema = Yup.object().shape({\r\n    dataValue: Yup.number()\r\n        .typeError(\"Wartość musi być liczbą\")\r\n        .required(\"Wartość jest wymagana\")\r\n});\r\n\r\ntype Props = {\r\n    dataSetId: string;\r\n    onDataValueAdd: (note: any) => void;\r\n};\r\n\r\nconst AddData = (props: Props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                dataValue: \"\",\r\n                dateValue: moment().format(\"DD-MM-YYYY HH:mm\")\r\n            }}\r\n            validationSchema={addDataValidationSchema}\r\n            onSubmit={(values, { setFieldError, setValues, resetForm }) => {\r\n                console.log(values);\r\n                let dateValue = moment(values.dateValue, \"DD-MM-YYYY HH:mm\", true);\r\n                if (!dateValue.isValid() || dateValue.toDate().getTime() === NaN) {\r\n                    setFieldError(\"dateValue\", \"Niepoprawny format daty\");\r\n                    return;\r\n                }\r\n                Patient.addDataValue({\r\n                    dataSetId: props.dataSetId,\r\n                    dataValue: values.dataValue,\r\n                    dateValue: moment(dateValue.toDate().getTime())\r\n                })\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        props.onDataValueAdd(res.data.patientData);\r\n                        resetForm();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n            }}\r\n            render={() => (\r\n                <AddDataStyled>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"dataValue\">Wartość</LabelStyled>\r\n                        <FieldStyled name=\"dataValue\" placeholder=\"Wartość...\" id=\"dataValue\" />\r\n                        <ErrorMessageStyled name=\"dataValue\" component=\"div\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"dateValue\">Data (DD-MM-YYYY HH:mm)</LabelStyled>\r\n                        <FieldStyled name=\"dateValue\" placeholder=\"Data...\" id=\"dateValue\" />\r\n                        <ErrorMessageStyled name=\"dateValue\" component=\"div\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <SubmitButton type=\"submit\">Dodaj dane do zbioru</SubmitButton>\r\n                    </FormGroup>\r\n                </AddDataStyled>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default AddData;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    PatientDetailsStyled,\r\n    PatientDetailsStyledInner,\r\n    PageTitle,\r\n    PatientInfoInner,\r\n    PatientInfo,\r\n    Age,\r\n    Gender,\r\n    ImageWrapper,\r\n    InfoBadge,\r\n    UserExistInfo,\r\n    UserDoesNotExistInfo,\r\n    DataSetsContainer,\r\n    DataSetWrapper,\r\n    DataSetTableWrapper,\r\n    DataSetChartWrapper,\r\n    DataSetFormWrapper,\r\n    DataSetInner,\r\n    Table,\r\n    StyledTh,\r\n    StyledTr,\r\n    StyledTd,\r\n    DataSetInfo,\r\n    DataSetTitle,\r\n    DataSetDescription,\r\n    DataSetUnit,\r\n    DeleteDataSet,\r\n    TherapyGoal\r\n} from \"./PatientDetails.styled\";\r\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\r\nimport { Patient } from \"../../api\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Avatar from \"../../components/Avatar/Avatar\";\r\nimport { Name, ContactButton } from \"../Profile/Profile.styled\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport AddDataSet from \"../../components/PatientData/AddDataSet/AddDataSet\";\r\nimport AddData from \"../../components/PatientData/AddData/AddData\";\r\nimport moment from \"moment\";\r\nimport { DeleteButton } from \"../../components/Notes/Note/Note.styled\";\r\nimport { ResponsiveContainer, LineChart, Line, XAxis, YAxis } from \"recharts\";\r\nimport { SectionTitle } from \"../Home/Home.styled\";\r\nimport { Container, NotesAndPatientsContainer, NotesList } from \"../Dashboard/Dashboard.styled\";\r\nimport { SubmitButton } from \"../../components/SharedStyledComponents/Form.styled\";\r\nimport { LinkStyled } from \"../../components/Navbar/Navbar.styled\";\r\nimport Note from \"../../components/Notes/Note/Note\";\r\nimport NoteForm from \"../../components/Notes/NoteForm/NoteForm\";\r\n\r\ninterface MatchParams {\r\n    id: string;\r\n}\r\n\r\ntype Props = RouteComponentProps<MatchParams> & {};\r\n\r\nconst PatientDetails = (props: Props) => {\r\n    const [isPatientFetching, setPatientFetching] = useState(true);\r\n    const [patient, setPatient] = useState();\r\n\r\n    const [isDataSetsFetching, setDataSetsFetching] = useState(true);\r\n    const [dataSets, setDataSets] = useState();\r\n\r\n    const [addDataSetShown, setDataSetShown] = useState(false);\r\n\r\n    const [notes, setNotes] = useState([] as any[]);\r\n    const [isNotesFetching, setNotesFetching] = useState(true);\r\n\r\n    useEffect(() => {\r\n        Patient.getPatient(props.match.params.id)\r\n            .then(res => {\r\n                console.log(res);\r\n                setPatient(res.data.patient);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setPatientFetching(false);\r\n            });\r\n\r\n        Patient.getNotes(props.match.params.id)\r\n            .then(res => {\r\n                console.log(res);\r\n                setNotes(res.data.notes);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setNotesFetching(false);\r\n            });\r\n\r\n        Patient.getDataSets(props.match.params.id)\r\n            .then(res => {\r\n                console.log(res);\r\n                let dataSets = res.data.dataSets;\r\n                dataSets = dataSets.map((ds: any) => {\r\n                    return {\r\n                        ...ds,\r\n                        dataValues: ds.dataValues.map((dv: any) => {\r\n                            return {\r\n                                ...dv,\r\n                                dateValueString: moment\r\n                                    .utc(dv.dateValue)\r\n                                    .local()\r\n                                    .format(\"DD-MM-YYYY HH:mm\")\r\n                            };\r\n                        })\r\n                    };\r\n                });\r\n                dataSets.forEach((ds: any) => {\r\n                    ds.dataValues.sort((a: any, b: any) => {\r\n                        console.log(\r\n                            moment(a.dateValue)\r\n                                .toDate()\r\n                                .getTime()\r\n                        );\r\n                        if (a.dateValue < b.dateValue) {\r\n                            return -1;\r\n                        } else {\r\n                            return 1;\r\n                        }\r\n                    });\r\n                    console.log(ds);\r\n                });\r\n                setDataSets(dataSets);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setDataSetsFetching(false);\r\n            });\r\n    }, []);\r\n\r\n    const onDataSetAdd = (data: any) => {\r\n        setDataSets([...dataSets, data]);\r\n        setDataSetShown(false);\r\n    };\r\n\r\n    const onDataSetDelete = (id: string) => {\r\n        Patient.removeDataSet(id).then(res => {\r\n            const dsCopy: any[] = JSON.parse(JSON.stringify(dataSets));\r\n            dsCopy.splice(\r\n                dsCopy.findIndex(ds => ds.dataSet.id === id),\r\n                1\r\n            );\r\n            setDataSets(dsCopy);\r\n        });\r\n    };\r\n\r\n    const onDataValueAdd = (dataSetId: string, data: any) => {\r\n        const dsCopy: any[] = JSON.parse(JSON.stringify(dataSets));\r\n        data = {\r\n            ...data,\r\n            dateValueString: moment\r\n                .utc(data.dateValue)\r\n                .local()\r\n                .format(\"DD-MM-YYYY HH:mm\")\r\n        };\r\n        dsCopy.find(ds => ds.dataSet.id === dataSetId).dataValues.push(data);\r\n        console.log(dsCopy);\r\n\r\n        dsCopy\r\n            .find(ds => ds.dataSet.id === dataSetId)\r\n            .dataValues.sort((a: any, b: any) => {\r\n                if (a.dateValue < b.dateValue) {\r\n                    return -1;\r\n                } else {\r\n                    return 1;\r\n                }\r\n            });\r\n        setDataSets(dsCopy);\r\n    };\r\n\r\n    const deleteDataValue = (id: string, dataSetId: string) => {\r\n        Patient.deleteDataValue(id)\r\n            .then(res => {\r\n                const dsCopy: any[] = JSON.parse(JSON.stringify(dataSets));\r\n                dsCopy\r\n                    .find(ds => ds.dataSet.id === dataSetId)\r\n                    .dataValues.splice(\r\n                        dsCopy.find(ds => ds.dataSet.id === dataSetId).dataValues.findIndex((i: any) => i.id === id),\r\n                        1\r\n                    );\r\n                setDataSets(dsCopy);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const onNoteAdd = (note: any) => {\r\n        setNotes([...notes, note]);\r\n    };\r\n\r\n    const onNoteDelete = (id: string) => {\r\n        setNotes(notes.filter(e => e.id !== id));\r\n    };\r\n\r\n    return (\r\n        <PatientDetailsStyled>\r\n            <ContainerFluid>\r\n                <PatientDetailsStyledInner>\r\n                    <SectionTitle>Szczegóły pacjenta</SectionTitle>\r\n\r\n                    {!isPatientFetching && patient ? (\r\n                        <React.Fragment>\r\n                            <InfoBadge>\r\n                                {patient.userAccount ? (\r\n                                    <UserExistInfo>\r\n                                        <div>Użytkownik jest zarejestrowany w systemie</div>\r\n                                        <ContactButton\r\n                                            to={{ pathname: \"/chat\", state: { newConversationUserId: patient.userAccount.id } }}\r\n                                        >\r\n                                            Chat\r\n                                        </ContactButton>\r\n                                    </UserExistInfo>\r\n                                ) : (\r\n                                    <UserDoesNotExistInfo>\r\n                                        Ten pacjent nie jest powiązany z kontem w tej aplikacji\r\n                                    </UserDoesNotExistInfo>\r\n                                )}\r\n                            </InfoBadge>\r\n                            <NotesAndPatientsContainer>\r\n                                <Container>\r\n                                    <PatientInfo>\r\n                                        <ImageWrapper>\r\n                                            <Avatar isFull={true}></Avatar>\r\n                                        </ImageWrapper>\r\n                                        <PatientInfoInner>\r\n                                            <Name>Imię i nazwisko: {patient.firstName + \" \" + patient.lastName}</Name>\r\n                                            <Age>Wiek: {patient.age}</Age>\r\n                                            <Gender>Płeć: {patient.gender}</Gender>\r\n                                            <TherapyGoal>Cel terapii: {patient.therapyGoal}</TherapyGoal>\r\n                                        </PatientInfoInner>\r\n                                    </PatientInfo>\r\n                                </Container>\r\n                                <Container>\r\n                                    <SectionTitle>Moje notatki</SectionTitle>\r\n                                    {!isNotesFetching ? (\r\n                                        <NotesList>\r\n                                            {notes.map((note, index) => {\r\n                                                return (\r\n                                                    <Note\r\n                                                        createdAt={note.createdAt}\r\n                                                        content={note.content}\r\n                                                        key={index}\r\n                                                        id={note.id}\r\n                                                        onNoteDelete={onNoteDelete}\r\n                                                    ></Note>\r\n                                                );\r\n                                            })}\r\n                                        </NotesList>\r\n                                    ) : (\r\n                                        <Loader></Loader>\r\n                                    )}\r\n                                    <NoteForm onNoteAdd={onNoteAdd} patientId={props.match.params.id}></NoteForm>\r\n                                </Container>\r\n                            </NotesAndPatientsContainer>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <Loader></Loader>\r\n                    )}\r\n                    <DataSetsContainer>\r\n                        <SectionTitle>Dane pacjenta</SectionTitle>\r\n                        {!isDataSetsFetching ? (\r\n                            dataSets.map((dataSet: any, key: any) => {\r\n                                return (\r\n                                    <DataSetWrapper key={key}>\r\n                                        <DataSetInfo>\r\n                                            <DataSetTitle>Nazwa: {dataSet.dataSet.title}</DataSetTitle>\r\n                                            <DataSetDescription>Opis: {dataSet.dataSet.descr}</DataSetDescription>\r\n                                            <DataSetUnit>Jednostka: {dataSet.dataSet.unit}</DataSetUnit>\r\n                                            <DeleteDataSet onClick={() => onDataSetDelete(dataSet.dataSet.id)}>\r\n                                                Usuń zbiór danych\r\n                                            </DeleteDataSet>\r\n                                        </DataSetInfo>\r\n                                        <DataSetInner>\r\n                                            <DataSetTableWrapper>\r\n                                                <Table>\r\n                                                    <thead>\r\n                                                        <StyledTr>\r\n                                                            <StyledTh>Data</StyledTh>\r\n                                                            <StyledTh>Wartość</StyledTh>\r\n                                                            <StyledTh>Usuń wartość</StyledTh>\r\n                                                        </StyledTr>\r\n                                                    </thead>\r\n                                                    <tbody>\r\n                                                        {dataSet.dataValues.map((dv: any, index: any) => {\r\n                                                            return (\r\n                                                                <StyledTr key={index}>\r\n                                                                    <StyledTd>{dv.dateValueString}</StyledTd>\r\n                                                                    <StyledTd>{dv.dataValue} {dataSet.dataSet.unit}</StyledTd>\r\n                                                                    <StyledTd>\r\n                                                                        <DeleteButton\r\n                                                                            onClick={() =>\r\n                                                                                deleteDataValue(dv.id, dataSet.dataSet.id)\r\n                                                                            }\r\n                                                                        >\r\n                                                                            x\r\n                                                                        </DeleteButton>\r\n                                                                    </StyledTd>\r\n                                                                </StyledTr>\r\n                                                            );\r\n                                                        })}\r\n                                                    </tbody>\r\n                                                </Table>\r\n                                                <DataSetFormWrapper>\r\n                                                    <AddData\r\n                                                        dataSetId={dataSet.dataSet.id}\r\n                                                        onDataValueAdd={(data: any) => onDataValueAdd(dataSet.dataSet.id, data)}\r\n                                                    ></AddData>\r\n                                                </DataSetFormWrapper>\r\n                                            </DataSetTableWrapper>\r\n                                            <DataSetChartWrapper>\r\n                                                <ResponsiveContainer width=\"100%\" height={350}>\r\n                                                    <LineChart\r\n                                                        data={dataSet.dataValues}\r\n                                                        margin={{ top: 5, right: 0, left: 0, bottom: 5 }}\r\n                                                    >\r\n                                                        <Line type=\"monotone\" dataKey=\"dataValue\" />\r\n                                                        <XAxis dataKey=\"dateValueString\" />\r\n                                                        <YAxis />\r\n                                                    </LineChart>\r\n                                                </ResponsiveContainer>\r\n                                            </DataSetChartWrapper>\r\n                                        </DataSetInner>\r\n                                    </DataSetWrapper>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <Loader></Loader>\r\n                        )}\r\n\r\n                        {!addDataSetShown && (\r\n                            <Container>\r\n                                <SubmitButton onClick={() => setDataSetShown(true)}>\r\n                                    Dodaj nowy zbiór danych pacjenta\r\n                                </SubmitButton>\r\n                            </Container>\r\n                        )}\r\n                        {addDataSetShown && (\r\n                            <Container>\r\n                                <AddDataSet patientId={props.match.params.id} onDataSetAdd={onDataSetAdd}></AddDataSet>\r\n                            </Container>\r\n                        )}\r\n                    </DataSetsContainer>\r\n                </PatientDetailsStyledInner>\r\n            </ContainerFluid>\r\n        </PatientDetailsStyled>\r\n    );\r\n};\r\n\r\nexport default PatientDetails;\r\n"],"sourceRoot":""}