{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","components/PriceList/PriceListElement/PriceListElement.styled.ts","components/PriceList/PriceListElement/PriceListElement.tsx","components/Gallery/Gallery/Gallery.styled.ts","components/Gallery/Gallery/Gallery.tsx","views/ProfileSettings/ProfileSettings.styled.ts","components/PriceList/PriceListSettings/PriceListSettings.styled.ts","components/PriceList/PriceListSettings/PriceListSettings.tsx","components/Gallery/GallerySettings/GallerySettings.styled.ts","components/Gallery/AddImageForm/AddImageForm.styled.ts","components/Gallery/Thumbnail/Thumbnail.styled.ts","components/Gallery/Thumbnail/Thumbnail.tsx","components/Gallery/AddImageForm/AddImageForm.tsx","components/Gallery/GallerySettings/GallerySettings.tsx","components/PersonalSettings/PersonalSettings.styled.ts","components/PersonalSettings/PersonalSettings.tsx","components/GeneralSettings/GeneralSettings.styled.ts","components/GeneralSettings/GeneralSettings.tsx","views/ProfileSettings/ProfileSettings.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","_possibleConstructorReturn","self","call","_typeof2","obj","Symbol","iterator","constructor","_typeof","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_setPrototypeOf","p","_inherits","subClass","superClass","create","value","PriceListElementStyled","Name","Price","DeleteButton","PriceListElement","elementName","price","editable","Fragment","onClick","onDelete","id","Gallery","useState","modalImageIndex","setModalImageIndex","isImageModalOpened","setImageModalOpened","images","className","map","src","index","onImageClick","isEditable","onImageDelete","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","animationDuration","ProfileSettingsStyled","ProfileSettingsStyledInner","SettingList","SettingListTitle","SettingListElement","isActive","SettingWrapper","PriceListSettingsStyled","PriceList","PriceListForm","priceListFormValidationSchema","Yup","shape","required","integer","positive","PriceListSettings","profileId","priceList","setPriceList","useEffect","onPriceListUpdate","ProfileApi","deletePriceListElement","then","res","filter","e","catch","err","console","log","element","initialValues","validationSchema","onSubmit","values","data","addPriceListElement","priceListElement","htmlFor","name","placeholder","component","type","GallerySettingsStyled","AddImageInput","input","StyledThumb","img","Thumbnail","state","loading","thumb","undefined","nextProps","file","this","setState","reader","FileReader","onloadend","result","readAsDataURL","alt","React","Component","AddImageForm","resetForm","addImage","onImageAdd","uploadAvatar","render","setFieldValue","onChange","event","currentTarget","files","GallerySettings","STATIC_FILES_ROOT","srcPath","PersonalSettingsStyled","CurrentAvatar","PersonalSettingsForm","personalSettingsFormValidationSchema","displayName","min","PersonalSettings","onAvatarAdd","Avatar","isFull","url","currentAvatar","onAvatarReset","currentDisplayName","updateUserData","onProfileUpdate","GeneralSettingsForm","TextAreaStyled","generalSettingsFormValidationSchema","city","descr","GeneralSettings","profile","updateProfileData","mapDispatchToProps","setCurrentUser","connect","currentUser","auth","setProfile","currentView","setCurrentView","accountType","getProfile","priceListElements","image","imageId","splice","deleteImage","avatar","user","resetAvatar","onUserDataUpdate","BarLoader"],"mappings":"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","file":"static/js/9.ff6c378e.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Field, ErrorMessage } from \"formik\";\r\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\r\n\r\nexport const InfoBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border-radius: 5px;\r\n    font-size: 1.4rem;\r\n    background: #fff87d;\r\n`;\r\n\r\nexport const ErrorBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    font-size: 1.4rem;\r\n    border-radius: 5px;\r\n    color: white;\r\n    background: #ff4230;\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem;\r\n    font-size: 1.5rem;\r\n    width: 50%;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        padding: 1rem;\r\n        width: 80%;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        padding: 1rem;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nexport const FormGroup2 = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1rem;\r\n`\r\n\r\nexport const FieldStyled = styled(Field)`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    transition: all 0.2s;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border: 1px solid ${COLORS.blue};\r\n        box-shadow: 0 0 5px ${COLORS.blue};\r\n    }\r\n\r\n    &[type=\"radio\"] {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n        cursor: pointer;\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n    }\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled(ErrorMessage)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    color: red;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n    box-sizing: border-box;\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\ntype SubmitButtonProps = {\r\n    light?: boolean\r\n}\r\n\r\nexport const SubmitButton = styled.button<SubmitButtonProps>`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${COLORS.blue};\r\n    border-radius: 5px;\r\n    transition: background 0.2s;\r\n\r\n    :hover {\r\n        background: ${COLORS.darkblue};\r\n    }\r\n\r\n    ${({ light }) =>\r\n        light && `\r\n            background: #226aff;\r\n            :hover {\r\n                background: #042bfc;\r\n            }\r\n        `\r\n    }\r\n`;\r\n\r\nexport const FormInfo = styled.div`\r\n    width: 100%;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    \r\n`\r\nexport const FormInfoContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    padding-bottom: 1rem;\r\n`","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 64px;\r\n    height: 64px;\r\n    z-index: 1000;\r\n    div {\r\n        position: absolute;\r\n        top: 27px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        background: ${COLORS.blue};\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from \"react\";\r\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LoaderStyled>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </LoaderStyled>\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","import styled from 'styled-components';\r\n\r\nexport const PriceListElementStyled = styled.div`\r\n    display: flex;\r\n    width: 100%;\r\n    justify-content: center;\r\n    flex-direction: row;\r\n    border-radius: 4px;\r\n    border: 1px solid #eee;\r\n`\r\n\r\nexport const Name = styled.div`\r\n    padding: 1rem;\r\n    flex: 1;\r\n    border-right: 2px solid #ddd;\r\n`\r\n\r\nexport const Price = styled.div`\r\n    padding: 1rem;\r\n    flex: 1;\r\n`\r\n\r\nexport const DeleteButton = styled.button`\r\n    border: 1px solid #ddd;\r\n    padding: 1rem;\r\n\r\n    &:hover {\r\n        cursor: pointer;\r\n    }\r\n`","import React from \"react\";\r\nimport { PriceListElementStyled, Price, Name, DeleteButton } from \"./PriceListElement.styled\";\r\n\r\ntype Props = {\r\n    elementName: string;\r\n    price: number;\r\n    onDelete?: (id: string) => any;\r\n    editable: boolean;\r\n    id: string;\r\n};\r\n\r\nconst PriceListElement = (props: Props) => {\r\n    return (\r\n        <PriceListElementStyled>\r\n            <Name>{props.elementName}</Name>\r\n            <Price>{props.price} zł</Price>\r\n            {props.editable && (\r\n                <React.Fragment>\r\n                    <DeleteButton\r\n                        onClick={() => {\r\n                            if (props.onDelete) {\r\n                                props.onDelete(props.id);\r\n                            }\r\n                        }}\r\n                    >\r\n                        Usuń\r\n                    </DeleteButton>\r\n                </React.Fragment>\r\n            )}\r\n        </PriceListElementStyled>\r\n    );\r\n};\r\n\r\nexport default PriceListElement;\r\n","import styled from 'styled-components';\r\n\r\nexport const DeleteButton = styled.button`\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n`","import React, { useState } from \"react\";\r\nimport Lightbox from \"react-image-lightbox\";\r\nimport \"react-image-lightbox/style.css\";\r\nimport { DeleteButton } from \"./Gallery.styled\";\r\n\r\ntype Props = {\r\n    images: string[];\r\n    isEditable: boolean;\r\n    onImageDelete: (data: any) => any;\r\n};\r\n\r\nconst Gallery = (props: Props) => {\r\n    const [modalImageIndex, setModalImageIndex] = useState(0);\r\n    const [isImageModalOpened, setImageModalOpened] = useState(false);\r\n\r\n    const onImageClick = (index: number) => {\r\n        setImageModalOpened(true);\r\n        setModalImageIndex(index);\r\n    };\r\n\r\n    const { images } = props;\r\n    return (\r\n        <div className=\"gallery\">\r\n            <div className=\"gallery__container\">\r\n                {images.map((src, index) => (\r\n                    <div className=\"gallery__image--small\" key={index}>\r\n                        <img src={src} onClick={() => onImageClick(index)} />\r\n                        {props.isEditable && <DeleteButton onClick={() => props.onImageDelete(index)}>X</DeleteButton>}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            {isImageModalOpened && (\r\n                <Lightbox\r\n                    mainSrc={images[modalImageIndex]}\r\n                    nextSrc={images[(modalImageIndex + 1) % images.length]}\r\n                    prevSrc={images[(modalImageIndex + images.length - 1) % images.length]}\r\n                    onCloseRequest={() => setImageModalOpened(false)}\r\n                    onMovePrevRequest={() => setModalImageIndex((modalImageIndex + images.length - 1) % images.length)}\r\n                    onMoveNextRequest={() => setModalImageIndex((modalImageIndex + images.length + 1) % images.length)}\r\n                    animationDuration={0}\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Gallery;\r\n","import styled from 'styled-components'\r\nimport { BREAKPOINTS } from '../../styles/variables'\r\n\r\nexport const ProfileSettingsStyled = styled.div`\r\n    \r\n`\r\n\r\nexport const ProfileSettingsStyledInner = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 2fr 5fr;\r\n    grid-gap: 1rem;\r\n    padding: 2rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n        padding: 0.5rem;\r\n    }\r\n\r\n`\r\n\r\nexport const SettingList = styled.div`\r\n\r\n`\r\n\r\nexport const SettingListTitle = styled.div`\r\n    padding: 0.8rem;\r\n    background: #ddd;\r\n`\r\n\r\ntype SettingListElementProps = {\r\n    isActive?: boolean;\r\n}\r\n\r\nexport const SettingListElement = styled.div<SettingListElementProps>`\r\n    cursor: pointer;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ccc;\r\n    border-top: none;\r\n\r\n    ${({ isActive }) =>\r\n        isActive &&\r\n        `\r\n            font-weight: bold;\r\n            border-left: 2px solid #FC020F;\r\n        `}\r\n\r\n`\r\n\r\nexport const SettingWrapper = styled.div`\r\n\r\n`","import styled from 'styled-components';\r\nimport { Form } from 'formik'\r\n\r\nexport const PriceListSettingsStyled = styled.div`\r\n\r\n`\r\n\r\nexport const PriceList = styled.div`\r\n\r\n`\r\n\r\nexport const PriceListForm = styled(Form)`\r\n\r\n`","import React, { useState, useEffect } from \"react\";\r\nimport { PriceListSettingsStyled, PriceList, PriceListForm } from \"./PriceListSettings.styled\";\r\nimport PriceListElement from \"../PriceListElement/PriceListElement\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    FormInfo,\r\n    FormGroup,\r\n    LabelStyled,\r\n    SubmitButton,\r\n    FieldStyled,\r\n    ErrorMessageStyled\r\n} from \"../../../components/SharedStyledComponents/Form.styled\";\r\nimport { Profile as ProfileApi, AddPriceListElementProps } from \"../../../api\";\r\n\r\nconst priceListFormValidationSchema = Yup.object().shape({\r\n    elementName: Yup.string().required(\"Element name is required\"),\r\n    price: Yup.number()\r\n        .integer(\"Field must be a number\")\r\n        .positive(\"Price must be a positive number\")\r\n        .required(\"Price is required\")\r\n});\r\n\r\ntype Props = {\r\n    profileId: string;\r\n    priceList: any[];\r\n    onPriceListUpdate: (data: any) => any\r\n};\r\n\r\nconst PriceListSettings = (props: Props) => {\r\n    let { profileId } = props;\r\n\r\n    const [priceList, setPriceList] = useState(props.priceList);\r\n\r\n    useEffect(() => {\r\n        props.onPriceListUpdate(priceList);\r\n    }, [priceList])\r\n\r\n    const onDelete = (id: string) => {\r\n        ProfileApi.deletePriceListElement(id)\r\n            .then(res => {\r\n                setPriceList(priceList.filter(e => e.id !== id));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <PriceListSettingsStyled>\r\n            <PriceList>\r\n                {priceList.map((element: any) => {\r\n                    return (\r\n                        <PriceListElement\r\n                            key={element.id}\r\n                            elementName={element.elementName}\r\n                            price={element.price}\r\n                            editable={true}\r\n                            onDelete={onDelete}\r\n                            id={element.id}\r\n                        />\r\n                    );\r\n                })}\r\n            </PriceList>\r\n            <Formik\r\n                initialValues={{ elementName: \"\", price: \"\" }}\r\n                validationSchema={priceListFormValidationSchema}\r\n                onSubmit={values => {\r\n                    const data: AddPriceListElementProps = {\r\n                        profileId: profileId,\r\n                        price: values.price,\r\n                        elementName: values.elementName\r\n                    };\r\n                    ProfileApi.addPriceListElement(data)\r\n                        .then(res => {\r\n                            setPriceList([...priceList, res.data.priceListElement])\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        });\r\n                }}\r\n            >\r\n                <PriceListForm>\r\n                    <FormInfo>Ustawienia cennika</FormInfo>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"elementName\">Nazwa usługi</LabelStyled>\r\n                        <FieldStyled id=\"elementName\" name=\"elementName\" placeholder=\"Nazwa usługi\" />\r\n                        <ErrorMessageStyled name=\"elementName\" component=\"div\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"price\">Cena</LabelStyled>\r\n                        <FieldStyled name=\"price\" placeholder=\"Cena\" id=\"price\" />\r\n                        <ErrorMessageStyled name=\"price\" component=\"div\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <SubmitButton type=\"submit\">Dodaj nowy element cennika</SubmitButton>\r\n                    </FormGroup>\r\n                </PriceListForm>\r\n            </Formik>\r\n        </PriceListSettingsStyled>\r\n    );\r\n};\r\n\r\nexport default PriceListSettings;\r\n","import styled from 'styled-components';\r\n\r\nexport const GallerySettingsStyled = styled.div`\r\n\r\n`","import styled from 'styled-components'\r\n\r\nexport const AddImageSubmitButton = styled.button`\r\n    padding: 1rem;\r\n`\r\n\r\nexport const AddImageInput = styled.input`\r\n    border-radius: 6px;\r\n    padding: 1rem;\r\n    width: 100%;\r\n`","import styled from 'styled-components';\r\n\r\nexport const StyledThumb = styled.img`\r\n    width: 200px;\r\n    height: 200px;\r\n`","import React from \"react\";\r\nimport Loader from \"../../Loader/Loader\";\r\nimport { StyledThumb } from \"./Thumbnail.styled\";\r\n\r\ntype Props = {\r\n    file: any;\r\n};\r\n\r\nclass Thumbnail extends React.Component<Props> {\r\n    state = {\r\n        loading: false,\r\n        thumb: undefined\r\n    };\r\n\r\n    componentWillReceiveProps(nextProps: any) {\r\n        if (!nextProps.file) {\r\n            return;\r\n        }\r\n\r\n        this.setState({ loading: true }, () => {\r\n            let reader = new FileReader();\r\n\r\n            reader.onloadend = () => {\r\n                this.setState({ loading: false, thumb: reader.result });\r\n            };\r\n\r\n            reader.readAsDataURL(nextProps.file);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { file } = this.props;\r\n        const { loading, thumb } = this.state;\r\n\r\n        if (!file) {\r\n            return null;\r\n        }\r\n\r\n        if (loading) {\r\n            return <Loader></Loader>;\r\n        }\r\n\r\n        return <StyledThumb src={thumb} alt={file.name} />;\r\n    }\r\n}\r\n\r\nexport default Thumbnail;\r\n","import React from \"react\";\r\nimport { AddImageInput, AddImageSubmitButton } from \"./AddImageForm.styled\";\r\nimport { Formik, Form as FormikForm } from \"formik\";\r\nimport { Profile as ProfileApi, AddImageProps } from \"../../../api\";\r\nimport { file } from \"@babel/types\";\r\nimport Thumbnail from \"../Thumbnail/Thumbnail\";\r\nimport { SubmitButton } from \"../../SharedStyledComponents/Form.styled\";\r\n\r\ntype Props = {\r\n    profileId: string;\r\n    onImageAdd: (data: any) => any;\r\n    type: string;\r\n};\r\n\r\nconst AddImageForm = (props: Props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ file: null }}\r\n            onSubmit={(values, { resetForm }) => {\r\n                if (values.file == null) {\r\n                    return;\r\n                }\r\n\r\n                const data: AddImageProps = {\r\n                    file: values.file,\r\n                    profileId: props.profileId\r\n                };\r\n\r\n                console.log(data);\r\n                if(props.type === 'image') {\r\n                    ProfileApi.addImage(data)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        props.onImageAdd(res.data);\r\n\r\n                        resetForm();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n                } else {\r\n                    ProfileApi.uploadAvatar(data)\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        props.onImageAdd(res.data);\r\n\r\n                        resetForm();\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n                }\r\n            }}\r\n            render={({ setFieldValue, values }) => (\r\n                <FormikForm>\r\n                    <AddImageInput\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        onChange={(event: any) => {\r\n                            setFieldValue(\"file\", event.currentTarget.files[0]);\r\n                        }}\r\n                    ></AddImageInput>\r\n                    <Thumbnail file={values.file}></Thumbnail>\r\n                    <SubmitButton type=\"submit\">Wyślij &#8250;</SubmitButton>\r\n                </FormikForm>\r\n            )}\r\n        ></Formik>\r\n    );\r\n};\r\n\r\nexport default AddImageForm;\r\n","import React from \"react\";\r\nimport { GallerySettingsStyled } from \"./GallerySettings.styled\";\r\nimport Gallery from \"../Gallery/Gallery\";\r\nimport { STATIC_FILES_ROOT } from \"../../../constants/config\";\r\nimport AddImageForm from \"../AddImageForm/AddImageForm\";\r\n\r\ntype Props = {\r\n    images: any[];\r\n    profileId: string;\r\n    onImageAdd: (data: any) => any;\r\n    onImageDelete: (data: any) => any;\r\n};\r\n\r\nconst GallerySettings = (props: Props) => {\r\n    return (\r\n        <GallerySettingsStyled>\r\n            <Gallery isEditable={true} onImageDelete={props.onImageDelete} images={props.images.map(i => STATIC_FILES_ROOT + i.srcPath)}></Gallery>\r\n            <AddImageForm type=\"image\" profileId={props.profileId} onImageAdd={props.onImageAdd}></AddImageForm>\r\n        </GallerySettingsStyled>\r\n    );\r\n};\r\n\r\nexport default GallerySettings;\r\n","import styled from 'styled-components'\r\nimport { Form } from 'formik'\r\n\r\nexport const PersonalSettingsStyled = styled.div`\r\n\r\n`\r\n\r\nexport const CurrentAvatar = styled.div`\r\n    width: 200px;\r\n    height: 200px;\r\n`\r\n\r\nexport const PersonalSettingsForm = styled(Form)`\r\n\r\n`\r\n\r\nexport const ResetAvatarButton = styled.button`\r\n\r\n`","import React from \"react\";\r\nimport { PersonalSettingsStyled, CurrentAvatar, PersonalSettingsForm, ResetAvatarButton } from \"./PersonalSettings.styled\";\r\nimport AddImageForm from \"../Gallery/AddImageForm/AddImageForm\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    FormInfo,\r\n    FormGroup,\r\n    LabelStyled,\r\n    SubmitButton,\r\n    FieldStyled,\r\n    ErrorMessageStyled\r\n} from \"../../components/SharedStyledComponents/Form.styled\";\r\nimport { Formik } from \"formik\";\r\nimport { Profile as ProfileApi } from \"../../api\";\r\nimport Avatar from \"../Avatar/Avatar\";\r\nimport { STATIC_FILES_ROOT } from \"../../constants/config\";\r\n\r\nconst personalSettingsFormValidationSchema = Yup.object().shape({\r\n    displayName: Yup.string()\r\n        .required(\"Element name is required\")\r\n        .min(4, \"Minimum length is 4 characters\")\r\n});\r\n\r\ntype Props = {\r\n    profileId: string;\r\n    onAvatarAdd: (data: any) => any;\r\n    onAvatarReset: (data: any) => any;\r\n    onProfileUpdate: (data: any) => any;\r\n    profile: any;\r\n    currentAvatar: string;\r\n    currentDisplayName: string;\r\n};\r\n\r\nconst PersonalSettings = (props: Props) => {\r\n    return (\r\n        <PersonalSettingsStyled>\r\n            <FormGroup>\r\n                <AddImageForm type=\"avatar\" profileId={props.profileId} onImageAdd={props.onAvatarAdd}></AddImageForm>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                Avatar\r\n                <CurrentAvatar>\r\n                    <Avatar isFull={true} url={props.currentAvatar ? props.currentAvatar : undefined}></Avatar>\r\n                </CurrentAvatar>\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <SubmitButton onClick={props.onAvatarReset}>Resetuj avatar</SubmitButton>\r\n            </FormGroup>\r\n\r\n            <Formik\r\n                initialValues={{ displayName: props.currentDisplayName }}\r\n                validationSchema={personalSettingsFormValidationSchema}\r\n                onSubmit={values => {\r\n                    ProfileApi.updateUserData(values)\r\n                        .then(res => {\r\n                            props.onProfileUpdate(res);\r\n                        })\r\n                        .catch(err => {\r\n                            console.log(err);\r\n                        });\r\n                }}\r\n            >\r\n                <PersonalSettingsForm>\r\n                    <FormInfo>Edytuj dane konta</FormInfo>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"displayName\">Nick</LabelStyled>\r\n                        <FieldStyled id=\"displayName\" name=\"displayName\" placeholder=\"Nick\" />\r\n                        <ErrorMessageStyled name=\"displayName\" component=\"div\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <SubmitButton type=\"submit\">Aktualizuj</SubmitButton>\r\n                    </FormGroup>\r\n                </PersonalSettingsForm>\r\n            </Formik>\r\n        </PersonalSettingsStyled>\r\n    );\r\n};\r\n\r\nexport default PersonalSettings;\r\n","import styled from 'styled-components';\r\nimport { Form, Field } from 'formik';\r\n\r\nexport const GeneralSettingsStyled = styled.div`\r\n\r\n`\r\n\r\nexport const GeneralSettingsForm = styled(Form)`\r\n\r\n`\r\n\r\nexport const TextAreaStyled = styled(Field)`\r\n    width: 100%;\r\n    resize: none;\r\n    height: 20rem;\r\n`","import React from \"react\";\r\nimport { GeneralSettingsForm, TextAreaStyled } from \"./GeneralSettings.styled\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport {\r\n    FormInfo,\r\n    FormGroup,\r\n    LabelStyled,\r\n    SubmitButton,\r\n    FieldStyled,\r\n    ErrorMessageStyled\r\n} from \"../../components/SharedStyledComponents/Form.styled\";\r\nimport { Profile as ProfileApi, AddPriceListElementProps } from \"../../api\";\r\n\r\nconst generalSettingsFormValidationSchema = Yup.object().shape({\r\n    city: Yup.string().required(\"City is required\"),\r\n    descr: Yup.string().required(\"Description is required\")\r\n});\r\n\r\ntype Props = {\r\n    profileId: string;\r\n    profile: any;\r\n    onProfileUpdate: (data: any) => any;\r\n};\r\n\r\nconst GeneralSettings = (props: Props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ city: props.profile.city, descr: props.profile.descr }}\r\n            validationSchema={generalSettingsFormValidationSchema}\r\n            onSubmit={values => {\r\n                console.log(values)\r\n                ProfileApi.updateProfileData(values, props.profileId)\r\n                    .then(res => {\r\n                        console.log(res)\r\n                        props.onProfileUpdate(res.data);\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n            }}\r\n        >\r\n            <GeneralSettingsForm>\r\n                <FormInfo>Ogólne ustawienia profilu</FormInfo>\r\n                <FormGroup>\r\n                    <LabelStyled htmlFor=\"city\">Miasto</LabelStyled>\r\n                    <FieldStyled id=\"city\" name=\"city\" placeholder=\"Miasto\" />\r\n                    <ErrorMessageStyled name=\"city\" component=\"div\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <LabelStyled htmlFor=\"descr\">Opis</LabelStyled>\r\n                    <TextAreaStyled name=\"descr\" placeholder=\"Opis\" id=\"descr\" component=\"textarea\" />\r\n                    <ErrorMessageStyled name=\"descr\" component=\"div\" />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <SubmitButton type=\"submit\">Aktualizuj</SubmitButton>\r\n                </FormGroup>\r\n            </GeneralSettingsForm>\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default GeneralSettings;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    ProfileSettingsStyled,\r\n    SettingListElement,\r\n    SettingWrapper,\r\n    SettingList,\r\n    ProfileSettingsStyledInner,\r\n    SettingListTitle\r\n} from \"./ProfileSettings.styled\";\r\nimport PriceListSettings from \"../../components/PriceList/PriceListSettings/PriceListSettings\";\r\nimport { Profile as ProfileApi } from \"../../api\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport { connect } from \"react-redux\";\r\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\r\nimport GallerySettings from \"../../components/Gallery/GallerySettings/GallerySettings\";\r\nimport BarLoader from \"../../components/BarLoader/BarLoader\";\r\nimport PersonalSettings from \"../../components/PersonalSettings/PersonalSettings\";\r\nimport GeneralSettings from \"../../components/GeneralSettings/GeneralSettings\";\r\nimport { setCurrentUser } from \"../../store/auth/actions\";\r\n\r\ntype Props = ReturnType<typeof mapStateToProps> & typeof mapDispatchToProps & {};\r\n\r\nconst ProfileSettings = (props: Props) => {\r\n    const id = props.currentUser.profileId;\r\n    const [profile, setProfile] = useState();\r\n    const [currentView, setCurrentView] = useState(\"PERSONAL\");\r\n\r\n    useEffect(() => {\r\n        if (props.currentUser.accountType === \"doctor\") {\r\n            ProfileApi.getProfile(id)\r\n                .then(res => {\r\n                    console.log(res.data.profile);\r\n                    setProfile(res.data.profile);\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const onPriceListUpdate = (data: any) => {\r\n        setProfile({ ...profile, priceListElements: data });\r\n        //profile.priceListElements = data;\r\n    };\r\n\r\n    const onImageAdd = (data: any) => {\r\n        setProfile({ ...profile, images: [...profile.images, data.image] });\r\n        // profile.images.push(data.image);\r\n    };\r\n\r\n    const onImageDelete = (data: any) => {\r\n        console.log(data);\r\n        console.log(profile);\r\n        const imageId = profile.images[data].id;\r\n        profile.images.splice(data, 1);\r\n        ProfileApi.deleteImage(imageId)\r\n            .then(res => {\r\n                setProfile({ ...profile, images: [...profile.images] });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const onAvatarAdd = (data: any) => {\r\n        console.log(data);\r\n        props.setCurrentUser({ avatar: data.user.avatar });\r\n    };\r\n\r\n    const onAvatarReset = (data: any) => {\r\n        console.log(data);\r\n        ProfileApi.resetAvatar()\r\n            .then(res => {\r\n                props.setCurrentUser({ avatar: \"\" });\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const onUserDataUpdate = (data: any) => {\r\n        console.log(data.data);\r\n        props.setCurrentUser({ displayName: data.data.user.displayName });\r\n    };\r\n\r\n    const onProfileUpdate = (data: any) => {\r\n        console.log(data);\r\n        setProfile({ ...profile, ...data.profile });\r\n    };\r\n\r\n    return (\r\n        <ProfileSettingsStyled>\r\n            <ContainerFluid>\r\n                <ProfileSettingsStyledInner>\r\n                    {(props.currentUser.accountType === \"doctor\" && profile) || props.currentUser.accountType === \"patient\" ? (\r\n                        <React.Fragment>\r\n                            <SettingList>\r\n                                <SettingListTitle>Ustawienia</SettingListTitle>\r\n                                <SettingListElement\r\n                                    onClick={() => setCurrentView(\"PERSONAL\")}\r\n                                    isActive={currentView === \"PERSONAL\"}\r\n                                >\r\n                                    Ustawienia konta\r\n                                </SettingListElement>\r\n                                {props.currentUser.accountType === \"doctor\" && (\r\n                                    <React.Fragment>\r\n                                        <SettingListElement\r\n                                            onClick={() => setCurrentView(\"GENERAL\")}\r\n                                            isActive={currentView === \"GENERAL\"}\r\n                                        >\r\n                                            Ogólne ustawienia profilu\r\n                                        </SettingListElement>\r\n\r\n                                        <SettingListElement\r\n                                            onClick={() => setCurrentView(\"PRICE_LIST\")}\r\n                                            isActive={currentView === \"PRICE_LIST\"}\r\n                                        >\r\n                                            Ustawienia cennika\r\n                                        </SettingListElement>\r\n                                        <SettingListElement\r\n                                            onClick={() => setCurrentView(\"GALLERY\")}\r\n                                            isActive={currentView === \"GALLERY\"}\r\n                                        >\r\n                                            Ustawienia galerii\r\n                                        </SettingListElement>\r\n                                    </React.Fragment>\r\n                                )}\r\n                            </SettingList>\r\n                            <SettingWrapper>\r\n                                {props.currentUser.accountType === \"doctor\"\r\n                                    ? (function() {\r\n                                          switch (currentView) {\r\n                                              case \"PRICE_LIST\":\r\n                                                  return (\r\n                                                      <PriceListSettings\r\n                                                          profileId={id}\r\n                                                          priceList={profile.priceListElements}\r\n                                                          onPriceListUpdate={onPriceListUpdate}\r\n                                                      ></PriceListSettings>\r\n                                                  );\r\n                                              case \"GALLERY\":\r\n                                                  return (\r\n                                                      <GallerySettings\r\n                                                          images={profile.images}\r\n                                                          profileId={profile.id}\r\n                                                          onImageAdd={onImageAdd}\r\n                                                          onImageDelete={onImageDelete}\r\n                                                      ></GallerySettings>\r\n                                                  );\r\n                                              case \"PERSONAL\":\r\n                                                  return (\r\n                                                      <PersonalSettings\r\n                                                          profile={profile}\r\n                                                          profileId={profile.id}\r\n                                                          onAvatarAdd={onAvatarAdd}\r\n                                                          onAvatarReset={onAvatarReset}\r\n                                                          onProfileUpdate={onUserDataUpdate}\r\n                                                          currentAvatar={props.currentUser.avatar}\r\n                                                          currentDisplayName={props.currentUser.displayName}\r\n                                                      ></PersonalSettings>\r\n                                                  );\r\n                                              case \"GENERAL\":\r\n                                                  return (\r\n                                                      <GeneralSettings\r\n                                                          onProfileUpdate={onProfileUpdate}\r\n                                                          profile={profile}\r\n                                                          profileId={profile.id}\r\n                                                      ></GeneralSettings>\r\n                                                  );\r\n                                          }\r\n                                      })()\r\n                                    : (function() {\r\n                                          switch (currentView) {\r\n                                              case \"PERSONAL\":\r\n                                                  return (\r\n                                                      <PersonalSettings\r\n                                                          profile={profile}\r\n                                                          profileId={\"\"}\r\n                                                          onAvatarAdd={onAvatarAdd}\r\n                                                          onAvatarReset={onAvatarReset}\r\n                                                          onProfileUpdate={onUserDataUpdate}\r\n                                                          currentAvatar={props.currentUser.avatar}\r\n                                                          currentDisplayName={props.currentUser.displayName}\r\n                                                      ></PersonalSettings>\r\n                                                  );\r\n                                          }\r\n                                      })()}\r\n                            </SettingWrapper>\r\n                        </React.Fragment>\r\n                    ) : (\r\n                        <BarLoader></BarLoader>\r\n                    )}\r\n                </ProfileSettingsStyledInner>\r\n            </ContainerFluid>\r\n        </ProfileSettingsStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n    return {\r\n        currentUser: state.auth.currentUser\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    setCurrentUser\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileSettings);\r\n"],"sourceRoot":""}