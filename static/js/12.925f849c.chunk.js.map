{"version":3,"sources":["components/SharedStyledComponents/Form.styled.ts","components/Loader/Loader.styled.ts","components/Loader/Loader.tsx","views/Home/Home.styled.ts","components/Footer/Footer.styled.ts","components/Footer/Footer.tsx","components/Notes/Note/Note.styled.ts","views/Dashboard/Dashboard.styled.ts","components/Notes/Note/Note.tsx","components/Notes/NoteForm/NoteForm.styled.ts","components/Notes/NoteForm/NoteForm.tsx","views/Dashboard/Dashboard.tsx"],"names":["InfoBadge","styled","span","ErrorBadge","FormStyled","Form","BREAKPOINTS","md","sm","FormGroup","div","FormGroup2","FieldStyled","Field","COLORS","blue","ErrorMessageStyled","ErrorMessage","LabelStyled","label","SubmitButton","button","darkblue","light","FormInfo","Option","option","FormInfoContainer","LoaderStyled","LoaderWrapper","Loader","HomePageStyled","HomeInner","HomeHero","NAV_HEADROOM","HomeTitle","HomeText","SearchInputWrapper","ScrollButton","HashLink","InfoSection","InfoCard","InfoCardIcon","InfoCardText","PopularProfiles","PopularProfilesInner","SectionTitle","PopularProfilesCard","PopularProfilesCardName","PopularProfilesCardCity","black","LogSection","show","keyframes","FooterStyled","footer","white","FooterStyledInner","Footer","NoteStyled","DateBadge","Content","DeleteButton","p","Container","DashboardStyled","DashboardStyledInner","NotesList","PatientList","PatientCard","NotesAndPatientsContainer","AddPatientButton","Link","Note","props","moment","utc","createdAt","local","format","onClick","id","Patient","deleteNote","then","res","onNoteDelete","catch","err","console","log","content","NoteFormStyled","NoteForm","initialValues","onSubmit","values","setFieldValue","addNote","patientId","onNoteAdd","data","note","render","htmlFor","name","placeholder","type","connect","state","profileId","auth","currentUser","useState","report","setReport","notes","setNotes","isNotesFetching","setNotesFetching","isPatientsFetching","setPatientsFetching","patients","setPatients","useEffect","Profile","getReport","result","map","r","day","getNotes","finally","getPatients","filter","e","length","width","height","reverse","margin","top","right","left","bottom","dataKey","index","key","to","firstName","lastName"],"mappings":"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","file":"static/js/12.925f849c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport { Form, Field, ErrorMessage } from \"formik\";\r\nimport { COLORS, BREAKPOINTS } from \"../../styles/variables\";\r\n\r\nexport const InfoBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    border-radius: 5px;\r\n    font-size: 1.4rem;\r\n    background: #fff87d;\r\n`;\r\n\r\nexport const ErrorBadge = styled.span`\r\n    width: 100%;\r\n    padding: 0.8rem;\r\n    font-size: 1.4rem;\r\n    border-radius: 5px;\r\n    color: white;\r\n    background: #ff4230;\r\n`;\r\n\r\nexport const FormStyled = styled(Form)`\r\n    -webkit-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    -moz-box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n    box-shadow: 0px 2px 10px 1px rgba(0, 0, 0, 0.2);\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    padding: 2rem;\r\n    font-size: 1.5rem;\r\n    width: 50%;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        padding: 1rem;\r\n        width: 80%;\r\n    }\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        padding: 1rem;\r\n        width: 100%;\r\n    }\r\n`;\r\n\r\nexport const FormGroup = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n`;\r\n\r\nexport const FormGroup2 = styled.div`\r\n    margin-top: 1rem;\r\n    width: 100%;\r\n    position: relative;\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 1rem;\r\n`\r\n\r\nexport const FieldStyled = styled(Field)`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    box-sizing: border-box;\r\n    padding: 0.8rem;\r\n    border: 1px solid #ddd;\r\n    border-radius: 5px;\r\n    transition: all 0.2s;\r\n\r\n    :focus {\r\n        outline: none;\r\n        border: 1px solid ${COLORS.blue};\r\n        box-shadow: 0 0 5px ${COLORS.blue};\r\n    }\r\n\r\n    &[type=\"radio\"] {\r\n        outline: none;\r\n        border: none;\r\n        box-shadow: none;\r\n        cursor: pointer;\r\n        width: 1.6rem;\r\n        height: 1.6rem;\r\n    }\r\n`;\r\n\r\nexport const ErrorMessageStyled = styled(ErrorMessage)`\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    color: red;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\nexport const LabelStyled = styled.label`\r\n    box-sizing: border-box;\r\n    display: block;\r\n    width: 100%;\r\n    padding: 0 0.8rem;\r\n    font-size: 1.2rem;\r\n`;\r\n\r\ntype SubmitButtonProps = {\r\n    light?: boolean\r\n}\r\n\r\nexport const SubmitButton = styled.button<SubmitButtonProps>`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${COLORS.blue};\r\n    border-radius: 5px;\r\n    transition: background 0.2s;\r\n\r\n    :hover {\r\n        background: ${COLORS.darkblue};\r\n    }\r\n\r\n    ${({ light }) =>\r\n        light && `\r\n            background: #226aff;\r\n            :hover {\r\n                background: #042bfc;\r\n            }\r\n        `\r\n    }\r\n`;\r\n\r\nexport const FormInfo = styled.div`\r\n    width: 100%;\r\n    font-weight: bold;\r\n`;\r\n\r\nexport const Option = styled.option`\r\n    \r\n`\r\nexport const FormInfoContainer = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n    padding-bottom: 1rem;\r\n`","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../styles/variables\";\r\n\r\nexport const LoaderStyled = styled.div`\r\n    display: inline-block;\r\n    position: relative;\r\n    width: 64px;\r\n    height: 64px;\r\n    z-index: 1000;\r\n    div {\r\n        position: absolute;\r\n        top: 27px;\r\n        width: 11px;\r\n        height: 11px;\r\n        border-radius: 50%;\r\n        background: ${COLORS.blue};\r\n        animation-timing-function: cubic-bezier(0, 1, 1, 0);\r\n    }\r\n    div:nth-child(1) {\r\n        left: 6px;\r\n        animation: lds-ellipsis1 0.6s infinite;\r\n    }\r\n    div:nth-child(2) {\r\n        left: 6px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(3) {\r\n        left: 26px;\r\n        animation: lds-ellipsis2 0.6s infinite;\r\n    }\r\n    div:nth-child(4) {\r\n        left: 45px;\r\n        animation: lds-ellipsis3 0.6s infinite;\r\n    }\r\n    @keyframes lds-ellipsis1 {\r\n        0% {\r\n            transform: scale(0);\r\n        }\r\n        100% {\r\n            transform: scale(1);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis3 {\r\n        0% {\r\n            transform: scale(1);\r\n        }\r\n        100% {\r\n            transform: scale(0);\r\n        }\r\n    }\r\n    @keyframes lds-ellipsis2 {\r\n        0% {\r\n            transform: translate(0, 0);\r\n        }\r\n        100% {\r\n            transform: translate(19px, 0);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const LoaderWrapper = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`","import React from \"react\";\r\nimport { LoaderStyled, LoaderWrapper } from \"./Loader.styled\";\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <LoaderWrapper>\r\n            <LoaderStyled>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </LoaderStyled>\r\n        </LoaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import styled from \"styled-components\"\r\nimport { NAV_HEADROOM, COLORS, BREAKPOINTS } from \"../../styles/variables\"\r\nimport { HashLink } from 'react-router-hash-link';\r\n\r\nexport const HomePageStyled = styled.div`\r\n    \r\n`\r\n\r\nexport const HomeInner = styled.div`\r\n    width: 100%;\r\n`\r\n\r\nexport const HomeHero = styled.div`\r\n    min-height: calc(100vh - ${NAV_HEADROOM});\r\n    display: flex;\r\n    align-items: center;\r\n    position: relative;\r\n    width: 100%;\r\n    position: relative;\r\n`\r\n\r\nexport const HomeTitle = styled.div`\r\n    font-weight: bold;\r\n    font-size: 5rem;\r\n    line-height: 5rem;\r\n    margin-bottom: 2.5rem;\r\n    color: ${COLORS.blue};\r\n    display: flex;\r\n    align-items: center;\r\n`\r\n\r\nexport const HomeText = styled.div`\r\n    font-size: 2.6rem;\r\n    margin-bottom: 2.5rem;\r\n`\r\n\r\nexport const LoggedInBadge = styled.span`\r\n\r\n`\r\n\r\nexport const SearchInputWrapper = styled.div`\r\n    width: 40%;\r\n    padding-bottom: ${NAV_HEADROOM};\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        width: 75%;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        width: 100%;\r\n    }\r\n`\r\n\r\nexport const ScrollButton = styled(HashLink)`\r\n    position: absolute;\r\n    bottom: 2rem;\r\n    left: 50%;\r\n    color: ${COLORS.blue};\r\n    cursor: pointer;\r\n    font-size: 4rem;\r\n    outline: none;\r\n`\r\n\r\nexport const InfoSection = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr;\r\n    grid-gap: 1rem;\r\n    padding: 2rem 0;\r\n    border-top: 1px solid #ddd;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr 1fr;\r\n    }\r\n\r\n    @media (max-width: ${BREAKPOINTS.sm}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n`\r\n\r\nexport const InfoCard = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    border: 2px solid ${COLORS.blue};\r\n    border-radius: 1rem;\r\n`\r\n\r\nexport const InfoCardIcon = styled.div`\r\n    color: ${COLORS.blue};\r\n    font-size: 5rem;\r\n    padding-bottom: 1.5rem;\r\n`\r\n\r\nexport const InfoCardText = styled.div`\r\n    width: 100%;\r\n    text-align: justify;\r\n`\r\n\r\nexport const PopularProfiles = styled.div`\r\n    padding: 2rem 0;\r\n    border-top: 1px solid #ddd;\r\n    position: relative;\r\n`\r\n\r\nexport const PopularProfilesInner = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr;\r\n    grid-gap: 1rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n    }\r\n    \r\n`\r\n\r\nexport const SectionTitle = styled.div`\r\n    color: ${COLORS.darkblue};\r\n    padding: 1rem 0;\r\n    padding-left: 1rem;\r\n    font-size: 2rem;\r\n`\r\n\r\nexport const PopularProfilesCard = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    flex-direction: column;\r\n    padding: 1rem;\r\n    border: 2px solid ${COLORS.blue};\r\n    border-radius: 1rem;\r\n`\r\n\r\nexport const PopularProfilesCardName = styled.div`\r\n    color: ${COLORS.blue};\r\n    font-size: 2.2rem;\r\n    padding: 1rem 0;\r\n`\r\n\r\nexport const PopularProfilesCardCity = styled.div`\r\n    color: ${COLORS.black};\r\n    font-size: 1.4rem;\r\n    padding-bottom: 1rem;\r\n`\r\n\r\nexport const LogSection = styled.div`\r\n    padding: 2rem 0;\r\n    border-top: 1px solid #ddd;\r\n`\r\n","import styled, { keyframes } from 'styled-components';\r\nimport { COLORS } from '../../styles/variables';\r\n\r\nconst show = keyframes`\r\n    from {\r\n        opacity: 0;\r\n    }\r\n    to {\r\n        opacity: 0.7;\r\n    }\r\n`\r\n\r\nexport const FooterStyled = styled.footer`\r\n    background: ${COLORS.white};\r\n    bottom: 0;\r\n    width: 100%;\r\n    border-top: 1px solid #ddd;\r\n    margin-top: 2rem;\r\n    box-shadow:\r\n    0 -4.5px 41.3px 8px rgba(0, 0, 0, 0.034),\r\n    0 -7.2px 48.5px 8px rgba(0, 0, 0, 0.043),\r\n    0 -6.6px 52.6px 8px rgba(0, 0, 0, 0.053),\r\n    0 14px 80px 8px rgba(0, 0, 0, 0.07)\r\n    ;\r\n    opacity: 0;\r\n\r\n\r\n    animation-name: ${show };\r\n    animation-delay: 1s;\r\n    animation-duration: 1s;\r\n    animation-iteration-count: 1;\r\n    animation-fill-mode: forwards;\r\n\r\n`\r\n\r\nexport const FooterStyledInner = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 1rem 0;\r\n`","import React from \"react\";\r\nimport { FooterStyled, FooterStyledInner } from \"./Footer.styled\";\r\nimport { ContainerFluid } from \"../SharedStyledComponents/ContainerFluid.styled\";\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <FooterStyled>\r\n            <ContainerFluid>\r\n                <FooterStyledInner>\r\n                    <div>Praca inżynierska Artur Iwiński</div>\r\n                    <div>PŁ 2020</div>\r\n                </FooterStyledInner>\r\n            </ContainerFluid>\r\n        </FooterStyled>\r\n    );\r\n};\r\n\r\nexport default Footer;","import styled from 'styled-components'\r\n\r\nexport const NoteStyled = styled.div`\r\n    border: 1px solid #ddd;\r\n    padding: 0.5rem;\r\n    position: relative;\r\n    margin-bottom: 0.5rem;\r\n    :hover {\r\n        background: #f3f3f3;\r\n    }\r\n`\r\n\r\nexport const DateBadge = styled.div`\r\n    font-size: 1.2rem;\r\n    color: #333;\r\n`\r\n\r\nexport const Content = styled.div`\r\n    font-size: 1.6rem;\r\n`\r\n\r\nexport const DeleteButton = styled.p`\r\n    font-size: 12px;\r\n    border: none;\r\n    background: #d11;\r\n    color: white;\r\n    border-radius: 6px;\r\n    font-weight: bold;\r\n    width: 2.4rem;\r\n    height: 2.4rem;\r\n    cursor: pointer;\r\n    vertical-align: middle;\r\n    text-align: center;\r\n    display: inline-block;\r\n    padding-bottom: 1rem;\r\n`\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    padding-bottom: 0.5rem;\r\n    margin-bottom: 0.5rem;\r\n    border-bottom: 1px solid #ddd;\r\n`","import styled from 'styled-components'\r\nimport { BREAKPOINTS, COLORS } from '../../styles/variables'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const DashboardStyled = styled.div`\r\n    min-height: 100vh;\r\n    position: relative;\r\n`\r\n\r\nexport const DashboardStyledInner = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    margin-top: 1rem;\r\n`\r\n\r\nexport const NotesList = styled.div`\r\n    border: 1px solid #eee;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n`\r\n\r\nexport const PatientList = styled.div`\r\n    border: 1px solid #eee;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n    width: 100%;\r\n`\r\n\r\nexport const PatientCard = styled.div`\r\n    border: 1px solid #ddd;\r\n    padding: 0.5rem;\r\n    border-radius: 6px;\r\n    margin-bottom: 0.5rem;\r\n    padding-bottom: 0.5rem;\r\n\r\n    :hover {\r\n        background: #f3f3f3;\r\n    }\r\n`\r\n\r\nexport const NotesAndPatientsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    grid-gap: 0.5rem;\r\n    border: 1px solid #ccc;\r\n    padding: 0.5rem;\r\n\r\n    @media (max-width: ${BREAKPOINTS.md}) {\r\n        grid-template-columns: 1fr;\r\n        padding: 0;\r\n    }\r\n`\r\n\r\nexport const Container = styled.div`\r\n    border: 1px solid #ccc;\r\n    padding: 0.5rem;\r\n`\r\n\r\nexport const AddPatientButton = styled(Link)`\r\n    width: 100%;\r\n    background: none;\r\n    border: none;\r\n    padding: 1rem 2rem;\r\n    color: white;\r\n    cursor: pointer;\r\n    background: ${COLORS.blue};\r\n    border-radius: 5px;\r\n    transition: background 0.2s;\r\n    text-decoration: none;\r\n    display: block;\r\n    text-align: center;\r\n    margin: 0.5rem 0;\r\n    font-size: 1.4rem;\r\n\r\n    :hover {\r\n        background: ${COLORS.darkblue};\r\n    }\r\n`","import React from \"react\";\r\nimport { NoteStyled, DateBadge, Content, DeleteButton, Container } from \"./Note.styled\";\r\nimport { Patient } from \"../../../api\";\r\nimport moment from \"moment\";\r\n\r\ntype Props = {\r\n    createdAt: any;\r\n    content: string;\r\n    onNoteDelete: (id: string) => void;\r\n    id: string;\r\n};\r\n\r\nconst Note = (props: Props) => {\r\n    const onDelete = (id: string) => {\r\n        Patient.deleteNote(id)\r\n            .then(res => {\r\n                props.onNoteDelete(id);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n    };\r\n    return (\r\n        <NoteStyled>\r\n            <Container>\r\n                <DateBadge>{moment.utc(props.createdAt).local().format(\"DD-MM-YYYY HH:mm\")}</DateBadge>\r\n                <DeleteButton onClick={() => onDelete(props.id)}>x</DeleteButton>\r\n            </Container>\r\n\r\n            <Content>{props.content}</Content>\r\n        </NoteStyled>\r\n    );\r\n};\r\n\r\nexport default Note;\r\n","import styled from 'styled-components'\r\nimport { Form } from 'formik'\r\n\r\nexport const NoteFormStyled = styled(Form)`\r\n\r\n`","import React from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport { NoteFormStyled } from \"./NoteForm.styled\";\r\nimport { SubmitButton, FormGroup, LabelStyled, FieldStyled } from \"../../SharedStyledComponents/Form.styled\";\r\nimport { Patient } from \"../../../api\";\r\n\r\ntype Props = {\r\n    patientId?: string;\r\n    onNoteAdd: (note: any) => void;\r\n};\r\n\r\nconst NoteForm = (props: Props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                content: \"\"\r\n            }}\r\n            onSubmit={(values, { setFieldValue }) => {\r\n                console.log(values);\r\n                Patient.addNote({\r\n                    ...values,\r\n                    patientId: props.patientId\r\n                })\r\n                    .then(res => {\r\n                        console.log(res);\r\n                        props.onNoteAdd(res.data.note);\r\n                        setFieldValue(\"content\", \"\");\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    });\r\n            }}\r\n            render={() => (\r\n                <NoteFormStyled>\r\n                    <FormGroup>\r\n                        <LabelStyled htmlFor=\"content\">Notatka</LabelStyled>\r\n                        <FieldStyled name=\"content\" placeholder=\"Notatka...\" id=\"content\" />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <SubmitButton type=\"submit\">Dodaj notatkę</SubmitButton>\r\n                    </FormGroup>\r\n                </NoteFormStyled>\r\n            )}\r\n        />\r\n    );\r\n};\r\n\r\nexport default NoteForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    DashboardStyled,\r\n    DashboardStyledInner,\r\n    NotesList,\r\n    PatientList,\r\n    PatientCard,\r\n    NotesAndPatientsContainer,\r\n    Container,\r\n    AddPatientButton\r\n} from \"./Dashboard.styled\";\r\nimport { ContainerFluid } from \"../../components/SharedStyledComponents/ContainerFluid.styled\";\r\nimport { LineChart, Line, XAxis, YAxis, ResponsiveContainer } from \"recharts\";\r\nimport { Profile, Patient } from \"../../api\";\r\nimport { connect } from \"react-redux\";\r\nimport { ApplicationState } from \"../../store\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport NoteForm from \"../../components/Notes/NoteForm/NoteForm\";\r\nimport Note from \"../../components/Notes/Note/Note\";\r\nimport { LinkStyled } from \"../../components/Navbar/Navbar.styled\";\r\nimport moment from \"moment\";\r\nimport { SectionTitle } from \"../Home/Home.styled\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\n\r\ntype Props = ReturnType<typeof mapStateToProps>;\r\n\r\nconst Dashboard = (props: Props) => {\r\n    const [report, setReport] = useState([] as any[]);\r\n    const [notes, setNotes] = useState([] as any[]);\r\n    const [isNotesFetching, setNotesFetching] = useState(true);\r\n    const [isPatientsFetching, setPatientsFetching] = useState(true);\r\n    const [patients, setPatients] = useState([] as any[]);\r\n\r\n    useEffect(() => {\r\n        Profile.getReport(30, props.profileId)\r\n            .then(res => {\r\n                console.log(res);\r\n                const result = res.data.report.map((r: any) => {\r\n                    return {\r\n                        ...r,\r\n                        day: moment\r\n                            .utc(r.day)\r\n                            .local()\r\n                            .format(\"DD-MM-YYYY\")\r\n                    };\r\n                });\r\n                setReport(result);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n\r\n        Patient.getNotes()\r\n            .then(res => {\r\n                console.log(res);\r\n                setNotes(res.data.notes);\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setNotesFetching(false);\r\n            });\r\n\r\n        Patient.getPatients()\r\n            .then(res => {\r\n                setPatients(res.data.patients);\r\n            })\r\n            .catch(err => {\r\n                setNotesFetching(false);\r\n                console.log(err);\r\n            })\r\n            .finally(() => {\r\n                setPatientsFetching(false);\r\n            });\r\n    }, []);\r\n\r\n    const onNoteAdd = (note: any) => {\r\n        setNotes([...notes, note]);\r\n    };\r\n\r\n    const onNoteDelete = (id: string) => {\r\n        setNotes(notes.filter(e => e.id !== id));\r\n    };\r\n\r\n    return (\r\n        <DashboardStyled>\r\n            <ContainerFluid>\r\n                <DashboardStyledInner>\r\n                    <Container>\r\n                        <SectionTitle>Liczba wejść na profil w ciągu ostatnich 30 dni</SectionTitle>\r\n                        {report.length ? (\r\n                            <ResponsiveContainer width=\"100%\" height={300}>\r\n                                <LineChart data={report.reverse()} margin={{ top: 5, right: 0, left: 0, bottom: 5 }}>\r\n                                    <Line type=\"monotone\" dataKey=\"summary\" />\r\n                                    <XAxis dataKey=\"day\" />\r\n                                    <YAxis />\r\n                                </LineChart>\r\n                            </ResponsiveContainer>\r\n                        ) : (\r\n                            <Loader></Loader>\r\n                        )}\r\n                    </Container>\r\n                    <NotesAndPatientsContainer>\r\n                        <Container>\r\n                            <SectionTitle>Notatki</SectionTitle>\r\n                            {!isNotesFetching ? (\r\n                                <NotesList>\r\n                                    {notes.map((note, index) => {\r\n                                        return (\r\n                                            <Note\r\n                                                createdAt={note.createdAt}\r\n                                                content={note.content}\r\n                                                key={index}\r\n                                                id={note.id}\r\n                                                onNoteDelete={onNoteDelete}\r\n                                            ></Note>\r\n                                        );\r\n                                    })}\r\n                                </NotesList>\r\n                            ) : (\r\n                                <Loader></Loader>\r\n                            )}\r\n                            <NoteForm onNoteAdd={onNoteAdd}></NoteForm>\r\n                        </Container>\r\n                        <Container>\r\n                            <SectionTitle>Moi pacjenci</SectionTitle>\r\n                            {!isPatientsFetching ? (\r\n                                <PatientList>\r\n                                    {patients.map((p, index) => {\r\n                                        return (\r\n                                            <PatientCard>\r\n                                                <LinkStyled to={\"/patient-details/\" + p.id}>\r\n                                                    {p.firstName + \" \" + p.lastName}\r\n                                                </LinkStyled>\r\n                                            </PatientCard>\r\n                                        );\r\n                                    })}\r\n                                    <AddPatientButton to=\"/add-patient\">Dodaj nowego pacjenta</AddPatientButton>\r\n                                </PatientList>\r\n                            ) : (\r\n                                <Loader></Loader>\r\n                            )}\r\n                        </Container>\r\n                    </NotesAndPatientsContainer>\r\n                </DashboardStyledInner>\r\n            </ContainerFluid>\r\n            <Footer></Footer>\r\n        </DashboardStyled>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state: ApplicationState) => {\r\n    return {\r\n        profileId: state.auth.currentUser.profileId\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(Dashboard);\r\n"],"sourceRoot":""}